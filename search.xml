<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title>编译xxl-job-2.1.2</title>
    <url>/pages/task-sheduling/upgrade-xxl-job/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\pages\assets\css\APlayer.min.css"><script src="\pages\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><hr>
<blockquote>
<p>xxl-job-2.0.2 只有一个admin用户，不能设置创建多个账号，v2.1.2版可以创建多个。</p>
</blockquote>
<p><img src="/assets/images2020/upgrade-xxl-job.assets/1579404329759.png" alt="xxl-job首页"></p>
<a id="more"></a>
<h2 id="运行一个maven容器"><a href="#运行一个maven容器" class="headerlink" title="运行一个maven容器"></a>运行一个maven容器</h2><p>docker-compose.yml如下：</p>
<figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="attr">mvn:</span></span><br><span class="line">  <span class="attr">image:</span> <span class="string">maven:3.5-jdk-8-alpine</span></span><br><span class="line">  <span class="attr">volumes:</span></span><br><span class="line">    <span class="bullet">-</span> <span class="string">./data:/data</span>		<span class="comment"># 源码包xxl-job-2.1.2.tar.gz在./data下</span></span><br><span class="line">  <span class="attr">command:</span> <span class="string">["tail",</span> <span class="string">"-f"</span><span class="string">,</span> <span class="string">"/dev/null"</span><span class="string">]</span></span><br></pre></td></tr></table></figure>
<p>或者</p>
<figure class="highlight sh"><table><tr><td class="code"><pre><span class="line">docker run -d --name mvn3 maven:3.5-jdk-8-alpine tail -f /dev/null</span><br><span class="line"><span class="comment"># 复制源码包到容器/data目录中</span></span><br><span class="line">docker cp data/xxl-job-2.1.2.tar.gz mvn3:/data/</span><br></pre></td></tr></table></figure>
<h2 id="进入容器编译"><a href="#进入容器编译" class="headerlink" title="进入容器编译"></a>进入容器编译</h2><figure class="highlight sh"><table><tr><td class="code"><pre><span class="line">docker <span class="built_in">exec</span> -it mvn3 bash</span><br><span class="line"><span class="comment"># 编包</span></span><br><span class="line"><span class="built_in">cd</span> /data/xxl-job-&#123;版本号&#125;</span><br><span class="line">mvn clean package</span><br><span class="line"><span class="comment"># 拷包</span></span><br><span class="line">mkdir target</span><br><span class="line">mv xxl-job-admin/target/*.jar target/</span><br><span class="line">mv xxl-job-executor-samples/xxl-job-executor-sample-springboot/target/*.jar target/</span><br></pre></td></tr></table></figure>
<p><img src="/assets/images2020/upgrade-xxl-job.assets/1579251741156.png" alt="编译成功-效果图"></p>
<p><img src="/assets/images2020/upgrade-xxl-job.assets/1579252048628.png" alt="拷包到一个目录中"></p>
<p>将其从容器中拷贝到宿主机目录下：</p>
<p><img src="/assets/images2020/upgrade-xxl-job.assets/1579252125212.png" alt="拷包到宿主机"></p>
<p>停止xxl-job，替换原相应的所有jar包并重新启动。</p>
<p><strong>升级失败</strong></p>
<p>替换jar包并重新启动，发现启动失败。经分析是版本之间 数据库 的设计发生较大变化。因未提供数据迁移功能，通过手动复制旧版本的所有任务到新版本重建任务，完成本次升级过程。</p>
<h2 id="supervisord配置"><a href="#supervisord配置" class="headerlink" title="supervisord配置"></a>supervisord配置</h2><p>执行器（作为客户端）：</p>
<figure class="highlight ini"><table><tr><td class="code"><pre><span class="line"><span class="section">[program:xxl-job-executor]</span></span><br><span class="line"><span class="attr">command</span>=java -jar /srv/xxl-job-executor-sample-springboot-<span class="number">2.1</span>.<span class="number">2</span>.jar --server.port=<span class="number">10080</span> --xxl.job.executor.ip=<span class="number">10.1</span>.<span class="number">7.211</span>  --xxl.job.executor.port=<span class="number">9999</span> --xxl.job.admin.addresses=https://job.keep.com/xxl-job-admin --xxl.job.executor.appname=xxl-job-executor-<span class="number">7</span>-<span class="number">211</span></span><br><span class="line"><span class="attr">directory</span>=/srv</span><br><span class="line"><span class="attr">user</span>=root</span><br><span class="line"><span class="attr">startsecs</span>=<span class="number">3</span></span><br><span class="line"><span class="attr">redirect_stderr</span>=<span class="literal">true</span></span><br><span class="line"><span class="attr">stdout_logfile_maxbytes</span>=<span class="number">50</span>MB</span><br><span class="line"><span class="attr">stdout_logfile_backups</span>=<span class="number">3</span></span><br><span class="line"><span class="attr">stdout_logfile</span>=/var/log/xxl-job-executor.log</span><br></pre></td></tr></table></figure>
<p>调度服务（作为服务端）：</p>
<figure class="highlight ini"><table><tr><td class="code"><pre><span class="line"><span class="section">[program:xxl-job-admin_212]</span></span><br><span class="line"><span class="attr">command</span>=java -jar /srv/xxl-target-<span class="number">2.1</span>.<span class="number">2</span>/xxl-job-admin-<span class="number">2.1</span>.<span class="number">2</span>.jar --spring.datasource.url=jdbc:mysql://<span class="number">127.0</span>.<span class="number">0.1</span>:<span class="number">3306</span>/xxl_job?Unicode=<span class="literal">true</span>&amp;characterEncoding=UTF-<span class="number">8</span> --spring.datasource.username=root --spring.datasource.password=mysql@dmin --server.port=<span class="number">8080</span></span><br><span class="line"><span class="attr">directory</span>=/srv</span><br><span class="line"><span class="attr">user</span>=root</span><br><span class="line"><span class="attr">startsecs</span>=<span class="number">3</span></span><br><span class="line"><span class="attr">redirect_stderr</span>=<span class="literal">true</span></span><br><span class="line"><span class="attr">stdout_logfile_maxbytes</span>=<span class="number">50</span>MB</span><br><span class="line"><span class="attr">stdout_logfile_backups</span>=<span class="number">3</span></span><br><span class="line"><span class="attr">stdout_logfile</span>=/var/log/xxl-job-admin.log</span><br></pre></td></tr></table></figure>
]]></content>
      <categories>
        <category>任务调度</category>
      </categories>
      <tags>
        <tag>Job</tag>
      </tags>
  </entry>
  <entry>
    <title>通过Gitlab发布Gitbook</title>
    <url>/pages/cicd/publish-gitbook/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\pages\assets\css\APlayer.min.css"><script src="\pages\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><hr>
<p><img src="/assets/images2020/publish-gitbook.assets/1578983279168.png" alt="发布效果图"></p>
<a id="more"></a>
<h2 id="安装git客户端"><a href="#安装git客户端" class="headerlink" title="安装git客户端"></a>安装git客户端</h2><p>Windows版Git客户端：<a href="https://gitforwindows.org/" target="_blank" rel="noopener">https://gitforwindows.org/</a></p>
<h2 id="创建gitbook项目docs"><a href="#创建gitbook项目docs" class="headerlink" title="创建gitbook项目docs"></a>创建gitbook项目docs</h2><p>gitbook项目docs的目录结构：</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">docs                 # 仓库根目录</span><br><span class="line">├── book.json        # gitbook配置文件</span><br><span class="line">├── deploy/          # 存放部署脚本</span><br><span class="line">├── .gitlab-ci.yml   # gitlab ci配置文件</span><br><span class="line">├── Dockerfile       # docker镜像编译脚本</span><br><span class="line">├── docs/            # 文档集中存放目录</span><br><span class="line">│   ├── assets/              # 图片目录</span><br><span class="line">│   ├── cicd/                # 持续集成</span><br><span class="line">│   ├── deployment/          # 应用部署</span><br><span class="line">│   ├── task-sheduling/      # 任务调度</span><br><span class="line">│   ├── config-management/   # 配置管理</span><br><span class="line">│   └── monitoring/          # 运维监控</span><br><span class="line">├── README.md    # 书籍首页</span><br><span class="line">├── styles/      # css文件</span><br><span class="line">└── SUMMARY.md   # 书籍目录文件</span><br></pre></td></tr></table></figure>
<h2 id="克隆gitbook项目"><a href="#克隆gitbook项目" class="headerlink" title="克隆gitbook项目"></a>克隆gitbook项目</h2><p>已安装好git客户端，空白处右键如图打开git客户端：</p>
<p><img src="/assets/images2020/publish-gitbook.assets/1578986400937.png" alt="打开git客户端"></p>
<p>git clone 项目文件到本地：</p>
<p><img src="/assets/images2020/publish-gitbook.assets/15789738968739.png" alt="git clone"></p>
<h2 id="添加一个文档"><a href="#添加一个文档" class="headerlink" title="添加一个文档"></a>添加一个文档</h2><p>以下在原项目的docs/else目录下添加一个文档<code>es-maximum-shards.md</code></p>
<p><img src="/assets/images2020/publish-gitbook.assets/1578975378145.png" alt="添加文档"></p>
<p>并修改书籍目录</p>
<p><img src="/assets/images2020/publish-gitbook.assets/1578987800016.png" alt="修改目录"></p>
<h2 id="添加修改、提交、推送"><a href="#添加修改、提交、推送" class="headerlink" title="添加修改、提交、推送"></a>添加修改、提交、推送</h2><ul>
<li>查看、添加改动</li>
</ul>
<p><img src="/assets/images2020/publish-gitbook.assets/15789754833155.png" alt="查看"></p>
<p><img src="/assets/images2020/publish-gitbook.assets/15789756132226.png" alt="添加改动"></p>
<ul>
<li><p>提交到本地版本库、推送到远程版本库（master分支）</p>
<p>git commit 提交时，”-m”参数写一点简明的备注信息。</p>
</li>
</ul>
<p><img src="/assets/images2020/publish-gitbook.assets/15789758161982.png" alt="提交"></p>
<h2 id="自动构建、发布"><a href="#自动构建、发布" class="headerlink" title="自动构建、发布"></a>自动构建、发布</h2><p>git push成功之后，在gitlab上可以查看构建进度：</p>
<p><img src="/assets/images2020/publish-gitbook.assets/1578988387980.png" alt="构建进度"></p>
]]></content>
      <categories>
        <category>CICD</category>
      </categories>
      <tags>
        <tag>CICD</tag>
        <tag>Gitbook</tag>
      </tags>
  </entry>
  <entry>
    <title>Y-API的安装步骤</title>
    <url>/pages/deployment/else/ins_yapi/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\pages\assets\css\APlayer.min.css"><script src="\pages\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><hr>
<h2 id="安装-NodeJS"><a href="#安装-NodeJS" class="headerlink" title="安装 NodeJS"></a>安装 NodeJS</h2><figure class="highlight sh"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 安装 nodeJs</span></span><br><span class="line">wget https://nodejs.org/dist/v12.14.1/node-v12.14.1-linux-x64.tar.xz</span><br><span class="line">tar -xf node-v12.14.1-linux-x64.tar.xz -C /usr/<span class="built_in">local</span>/</span><br><span class="line">chown -R root:root /usr/<span class="built_in">local</span>/node-v12.14.1-linux-x64</span><br><span class="line"></span><br><span class="line"><span class="comment"># 设置环境变量 /etc/profile</span></span><br><span class="line"><span class="built_in">export</span> PATH=/usr/<span class="built_in">local</span>/node-v12.14.1-linux-x64/bin:<span class="variable">$PATH</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 检查node版本</span></span><br><span class="line">node --version</span><br></pre></td></tr></table></figure>
<a id="more"></a>
<h2 id="安装-MongoDB"><a href="#安装-MongoDB" class="headerlink" title="安装 MongoDB"></a>安装 MongoDB</h2><figure class="highlight sh"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 安装 mongodb</span></span><br><span class="line">cat &lt;&lt;EOF &gt; /etc/yum.repos.d/mongo.repo</span><br><span class="line">[mongodb-org-4.0]</span><br><span class="line">name=MongoDB Repository</span><br><span class="line">baseurl=https://repo.mongodb.org/yum/redhat/<span class="variable">$releasever</span>/mongodb-org/4.0/x86_64/</span><br><span class="line">gpgcheck=1</span><br><span class="line">enabled=1</span><br><span class="line">gpgkey=https://www.mongodb.org/static/pgp/server-4.0.asc</span><br><span class="line">EOF</span><br><span class="line">yum install -y mongodb-org</span><br></pre></td></tr></table></figure>
<p>配置 <code>/etc/mongod.conf</code>：</p>
<figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="attr">systemLog:</span></span><br><span class="line">  <span class="attr">destination:</span> <span class="string">file</span></span><br><span class="line">  <span class="attr">logAppend:</span> <span class="literal">true</span></span><br><span class="line">  <span class="attr">path:</span> <span class="string">/var/log/mongodb/mongod.log</span></span><br><span class="line"><span class="attr">storage:</span></span><br><span class="line">  <span class="attr">dbPath:</span> <span class="string">/var/lib/mongo</span></span><br><span class="line">  <span class="attr">journal:</span></span><br><span class="line">    <span class="attr">enabled:</span> <span class="literal">true</span></span><br><span class="line"><span class="attr">processManagement:</span></span><br><span class="line">  <span class="attr">fork:</span> <span class="literal">true</span>  <span class="comment"># fork and run in background</span></span><br><span class="line">  <span class="attr">pidFilePath:</span> <span class="string">/var/run/mongodb/mongod.pid</span>  <span class="comment"># location of pidfile</span></span><br><span class="line">  <span class="attr">timeZoneInfo:</span> <span class="string">/usr/share/zoneinfo</span></span><br><span class="line"><span class="attr">net:</span></span><br><span class="line">  <span class="attr">port:</span> <span class="number">27017</span></span><br><span class="line">  <span class="attr">bindIp:</span> <span class="number">127.0</span><span class="number">.0</span><span class="number">.1</span>  <span class="comment"># Enter 0.0.0.0,:: to bind to all IPv4 and IPv6 addresses or, alternatively, use the net.bindIpAll setting.</span></span><br></pre></td></tr></table></figure>
<p>启动 mongod</p>
<figure class="highlight sh"><table><tr><td class="code"><pre><span class="line">systemctl <span class="built_in">enable</span> mongod		<span class="comment"># 开机自启动</span></span><br><span class="line">systemctl start mongod</span><br></pre></td></tr></table></figure>
<h2 id="安装-yapi-cli"><a href="#安装-yapi-cli" class="headerlink" title="安装 yapi-cli"></a>安装 yapi-cli</h2><figure class="highlight sh"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 安装 yapi-cli</span></span><br><span class="line">npm --registry https://registry.npm.taobao.org install express</span><br><span class="line"></span><br><span class="line"><span class="comment"># 前台测试启动yapi</span></span><br><span class="line"><span class="built_in">cd</span> /usr/<span class="built_in">local</span>/node-v12.14.1-linux-x64/my-yapi/</span><br><span class="line">node vendors/server/app.js</span><br></pre></td></tr></table></figure>
<h2 id="配置-supervisor"><a href="#配置-supervisor" class="headerlink" title="配置 supervisor"></a>配置 supervisor</h2><figure class="highlight sh"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 如果无easy_install命令</span></span><br><span class="line"><span class="comment">#wget https://files.pythonhosted.org/packages/1d/64/a18a487b4391a05b9c7f938b94a16d80305bf0369c6b0b9509e86165e1d3/setuptools-41.0.1.zip</span></span><br><span class="line"><span class="comment">#unzip setuptools-41.0.1.zip</span></span><br><span class="line"><span class="comment">#cd setuptools-41.0.1/</span></span><br><span class="line"><span class="comment">#python setup.py install</span></span><br><span class="line"><span class="comment">#cd ..</span></span><br><span class="line"><span class="comment">#rm -rf setuptools-41.0.1</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 如果无pip命令</span></span><br><span class="line"><span class="comment">#easy_install pip</span></span><br><span class="line"><span class="comment">#pip install -U pip</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># pip安装</span></span><br><span class="line">pip install supervisor</span><br><span class="line">echo_supervisord_conf &gt; /etc/supervisord.conf</span><br></pre></td></tr></table></figure>
<p>配置 <code>/etc/supervisord.d/yapi.ini</code>：</p>
<figure class="highlight ini"><table><tr><td class="code"><pre><span class="line"><span class="section">[program:yapi]</span></span><br><span class="line"><span class="attr">command</span>=/usr/local/node-v10.<span class="number">15.3</span>-linux-x64/bin/node vendors/server/app.js</span><br><span class="line"><span class="attr">directory</span>=/usr/local/node-v10.<span class="number">15.3</span>-linux-x64/my-yapi</span><br><span class="line"><span class="attr">user</span>=root</span><br><span class="line"><span class="attr">startsecs</span>=<span class="number">3</span></span><br><span class="line"><span class="attr">redirect_stderr</span>=<span class="literal">true</span></span><br><span class="line"><span class="attr">stdout_logfile_maxbytes</span>=<span class="number">50</span>MB</span><br><span class="line"><span class="attr">stdout_logfile_backups</span>=<span class="number">3</span></span><br><span class="line"><span class="attr">stdout_logfile</span>=/var/log/yapi.log</span><br></pre></td></tr></table></figure>
<p>supervisor启动yapi</p>
<figure class="highlight sh"><table><tr><td class="code"><pre><span class="line">systemctl <span class="built_in">enable</span> supervisord.service		<span class="comment"># supervisord 开机自启</span></span><br><span class="line">supervisord -c /etc/supervisord.conf</span><br><span class="line"></span><br><span class="line"><span class="comment"># 重启yapi</span></span><br><span class="line">supervisorctl restart yapi</span><br></pre></td></tr></table></figure>
<h2 id="配置-NginX"><a href="#配置-NginX" class="headerlink" title="配置 NginX"></a>配置 NginX</h2><figure class="highlight"><table><tr><td class="code"><pre><span class="line">upstream yapi443 &#123;</span><br><span class="line">        <span class="comment">#ip_hash;</span></span><br><span class="line">        server 127.0.0.1:3000;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">server &#123;</span><br><span class="line">        listen 443 ssl;</span><br><span class="line">        server_name yapi.keep.com;</span><br><span class="line">        root html;</span><br><span class="line">        index index.html index.htm;</span><br><span class="line">        ssl_certificate /etc/letsencrypt/live/keep.com/fullchain.pem;</span><br><span class="line">        ssl_certificate_key /etc/letsencrypt/live/keep.com/privkey.pem;</span><br><span class="line">        access_log /var/log/nginx/yapi.keep.com.443.access.log main;</span><br><span class="line">        error_log /var/log/nginx/yapi.keep.com.443.error.log ;</span><br><span class="line"></span><br><span class="line">        location / &#123;</span><br><span class="line">                proxy_pass          http://yapi443;</span><br><span class="line">                proxy_redirect      off;</span><br><span class="line">                proxy_set_header    Host            $host;</span><br><span class="line">                proxy_set_header    X-Real-IP       $remote_addr;</span><br><span class="line">                proxy_set_header    X-Forwarded-For $proxy_add_x_forwarded_for;</span><br><span class="line">                proxy_redirect      http://$host http://$host:$server_port;</span><br><span class="line">                add_header          Strict-Transport-Security "max-age=31536000";</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        error_page  500 502 503 504 /50x.html;</span><br><span class="line">        location = /50x.html &#123;</span><br><span class="line">                root /usr/share/nginx/html;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
]]></content>
      <categories>
        <category>其它</category>
      </categories>
      <tags>
        <tag>else</tag>
      </tags>
  </entry>
  <entry>
    <title>构建nginx-consul-template</title>
    <url>/pages/monitoring/consul/my-nginx-consul/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\pages\assets\css\APlayer.min.css"><script src="\pages\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><hr>
<figure class="highlight sh"><table><tr><td class="code"><pre><span class="line">|-- docker-compose.yml</span><br><span class="line">|-- Dockerfile</span><br><span class="line">|-- files</span><br><span class="line">|   |-- consul-template_0.20.0_linux_amd64.zip</span><br><span class="line">|   |-- nginx.conf</span><br><span class="line">|   |-- nginx.conf.ctmpl</span><br><span class="line">|   `-- nginx.sh</span><br></pre></td></tr></table></figure>
<a id="more"></a>
<p>Dockerfile:</p>
<figure class="highlight sh"><table><tr><td class="code"><pre><span class="line">FROM nginx:alpine</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment"># RUN apk update &amp;&amp; \</span></span><br><span class="line">RUN apk add --no-cache unzip</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">ENV CONSUL_TEMPLATE_VERSION 0.20.0</span><br><span class="line">ENV PACKAGE consul-template_0.20.0_linux_amd64.zip</span><br><span class="line"></span><br><span class="line"><span class="comment"># ADD https://releases.hashicorp.com/consul-template/$&#123;CONSUL_TEMPLATE_VERSION&#125;/consul-template_$&#123;CONSUL_TEMPLATE_VERSION&#125;_linux_amd64.zip /tmp/consul-template.zip</span></span><br><span class="line"></span><br><span class="line">ADD files/nginx.conf files/nginx.conf.ctmpl files/nginx.sh files/<span class="variable">$&#123;PACKAGE&#125;</span> /etc/nginx/</span><br><span class="line"></span><br><span class="line">RUN unzip /etc/nginx/<span class="variable">$&#123;PACKAGE&#125;</span> -d /usr/bin &amp;&amp; \</span><br><span class="line">    chmod +x /usr/bin/consul-template &amp;&amp; \</span><br><span class="line">    rm -f /etc/nginx/<span class="variable">$&#123;PACKAGE&#125;</span> &amp;&amp; \</span><br><span class="line">    chmod +x /etc/nginx/nginx.sh &amp;&amp; \</span><br><span class="line">    apk del unzip</span><br><span class="line"></span><br><span class="line">WORKDIR /etc/nginx</span><br><span class="line"></span><br><span class="line">ENTRYPOINT [<span class="string">"/usr/bin/consul-template"</span>]</span><br></pre></td></tr></table></figure>
<p>nginx.sh:</p>
<figure class="highlight sh"><table><tr><td class="code"><pre><span class="line"><span class="meta">#!/bin/sh</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> nginx -t &gt;/dev/null; <span class="keyword">then</span></span><br><span class="line">    <span class="keyword">if</span> [ -s /var/run/nginx.pid ]; <span class="keyword">then</span></span><br><span class="line">        nginx -s reload</span><br><span class="line">        <span class="keyword">if</span> [ $? != 0 ]; <span class="keyword">then</span></span><br><span class="line">            rm -f /var/run/nginx.pid</span><br><span class="line">            nginx -c /etc/nginx/nginx.conf</span><br><span class="line">        <span class="keyword">fi</span></span><br><span class="line">    <span class="keyword">else</span></span><br><span class="line">        nginx -c /etc/nginx/nginx.conf</span><br><span class="line">    <span class="keyword">fi</span></span><br><span class="line"><span class="keyword">fi</span></span><br></pre></td></tr></table></figure>
<p>修改nginx.conf:</p>
<figure class="highlight sh"><table><tr><td class="code"><pre><span class="line">...</span><br><span class="line">http &#123;</span><br><span class="line">	server_names_hash_bucket_size 128;</span><br><span class="line">    ...</span><br></pre></td></tr></table></figure>
<p>nginx.conf.ctmpl:</p>
<p>含http标签的会被选择</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&#123;&#123;range services&#125;&#125;</span><br><span class="line">&#123;&#123;$name := .Name&#125;&#125;</span><br><span class="line">&#123;&#123;$service := service .Name&#125;&#125;</span><br><span class="line">&#123;&#123;if in .Tags &quot;http&quot;&#125;&#125;</span><br><span class="line">upstream &#123;&#123;$name&#125;&#125; &#123;</span><br><span class="line">    &#123;&#123;range $service&#125;&#125;server &#123;&#123;.Address&#125;&#125;:&#123;&#123;.Port&#125;&#125;;</span><br><span class="line">    &#123;&#123;end&#125;&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#123;&#123;end&#125;&#125;</span><br><span class="line">&#123;&#123;end&#125;&#125;</span><br><span class="line"></span><br><span class="line">&#123;&#123;range services&#125;&#125;</span><br><span class="line">&#123;&#123;$name := .Name&#125;&#125;</span><br><span class="line">&#123;&#123;if in .Tags &quot;http&quot;&#125;&#125;</span><br><span class="line">server &#123;</span><br><span class="line">    listen 80;</span><br><span class="line">    server_name &#123;&#123;$name&#125;&#125;.&#123;&#123;env &quot;HOST_TYPE&quot;&#125;&#125;.keep.com;</span><br><span class="line">    server_name &#123;&#123;$name&#125;&#125;.keep.com;</span><br><span class="line">    root    html;</span><br><span class="line">    index    index.html index.htm;</span><br><span class="line">    </span><br><span class="line">    access_log    /var/log/nginx/&#123;&#123;$name&#125;&#125;_access.log    main;</span><br><span class="line">    </span><br><span class="line">    location / &#123;</span><br><span class="line">        proxy_pass http://&#123;&#123;$name&#125;&#125;;</span><br><span class="line">        proxy_redirect      off;</span><br><span class="line">        proxy_set_header    Host            $host;</span><br><span class="line">        proxy_set_header    X-Real-IP       $remote_addr;</span><br><span class="line">        proxy_set_header    X-Forwarded-For $proxy_add_x_forwarded_for;</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    error_page  500 502 503 504 /50x.html;</span><br><span class="line">    location = /50x.html &#123;</span><br><span class="line">        root    /usr/share/nginx/html;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line">&#123;&#123;end&#125;&#125;</span><br><span class="line">&#123;&#123;end&#125;&#125;</span><br></pre></td></tr></table></figure>
<p>docker-compose.yml:</p>
<figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="attr">version:</span> <span class="string">'3'</span></span><br><span class="line"></span><br><span class="line"><span class="attr">services:</span></span><br><span class="line">  <span class="attr">consul:</span></span><br><span class="line">    <span class="attr">image:</span> <span class="string">consul</span></span><br><span class="line">    <span class="attr">container_name:</span> <span class="string">consul</span></span><br><span class="line">    <span class="attr">environment:</span></span><br><span class="line">      <span class="attr">SERVICE_8500_NAME:</span> <span class="string">consul</span></span><br><span class="line">      <span class="attr">SERVICE_8500_TAGS:</span> <span class="string">"consul,http"</span></span><br><span class="line">    <span class="attr">ports:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="number">8400</span><span class="string">:8400</span></span><br><span class="line">      <span class="bullet">-</span> <span class="number">8500</span><span class="string">:8500</span></span><br><span class="line">      <span class="bullet">-</span> <span class="number">8600</span><span class="string">:53/udp</span></span><br><span class="line">    <span class="attr">command:</span> <span class="string">agent</span> <span class="string">-server</span> <span class="string">-client=0.0.0.0</span> <span class="string">-dev</span> <span class="string">-node=node0</span> <span class="string">-bootstrap-expect=1</span> <span class="string">-data-dir=/tmp/consul</span></span><br><span class="line"></span><br><span class="line">  <span class="attr">registrator:</span></span><br><span class="line">    <span class="attr">image:</span> <span class="string">gliderlabs/registrator</span></span><br><span class="line">    <span class="attr">depends_on:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">consul</span></span><br><span class="line">    <span class="attr">volumes:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">/var/run/docker.sock:/tmp/docker.sock</span></span><br><span class="line">    <span class="attr">command:</span> <span class="string">-internal</span> <span class="string">consul://consul:8500</span></span><br><span class="line"></span><br><span class="line">  <span class="attr">nginx-consul:</span></span><br><span class="line">    <span class="attr">image:</span> <span class="string">my-nginx-consul:alpine</span></span><br><span class="line">    <span class="attr">build:</span> <span class="string">.</span></span><br><span class="line">    <span class="attr">depends_on:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">consul</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">registrator</span></span><br><span class="line">    <span class="attr">ports:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="number">80</span><span class="string">:80</span></span><br><span class="line">    <span class="attr">volumes:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">./files/nginx.conf.ctmpl:/etc/nginx/nginx.conf.ctmpl</span></span><br><span class="line">    <span class="attr">environment:</span></span><br><span class="line">      <span class="attr">HOST_TYPE:</span> <span class="string">$&#123;HOST_TYPE&#125;</span></span><br><span class="line">    <span class="attr">command:</span> <span class="string">-consul-addr=consul:8500</span> <span class="string">-wait=3s</span> <span class="string">-template</span> <span class="string">/etc/nginx/nginx.conf.ctmpl:/etc/nginx/conf.d/app.conf:/etc/nginx/nginx.sh</span></span><br></pre></td></tr></table></figure>
]]></content>
      <categories>
        <category>Consul</category>
      </categories>
      <tags>
        <tag>Consul</tag>
      </tags>
  </entry>
  <entry>
    <title>Elasticsearch（启用用户权限控制）镜像构建过程</title>
    <url>/pages/log-analysis/es-xpack/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\pages\assets\css\APlayer.min.css"><script src="\pages\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><hr>
<h2 id="自动构建-amp-推送ES镜像"><a href="#自动构建-amp-推送ES镜像" class="headerlink" title="自动构建&amp;推送ES镜像"></a>自动构建&amp;推送ES镜像</h2><p>环境变量：</p>
<figure class="highlight sh"><table><tr><td class="code"><pre><span class="line"><span class="built_in">export</span> Harbor_AddRess=x.x.x.x</span><br><span class="line"><span class="built_in">export</span> Harbor_User=xxx</span><br><span class="line"><span class="built_in">export</span> Harbor_Pwd=xxxxxx</span><br></pre></td></tr></table></figure>
<a id="more"></a>
<p>构建新镜像：</p>
<figure class="highlight sh"><table><tr><td class="code"><pre><span class="line"><span class="meta">#!/bin/sh</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment"># 0</span></span><br><span class="line">mypath=$(<span class="built_in">cd</span> `dirname <span class="variable">$0</span>`; <span class="built_in">pwd</span>)</span><br><span class="line"><span class="built_in">echo</span> <span class="variable">$mypath</span></span><br><span class="line"></span><br><span class="line">version=<span class="variable">$1</span></span><br><span class="line">version=<span class="variable">$&#123;version:=7.5.1&#125;</span></span><br><span class="line"><span class="built_in">echo</span> <span class="string">"version: <span class="variable">$version</span>"</span></span><br><span class="line"></span><br><span class="line">mkdir <span class="variable">$version</span></span><br><span class="line">es_path=<span class="variable">$mypath</span>/<span class="variable">$version</span></span><br><span class="line"><span class="built_in">cd</span> <span class="variable">$es_path</span></span><br><span class="line"></span><br><span class="line">mkdir -p <span class="variable">$es_path</span>/&#123;src,build,install&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment"># 1</span></span><br><span class="line"><span class="built_in">cd</span> <span class="variable">$es_path</span>/src</span><br><span class="line">wget https://github.com/elastic/elasticsearch/archive/v<span class="variable">$&#123;version&#125;</span>.tar.gz</span><br><span class="line">tar -xf v<span class="variable">$&#123;version&#125;</span>.tar.gz</span><br><span class="line"></span><br><span class="line"><span class="built_in">cd</span> <span class="variable">$es_path</span>/install</span><br><span class="line">wget https://artifacts.elastic.co/downloads/elasticsearch/elasticsearch-<span class="variable">$&#123;version&#125;</span>-linux-x86_64.tar.gz</span><br><span class="line">tar -xf elasticsearch-<span class="variable">$&#123;version&#125;</span>-linux-x86_64.tar.gz</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment"># 2</span></span><br><span class="line"><span class="built_in">cd</span> <span class="variable">$es_path</span>/build</span><br><span class="line"></span><br><span class="line"><span class="comment"># lib module</span></span><br><span class="line">ln -s <span class="variable">$es_path</span>/install/elasticsearch-<span class="variable">$&#123;version&#125;</span>/lib .</span><br><span class="line">ln -s <span class="variable">$es_path</span>/install/elasticsearch-<span class="variable">$&#123;version&#125;</span>/modules .</span><br><span class="line"></span><br><span class="line"><span class="comment"># License.java</span></span><br><span class="line">find <span class="variable">$es_path</span>/src -name <span class="string">"License.java"</span> | xargs -r -I &#123;&#125; cp &#123;&#125; .</span><br><span class="line">sed -i <span class="string">'s#this.type = type;#this.type = "platinum";#g'</span> License.java</span><br><span class="line">sed -i <span class="string">'s#validate();#// validate();#g'</span> License.java</span><br><span class="line"></span><br><span class="line"><span class="comment"># compile License.java</span></span><br><span class="line">javac -cp <span class="string">"`ls lib/elasticsearch-<span class="variable">$&#123;version&#125;</span>.jar`:`ls lib/elasticsearch-x-content-<span class="variable">$&#123;version&#125;</span>.jar`:`ls lib/lucene-core-*.jar`:`ls modules/x-pack-core/x-pack-core-<span class="variable">$&#123;version&#125;</span>.jar`"</span> License.java</span><br><span class="line"><span class="built_in">echo</span> <span class="string">"=========================== License.java: in `pwd`/"</span> </span><br><span class="line"></span><br><span class="line"><span class="comment"># 3</span></span><br><span class="line"><span class="built_in">cd</span> <span class="variable">$es_path</span>/build</span><br><span class="line">mkdir src &amp;&amp; <span class="built_in">cd</span> src</span><br><span class="line"></span><br><span class="line">find <span class="variable">$es_path</span>/install -name <span class="string">"x-pack-core-<span class="variable">$&#123;version&#125;</span>.jar"</span> | xargs -r -I &#123;&#125; cp &#123;&#125; .</span><br><span class="line">jar xvf x-pack-core-<span class="variable">$&#123;version&#125;</span>.jar</span><br><span class="line">rm -f x-pack-core-<span class="variable">$&#123;version&#125;</span>.jar</span><br><span class="line">cp -f ../License*.class org/elasticsearch/license/</span><br><span class="line">jar cvf x-pack-core-<span class="variable">$&#123;version&#125;</span>.jar .</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment"># 4</span></span><br><span class="line">cat &lt;&lt;EOF &gt; Dockerfile</span><br><span class="line">FROM  elasticsearch:<span class="variable">$&#123;version&#125;</span></span><br><span class="line"></span><br><span class="line">COPY  ./x-pack-core-<span class="variable">$&#123;version&#125;</span>.jar  /usr/share/elasticsearch/modules/x-pack-core/</span><br><span class="line">EOF</span><br><span class="line"></span><br><span class="line"><span class="built_in">echo</span> <span class="string">"docker build elasticsearch by running:"</span></span><br><span class="line"><span class="built_in">echo</span> <span class="string">"docker build -t elasticsearch:<span class="variable">$&#123;version&#125;</span> ."</span></span><br><span class="line"><span class="built_in">echo</span> <span class="string">"under current directory"</span></span><br><span class="line"><span class="built_in">echo</span></span><br><span class="line"><span class="built_in">echo</span> <span class="string">"End"</span></span><br></pre></td></tr></table></figure>
<p><em>脚本未自动运行docker build及docker push</em></p>
<h2 id="升级ELK"><a href="#升级ELK" class="headerlink" title="升级ELK"></a>升级ELK</h2><ol>
<li>ES镜像改用新构建的elasticsearch:7.5.1</li>
</ol>
<ol start="2">
<li><p>设置Kibana中文:</p>
<p>修改Kibana配置文件kibana.yml</p>
</li>
</ol>
<figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="attr">server.name:</span> <span class="string">kibana</span></span><br><span class="line"><span class="attr">server.host:</span> <span class="string">"0"</span></span><br><span class="line"><span class="attr">elasticsearch.hosts:</span> <span class="string">[</span> <span class="string">"http://elasticsearch:9200"</span> <span class="string">]</span></span><br><span class="line"><span class="attr">xpack.monitoring.ui.container.elasticsearch.enabled:</span> <span class="literal">true</span></span><br><span class="line"><span class="attr">elasticsearch.username:</span> <span class="string">xxx</span></span><br><span class="line"><span class="attr">elasticsearch.password:</span> <span class="string">xxxxxx</span></span><br><span class="line"><span class="attr">elasticsearch.requestTimeout:</span> <span class="number">90000</span></span><br><span class="line"><span class="attr">i18n.locale:</span> <span class="string">"zh-CN"</span></span><br></pre></td></tr></table></figure>
]]></content>
      <categories>
        <category>ELK</category>
      </categories>
      <tags>
        <tag>ELK</tag>
      </tags>
  </entry>
  <entry>
    <title>MySQL监控接入</title>
    <url>/pages/monitoring/prometheus/monitoring-mysql/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\pages\assets\css\APlayer.min.css"><script src="\pages\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><hr>
<blockquote>
<p>Percona Monitoring and Management (PMM)是一款开源的MySQL、MongoDB性能监控工具，PMM客户端负责收集DB监控数据，PMM服务端从已连接的客户端拉取数据，并通过第三方软件Grafana展示图表。</p>
</blockquote>
<a id="more"></a>
<h2 id="安装pmm-client"><a href="#安装pmm-client" class="headerlink" title="安装pmm-client"></a>安装pmm-client</h2><figure class="highlight sh"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 安装pmm-client</span></span><br><span class="line">yum install https://www.percona.com/downloads/pmm/1.1.1/binary/redhat/7/x86_64/pmm-client-1.1.1-1.x86_64.rpm</span><br></pre></td></tr></table></figure>
<h2 id="配置服务端"><a href="#配置服务端" class="headerlink" title="配置服务端"></a>配置服务端</h2><p>目前统一由PMM服务端<strong>10.1.100.200</strong>管理数据库监控任务。</p>
<p>在mysql端执行：</p>
<figure class="highlight sh"><table><tr><td class="code"><pre><span class="line">pmm-admin config --server 10.1.100.200 --<span class="built_in">bind</span>-address=&lt;当前mysql实例IP地址&gt; --client-address=&lt;当前mysql实例IP地址&gt; --client-name=&lt;自定义客户端名称&gt;</span><br></pre></td></tr></table></figure>
<p>示例：</p>
<figure class="highlight sh"><table><tr><td class="code"><pre><span class="line">pmm-admin config --server 10.1.100.200 --<span class="built_in">bind</span>-address=192.168.101.68 --client-address=192.168.101.68 --client-name=Production</span><br></pre></td></tr></table></figure>
<p>执行后会保存到文件<code>/usr/local/percona/pmm-client/pmm.yml</code>：</p>
<figure class="highlight sh"><table><tr><td class="code"><pre><span class="line">[root@b68-docker-prd pmm]<span class="comment"># cat /usr/local/percona/pmm-client/pmm.yml</span></span><br><span class="line">server_address: 10.1.100.200</span><br><span class="line">client_address: 192.168.101.68</span><br><span class="line">bind_address: 192.168.101.68</span><br><span class="line">client_name: Production</span><br></pre></td></tr></table></figure>
<h2 id="添加mysql"><a href="#添加mysql" class="headerlink" title="添加mysql"></a>添加mysql</h2><figure class="highlight sh"><table><tr><td class="code"><pre><span class="line">pmm-admin add mysql --user &lt;mysql用户名&gt; --password &lt;mysql密码&gt; --host &lt;mysql实例IP地址&gt; --port &lt;mysql端口&gt; &lt;自定义本实例的名称&gt;</span><br></pre></td></tr></table></figure>
<p>示例：</p>
<figure class="highlight sh"><table><tr><td class="code"><pre><span class="line">pmm-admin add mysql --user root --password xxxxxx --host 192.168.101.68 --port 3306 client-production-3306</span><br></pre></td></tr></table></figure>
<h2 id="查看配置"><a href="#查看配置" class="headerlink" title="查看配置"></a>查看配置</h2><figure class="highlight sh"><table><tr><td class="code"><pre><span class="line">[root@b68-docker-prd pmm]<span class="comment"># pmm-admin list</span></span><br><span class="line">pmm-admin 1.1.1</span><br><span class="line"></span><br><span class="line">PMM Server      | 10.1.100.200</span><br><span class="line">Client Name     | Production</span><br><span class="line">Client Address  | 192.168.101.68</span><br><span class="line">Service Manager | linux-systemd</span><br><span class="line"></span><br><span class="line">-------------- ----------------------- ----------- -------- ---------------------------------- ------------------------</span><br><span class="line">SERVICE TYPE   NAME                    LOCAL PORT  RUNNING  DATA SOURCE                        OPTIONS</span><br><span class="line">-------------- ----------------------- ----------- -------- ---------------------------------- ------------------------</span><br><span class="line">mysql:queries  client-production-3306  -           YES      root:***@tcp(192.168.101.68:3306)  query_source=perfschema</span><br><span class="line">linux:metrics  client-production-3306  42000       YES      -                   </span><br><span class="line">mysql:metrics  client-production-3306  42002       YES      root:***@tcp(192.168.101.68:3306)</span><br></pre></td></tr></table></figure>
<h2 id="图表"><a href="#图表" class="headerlink" title="图表"></a>图表</h2><p>数据接入成功后</p>
<ul>
<li>查询分析页面：<a href="http://10.1.100.200/qan/" target="_blank" rel="noopener">http://10.1.100.200/qan/</a></li>
</ul>
<p><img src="/assets/images2019/mysql-monitor-steps.assets/1560845119682.png" alt="1560845119682"></p>
<ul>
<li>监控图表页面：<a href="http://10.1.100.200/graph" target="_blank" rel="noopener">http://10.1.100.200/graph</a></li>
</ul>
<p><img src="/assets/images2019/mysql-monitor-steps.assets/1560845433306.png" alt="1560845433306"></p>
<hr>
<p>官方文档：<a href="https://www.percona.com/doc/percona-monitoring-and-management/conf-mysql.html" target="_blank" rel="noopener">https://www.percona.com/doc/percona-monitoring-and-management/conf-mysql.html</a></p>
]]></content>
      <categories>
        <category>监控</category>
      </categories>
      <tags>
        <tag>MySQL</tag>
        <tag>Prometheus</tag>
      </tags>
  </entry>
  <entry>
    <title>任务调度</title>
    <url>/pages/task-sheduling/xxl-job/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\pages\assets\css\APlayer.min.css"><script src="\pages\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><hr>
<blockquote>
<p>分布式调度在互联网企业中占据着十分重要的作用，尤其是电子商务领域，由于存在数据量大、高并发的特点，对数据处理的要求较高，既要保证高效性，也要保证准确性和安全性，相对比较耗时的业务逻辑往往会从中剥离开来进行异步处理。</p>
</blockquote>
<a id="more"></a>
<hr>
<p>下列是几款优秀和极具潜力的国产开源分布式任务调度系统：</p>
<p><strong>opencron</strong></p>
<p><a href="https://www.oschina.net/p/opencron" target="_blank" rel="noopener">opencron</a> 是一个功能完善且通用的开源定时任务调度系统，拥有先进可靠的自动化任务管理调度功能，提供可操作的 web 图形化管理满足多种场景下各种复杂的定时任务调度，同时集成了 linux 实时监控、webssh 等功能特性。</p>
<p><strong>LTS</strong></p>
<p><a href="https://www.oschina.net/p/lts" target="_blank" rel="noopener">LTS</a>，light-task-scheduler，是一款分布式任务调度框架, 支持实时任务、定时任务和 Cron 任务。有较好的伸缩性和扩展性，提供对 Spring 的支持（包括 Xml 和注解），提供业务日志记录器。支持节点监控、任务执行监、JVM 监控，支持动态提交、更改、停止任务。</p>
<p><strong>xxl-job</strong></p>
<p><a href="https://www.oschina.net/p/xxl-job" target="_blank" rel="noopener">XXL-JOB</a> 是一个轻量级分布式任务调度框架，支持通过 Web 页面对任务进行 CRUD 操作，支持动态修改任务状态、暂停/恢复任务，以及终止运行中任务，支持在线配置调度任务入参和在线查看调度结果。</p>
<hr>
<h2 id="XXL-JOB"><a href="#XXL-JOB" class="headerlink" title="XXL-JOB"></a>XXL-JOB</h2><h3 id="新增执行器"><a href="#新增执行器" class="headerlink" title="新增执行器"></a>新增执行器</h3><ul>
<li><p>编译执行器项目</p>
<p>源码：<a href="https://github.com/xuxueli/xxl-job/" target="_blank" rel="noopener">https://github.com/xuxueli/xxl-job/</a></p>
</li>
</ul>
<p><img src="/assets/images2019/xxl-job.assets/1558508900842.png" alt="1558508900842"></p>
<p>xxl-job-executor-sample是通过源码配置、编译后的组件xxl-job-executor-sample-springboot运行时提供的一个server，源码中修改的位置如下：</p>
<p><img src="/assets/images2019/xxl-job.assets/1558509187649.png" alt="1558509187649"></p>
<p>执行<code>mvn clean package</code>编译打包可生成jar文件</p>
<p><img src="/assets/images2019/xxl-job.assets/1558509314582.png" alt="1558509314582"></p>
<p>然后，通过supervisor使其在后台持续运行。</p>
<ul>
<li>添加执行器到xxl-job-admin</li>
</ul>
<p><img src="/assets/images2019/xxl-job.assets/1558512727527.png" alt="1558512727527"></p>
<p>注意：AppName与编译源码时配置的appname一致，才可以自动获取机器地址（端口）。否则，手动录入。</p>
<hr>
<h3 id="添加示例任务"><a href="#添加示例任务" class="headerlink" title="添加示例任务"></a>添加示例任务</h3><p><img src="/assets/images2019/xxl-job.assets/1558511698496.png" alt="1558511698496"></p>
<p>任务设置</p>
<p><img src="/assets/images2019/xxl-job.assets/1558511749220.png" alt="1558511749220"></p>
<p><code>0 * * * * ? *</code>表示每分钟（0秒时）调度一次，因间隔短，不设置任务超时及失败重试。任务参数内填多行也是作为一个参数（$1）传递给脚本的。路由策略“第一个”表示总是在第一个OnLine机器上执行。</p>
<p>该任务的示例脚本如下：</p>
<figure class="highlight sh"><table><tr><td class="code"><pre><span class="line"><span class="meta">#!/bin/bash</span></span><br><span class="line"><span class="built_in">echo</span> <span class="string">"xxl-job: hello shell"</span></span><br><span class="line"></span><br><span class="line"><span class="built_in">echo</span> <span class="string">"脚本位置：<span class="variable">$0</span>"</span></span><br><span class="line"><span class="built_in">echo</span> <span class="string">"任务参数：<span class="variable">$1</span>"</span></span><br><span class="line"><span class="built_in">echo</span> <span class="string">"分片序号 = <span class="variable">$2</span>"</span></span><br><span class="line"><span class="built_in">echo</span> <span class="string">"分片总数 = <span class="variable">$3</span>"</span></span><br><span class="line"></span><br><span class="line">failed=0</span><br><span class="line">succeed=0</span><br><span class="line">failed_urls=<span class="string">""</span></span><br><span class="line"><span class="keyword">for</span> url <span class="keyword">in</span> <span class="variable">$1</span> <span class="comment"># 对每一行的url</span></span><br><span class="line"><span class="keyword">do</span></span><br><span class="line">  <span class="built_in">echo</span> <span class="string">"current url: [<span class="variable">$url</span>]"</span></span><br><span class="line">  status_code=$(curl -s -o /dev/null -w <span class="string">"%&#123;http_code&#125;"</span> <span class="variable">$url</span>) <span class="comment"># 检测http响应状态码</span></span><br><span class="line">  <span class="built_in">echo</span> <span class="string">"status_code: <span class="variable">$status_code</span>"</span></span><br><span class="line">  <span class="keyword">if</span> [ <span class="string">"<span class="variable">$status_code</span>"</span> -ne 200 ]; <span class="keyword">then</span></span><br><span class="line">    <span class="built_in">echo</span> <span class="string">"Failed: Access <span class="variable">$url</span> failed."</span></span><br><span class="line">    failed_urls=<span class="string">"<span class="variable">$failed_urls</span>,<span class="variable">$url</span>"</span></span><br><span class="line">    <span class="built_in">let</span> failed=failed+1 <span class="comment"># 失败+1</span></span><br><span class="line">  <span class="keyword">else</span></span><br><span class="line">    <span class="built_in">let</span> succeed=succeed+1 <span class="comment"># 成功+1</span></span><br><span class="line">  <span class="keyword">fi</span></span><br><span class="line"><span class="keyword">done</span></span><br><span class="line"></span><br><span class="line"><span class="built_in">echo</span> <span class="string">"Good bye!"</span></span><br><span class="line"><span class="built_in">echo</span> <span class="string">"Total: <span class="variable">$failed</span> failed <span class="variable">$succeed</span> succeed"</span> <span class="comment"># 日志中打印统计结果</span></span><br><span class="line"><span class="keyword">if</span> [ <span class="variable">$failed</span> -lt 0 ]; <span class="keyword">then</span></span><br><span class="line">  <span class="built_in">echo</span> <span class="string">"Failed Urls: <span class="variable">$failed_urls</span>"</span></span><br><span class="line"><span class="keyword">fi</span></span><br><span class="line"></span><br><span class="line"><span class="built_in">exit</span> <span class="variable">$failed</span> <span class="comment"># 退出状态值，非0表示失败</span></span><br></pre></td></tr></table></figure>
<p>如果执行状态失败，将发出报警邮件。</p>
<p><img src="/assets/images2019/xxl-job.assets/1558512929701.png" alt="1558512929701"></p>
]]></content>
      <categories>
        <category>任务调度</category>
      </categories>
      <tags>
        <tag>Job</tag>
      </tags>
  </entry>
  <entry>
    <title>Percona toolkit</title>
    <url>/pages/deployment/else/percona-toolkit/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\pages\assets\css\APlayer.min.css"><script src="\pages\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h2 id="安装"><a href="#安装" class="headerlink" title="安装"></a><strong>安装</strong></h2><figure class="highlight sh"><table><tr><td class="code"><pre><span class="line">wget https://www.percona.com/downloads/percona-toolkit/2.2.7/RPM/percona-toolkit-2.2.7-1.noarch.rpm</span><br><span class="line">yum install percona-toolkit-2.2.7-1.noarch.rpm -y</span><br><span class="line">yum install perl-Digest-MD5 -y</span><br></pre></td></tr></table></figure>
<a id="more"></a>
<figure class="highlight sh"><table><tr><td class="code"><pre><span class="line">Installed:</span><br><span class="line">  percona-toolkit.noarch 0:2.2.7-1                                                                                                   </span><br><span class="line"></span><br><span class="line">Dependency Installed:</span><br><span class="line">  perl.x86_64 4:5.16.3-294.el7_6                perl-Carp.noarch 0:1.26-244.el7         perl-Compress-Raw-Bzip2.x86_64 0:2.061-3.el7 </span><br><span class="line">  perl-Compress-Raw-Zlib.x86_64 1:2.061-4.el7   perl-DBD-MySQL.x86_64 0:4.023-6.el7     perl-DBI.x86_64 0:1.627-4.el7                </span><br><span class="line">  perl-Data-Dumper.x86_64 0:2.145-3.el7         perl-Encode.x86_64 0:2.51-7.el7         perl-Exporter.noarch 0:5.68-3.el7            </span><br><span class="line">  perl-File-Path.noarch 0:2.09-2.el7            perl-File-Temp.noarch 0:0.23.01-3.el7   perl-Filter.x86_64 0:1.49-3.el7              </span><br><span class="line">  perl-Getopt-Long.noarch 0:2.40-3.el7          perl-HTTP-Tiny.noarch 0:0.033-3.el7     perl-IO-Compress.noarch 0:2.061-2.el7        </span><br><span class="line">  perl-IO-Socket-IP.noarch 0:0.21-5.el7         perl-IO-Socket-SSL.noarch 0:1.94-7.el7  perl-Mozilla-CA.noarch 0:20130114-5.el7      </span><br><span class="line">  perl-Net-Daemon.noarch 0:0.48-5.el7           perl-Net-LibIDN.x86_64 0:0.12-15.el7    perl-Net-SSLeay.x86_64 0:1.55-6.el7          </span><br><span class="line">  perl-PathTools.x86_64 0:3.40-5.el7            perl-PlRPC.noarch 0:0.2020-14.el7       perl-Pod-Escapes.noarch 1:1.04-294.el7_6     </span><br><span class="line">  perl-Pod-Perldoc.noarch 0:3.20-4.el7          perl-Pod-Simple.noarch 1:3.28-4.el7     perl-Pod-Usage.noarch 0:1.63-3.el7           </span><br><span class="line">  perl-Scalar-List-Utils.x86_64 0:1.27-248.el7  perl-Socket.x86_64 0:2.010-4.el7        perl-Storable.x86_64 0:2.45-3.el7            </span><br><span class="line">  perl-Text-ParseWords.noarch 0:3.29-4.el7      perl-Time-HiRes.x86_64 4:1.9725-3.el7   perl-Time-Local.noarch 0:1.2300-2.el7        </span><br><span class="line">  perl-constant.noarch 0:1.27-2.el7             perl-libs.x86_64 4:5.16.3-294.el7_6     perl-macros.x86_64 4:5.16.3-294.el7_6        </span><br><span class="line">  perl-parent.noarch 1:0.225-244.el7            perl-podlators.noarch 0:2.5.1-3.el7     perl-threads.x86_64 0:1.87-4.el7             </span><br><span class="line">  perl-threads-shared.x86_64 0:1.43-6.el7      </span><br><span class="line"></span><br><span class="line">Complete!</span><br></pre></td></tr></table></figure>
<h2 id="权限"><a href="#权限" class="headerlink" title="权限"></a><strong>权限</strong></h2><figure class="highlight sh"><table><tr><td class="code"><pre><span class="line">GRANT ALL PRIVILEGES ON `zabbix`.* TO <span class="string">'pt'</span>@<span class="string">'%'</span></span><br><span class="line"></span><br><span class="line">show grants <span class="keyword">for</span> <span class="string">'root'</span>@<span class="string">'192.168.1.101'</span>;</span><br><span class="line"></span><br><span class="line">revoke SELECT, INSERT, UPDATE, DELETE, CREATE, PROCESS, SUPER, REPLICATION SLAVE ON *.* FROM <span class="string">'root'</span>@<span class="string">'192.168.1.101'</span>;</span><br></pre></td></tr></table></figure>
<h2 id="执行"><a href="#执行" class="headerlink" title="执行"></a><strong>执行</strong></h2><p>pt-table-checksum</p>
<figure class="highlight sh"><table><tr><td class="code"><pre><span class="line"><span class="comment">#pt-table-checksum --nocheck-replication-filters --no-check-binlog-format --replicate=test_sync.checksums --create-replicate-table --databases=test_sync --tables=contact h=10.1.7.211,u=root,p=mysqlxxx,P=3306</span></span><br><span class="line"></span><br><span class="line">pt-table-checksum --nocheck-replication-filters --no-check-binlog-format --replicate=test_sync.checksums --create-replicate-table --databases=test_sync h=10.1.7.211,u=root,p=mysqlxxx,P=3306</span><br></pre></td></tr></table></figure>
<p>pt-table-sync</p>
<figure class="highlight sh"><table><tr><td class="code"><pre><span class="line"><span class="comment">#pt-table-sync --replicate=test_sync.checksums h=10.1.7.211,u=root,p=mysqlxxx,P=3306 h=10.1.7.211,u=root,p=mysqlxxx,P=3307 --print</span></span><br><span class="line"></span><br><span class="line">pt-table-sync --replicate=test_sync.checksums h=10.1.7.211,u=root,p=mysqlxxx,P=3306 h=10.1.7.211,u=root,p=mysqlxxx,P=3307 --execute</span><br></pre></td></tr></table></figure>
<p>err:</p>
<figure class="highlight sh"><table><tr><td class="code"><pre><span class="line">Can<span class="string">'t make changes on the master because no unique index exists at /usr/bin/pt-table-sync line 10649.  while doing zabbix.history on 172.17.0.3</span></span><br></pre></td></tr></table></figure>
<p>pt-heartbeat</p>
<figure class="highlight sh"><table><tr><td class="code"><pre><span class="line"><span class="comment">#pt-heartbeat --user=root --ask-pass --host=10.1.7.211 --port 3306 --create-table -D test_sync --interval=1 --update --replace --daemonize</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#pt-heartbeat -D test_sync --table=heartbeat --monitor --host=10.1.7.211 --port=3306 --user=root --password=mysqlxxx --master-server-id=100 --print-master-server-id</span></span><br><span class="line"></span><br><span class="line">pt-heartbeat -D test_sync --table=heartbeat --check --host=10.1.7.211 --port=3306 --user=root --password=mysqlxxx --master-server-id=100 --<span class="built_in">print</span>-master-server-id</span><br><span class="line"></span><br><span class="line"><span class="comment">#pt-heartbeat --stop</span></span><br></pre></td></tr></table></figure>
]]></content>
      <categories>
        <category>其它</category>
      </categories>
      <tags>
        <tag>MySQL</tag>
      </tags>
  </entry>
  <entry>
    <title>ELK若干问题记录</title>
    <url>/pages/log-analysis/elk-problems/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\pages\assets\css\APlayer.min.css"><script src="\pages\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><blockquote>
<p>记录使用ELK遇到的几个问题</p>
</blockquote>
<a id="more"></a>
<h2 id="输出日志多耗尽磁盘空闲空间"><a href="#输出日志多耗尽磁盘空闲空间" class="headerlink" title="输出日志多耗尽磁盘空闲空间"></a>输出日志多耗尽磁盘空闲空间</h2><p>/usr/share/elasticsearch/config/log4j2.properties  置logLevel: off</p>
<h2 id="ES默认分片数1000不够的问题"><a href="#ES默认分片数1000不够的问题" class="headerlink" title="ES默认分片数1000不够的问题"></a>ES默认分片数1000不够的问题</h2><p>索引es报如下错误：</p>
<figure class="highlight json"><table><tr><td class="code"><pre><span class="line">&#123;</span><br><span class="line">  <span class="attr">"error"</span> : &#123;</span><br><span class="line">    <span class="attr">"root_cause"</span> : [</span><br><span class="line">      &#123;</span><br><span class="line">        <span class="attr">"type"</span> : <span class="string">"validation_exception"</span>,</span><br><span class="line">        <span class="attr">"reason"</span> : <span class="string">"Validation Failed: 1: this action would add [2] total shards, but this cluster currently has [1000]/[1000] maximum shards open;"</span></span><br><span class="line">      &#125;</span><br><span class="line">    ],</span><br><span class="line">    <span class="attr">"type"</span> : <span class="string">"validation_exception"</span>,</span><br><span class="line">    <span class="attr">"reason"</span> : <span class="string">"Validation Failed: 1: this action would add [2] total shards, but this cluster currently has [1000]/[1000] maximum shards open;"</span></span><br><span class="line">  &#125;,</span><br><span class="line">  <span class="attr">"status"</span> : <span class="number">400</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>解决：设置最大分片数3000</p>
<figure class="highlight sh"><table><tr><td class="code"><pre><span class="line">PUT /_cluster/settings</span><br><span class="line">&#123;</span><br><span class="line">  <span class="string">"transient"</span>: &#123;</span><br><span class="line">    <span class="string">"cluster"</span>: &#123;</span><br><span class="line">      <span class="string">"max_shards_per_node"</span>:3000</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h2 id="docker-compose限制ELK的CPU、内存"><a href="#docker-compose限制ELK的CPU、内存" class="headerlink" title="docker-compose限制ELK的CPU、内存"></a>docker-compose限制ELK的CPU、内存</h2><figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="attr">version:</span> <span class="string">'3.7'</span></span><br><span class="line"></span><br><span class="line"><span class="attr">services:</span></span><br><span class="line"><span class="attr">elasticsearch:</span></span><br><span class="line">  <span class="attr">image:</span> <span class="string">...</span></span><br><span class="line">  <span class="string">...</span></span><br><span class="line">  <span class="attr">deploy:</span></span><br><span class="line">	<span class="attr">resources:</span></span><br><span class="line">	  <span class="attr">limits:</span></span><br><span class="line">		<span class="attr">cpus:</span> <span class="string">'0.50'</span></span><br><span class="line">		<span class="attr">memory:</span> <span class="string">4096M</span></span><br><span class="line"><span class="string">...</span></span><br></pre></td></tr></table></figure>
<p>启动命令：</p>
<figure class="highlight sh"><table><tr><td class="code"><pre><span class="line">docker-compose --compatibility up -d</span><br></pre></td></tr></table></figure>
<h2 id="elasticsearch、kibana-通过NginX作Basic-Auth认证"><a href="#elasticsearch、kibana-通过NginX作Basic-Auth认证" class="headerlink" title="elasticsearch、kibana 通过NginX作Basic Auth认证"></a>elasticsearch、kibana 通过NginX作Basic Auth认证</h2><figure class="highlight"><table><tr><td class="code"><pre><span class="line">upstream kb443 &#123;</span><br><span class="line">    server 127.0.0.1:5601;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">upstream es443 &#123;</span><br><span class="line">    server 127.0.0.1:9200;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">server &#123;</span><br><span class="line">    listen 443 ssl;</span><br><span class="line">    ssl_certificate /etc/letsencrypt/live/keep.com/fullchain.pem;</span><br><span class="line">    ssl_certificate_key /etc/letsencrypt/live/keep.com/privkey.pem;</span><br><span class="line">    server_name es.keep.com;</span><br><span class="line"></span><br><span class="line">    location / &#123;</span><br><span class="line">      auth_basic "secret";</span><br><span class="line">      auth_basic_user_file /etc/nginx/nginx_passwd.kibana;</span><br><span class="line">      proxy_pass http://es443;</span><br><span class="line">      proxy_redirect off;</span><br><span class="line">      proxy_buffering off;</span><br><span class="line">      proxy_http_version 1.1;</span><br><span class="line">      proxy_set_header Connection "Keep-Alive";</span><br><span class="line">      proxy_set_header Proxy-Connection "Keep-Alive";</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">server &#123;</span><br><span class="line">    listen 443 ssl;</span><br><span class="line">    ssl_certificate /etc/letsencrypt/live/keep.com/fullchain.pem;</span><br><span class="line">    ssl_certificate_key /etc/letsencrypt/live/keep.com/privkey.pem;</span><br><span class="line">    server_name kibana.keep.com;</span><br><span class="line"></span><br><span class="line">    root html;</span><br><span class="line">    index index.html index.htm;</span><br><span class="line">    access_log /var/log/nginx/kibana-443.access.log main;</span><br><span class="line">    error_log /var/log/nginx/kibana-443.error.log ;</span><br><span class="line"></span><br><span class="line">    location / &#123;</span><br><span class="line">        auth_basic "secret";</span><br><span class="line">        auth_basic_user_file /etc/nginx/nginx_passwd.kibana;</span><br><span class="line">        proxy_pass              http://kb443;</span><br><span class="line">        proxy_redirect          off;</span><br><span class="line">        proxy_set_header    Host        $host;</span><br><span class="line">        proxy_set_header    X-Real-IP   $remote_addr;</span><br><span class="line">        proxy_set_header    X-Forwarded-For $proxy_add_x_forwarded_for;</span><br><span class="line">        proxy_redirect http://$host http://$host:$server_port;</span><br><span class="line">        add_header Strict-Transport-Security "max-age=31536000";</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    error_page  500 502 503 504 /50x.html;</span><br><span class="line">    location = /50x.html &#123;</span><br><span class="line">        root /usr/share/nginx/html;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>更新用户名/密码：</p>
<figure class="highlight sh"><table><tr><td class="code"><pre><span class="line"><span class="comment"># yum install httpd-tools -y</span></span><br><span class="line">htpasswd -c -b /etc/nginx/nginx_passwd.kibana <span class="variable">$username</span> <span class="variable">$password</span></span><br></pre></td></tr></table></figure>
]]></content>
      <categories>
        <category>ELK</category>
      </categories>
      <tags>
        <tag>ELK</tag>
      </tags>
  </entry>
  <entry>
    <title>ES分组权限管理的账号设置</title>
    <url>/pages/log-analysis/es-account-manage/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\pages\assets\css\APlayer.min.css"><script src="\pages\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><hr>
<blockquote>
<p>基于X-Pack权限控制版ES，给不同项目组、用户分配不同的权限</p>
</blockquote>
<a id="more"></a>
<h2 id="创建角色"><a href="#创建角色" class="headerlink" title="创建角色"></a>创建角色</h2><p><img src="/assets/images2019/es-account-manage.assets/1579570458650.png" alt="1579570458650"></p>
<h3 id="设置角色的ES权限"><a href="#设置角色的ES权限" class="headerlink" title="设置角色的ES权限"></a>设置角色的ES权限</h3><p><img src="/assets/images2019/es-account-manage.assets/1579570909750.png" alt="1579570909750"></p>
<h3 id="设置角色的Kibana权限"><a href="#设置角色的Kibana权限" class="headerlink" title="设置角色的Kibana权限"></a>设置角色的Kibana权限</h3><p><img src="/assets/images2019/es-account-manage.assets/1579570803128.png" alt="1579570803128"></p>
<h2 id="创建用户"><a href="#创建用户" class="headerlink" title="创建用户"></a>创建用户</h2><p><img src="/assets/images2019/es-account-manage.assets/1579570327982.png" alt="1579570327982"></p>
<p><img src="/assets/images2019/es-account-manage.assets/1579571404585.png" alt="1579571404585"></p>
<h3 id="新用户登录"><a href="#新用户登录" class="headerlink" title="新用户登录"></a>新用户登录</h3><p><img src="/assets/images2019/es-account-manage.assets/1579571546419.png" alt="1579571546419"></p>
<p><img src="/assets/images2019/es-account-manage.assets/1579571702942.png" alt="1579571702942"></p>
<h3 id="测试ES索引权限"><a href="#测试ES索引权限" class="headerlink" title="测试ES索引权限"></a>测试ES索引权限</h3><figure class="highlight sh"><table><tr><td class="code"><pre><span class="line">curl -XPUT -u es:password <span class="string">"http://es.keep.com/es-test/_doc/1?pretty"</span> -H <span class="string">'Content-Type: application/json'</span> -d <span class="string">'</span></span><br><span class="line"><span class="string">&#123;</span></span><br><span class="line"><span class="string">  "name": "John"</span></span><br><span class="line"><span class="string">&#125;'</span></span><br></pre></td></tr></table></figure>
<figure class="highlight json"><table><tr><td class="code"><pre><span class="line">&#123;</span><br><span class="line">  <span class="attr">"error"</span> : &#123;</span><br><span class="line">    <span class="attr">"root_cause"</span> : [</span><br><span class="line">      &#123;</span><br><span class="line">        <span class="attr">"type"</span> : <span class="string">"security_exception"</span>,</span><br><span class="line">        <span class="attr">"reason"</span> : <span class="string">"action [indices:admin/create] is unauthorized for user [es]"</span></span><br><span class="line">      &#125;</span><br><span class="line">    ],</span><br><span class="line">    <span class="attr">"type"</span> : <span class="string">"security_exception"</span>,</span><br><span class="line">    <span class="attr">"reason"</span> : <span class="string">"action [indices:admin/create] is unauthorized for user [es]</span></span><br><span class="line"><span class="string">  &#125;,</span></span><br><span class="line"><span class="string">  "</span>status<span class="string">" : 403</span></span><br><span class="line"><span class="string">&#125;</span></span><br></pre></td></tr></table></figure>
<p>权限不够，不能创建该索引。</p>
<p>使用elastic账号查看已创建的role_es具体有哪些权限：</p>
<figure class="highlight sh"><table><tr><td class="code"><pre><span class="line">curl -XGET -u elastic:xxxxxx <span class="string">"http://es.keep.com/_xpack/security/role/role_es"</span></span><br></pre></td></tr></table></figure>
<figure class="highlight sh"><table><tr><td class="code"><pre><span class="line">&#123;</span><br><span class="line">  <span class="string">"role_es"</span>: &#123;</span><br><span class="line">    <span class="string">"cluster"</span>: [],</span><br><span class="line">    <span class="string">"indices"</span>: [</span><br><span class="line">      &#123;</span><br><span class="line">        <span class="string">"names"</span>: [</span><br><span class="line">          <span class="string">"es.*"</span></span><br><span class="line">        ],</span><br><span class="line">        <span class="string">"privileges"</span>: [</span><br><span class="line">          <span class="string">"all"</span></span><br><span class="line">        ],</span><br><span class="line">        <span class="string">"field_security"</span>: &#123;</span><br><span class="line">          <span class="string">"grant"</span>: [</span><br><span class="line">            <span class="string">"*"</span></span><br><span class="line">          ],</span><br><span class="line">          <span class="string">"except"</span>: []</span><br><span class="line">        &#125;,</span><br><span class="line">        <span class="string">"allow_restricted_indices"</span>: <span class="literal">false</span></span><br><span class="line">      &#125;</span><br><span class="line">    ],</span><br><span class="line">    <span class="string">"applications"</span>: [</span><br><span class="line">      &#123;</span><br><span class="line">        <span class="string">"application"</span>: <span class="string">"kibana-.kibana"</span>,</span><br><span class="line">        <span class="string">"privileges"</span>: [</span><br><span class="line">          <span class="string">"feature_discover.all"</span>,</span><br><span class="line">          <span class="string">"feature_visualize.all"</span>,</span><br><span class="line">          <span class="string">"feature_dashboard.all"</span>,</span><br><span class="line">          <span class="string">"feature_dev_tools.all"</span>,</span><br><span class="line">          <span class="string">"feature_indexPatterns.all"</span></span><br><span class="line">        ],</span><br><span class="line">        <span class="string">"resources"</span>: [</span><br><span class="line">          <span class="string">"space:default"</span></span><br><span class="line">        ]</span><br><span class="line">      &#125;</span><br><span class="line">    ],</span><br><span class="line">    <span class="string">"run_as"</span>: [],</span><br><span class="line">    <span class="string">"metadata"</span>: &#123;&#125;,</span><br><span class="line">    <span class="string">"transient_metadata"</span>: &#123;</span><br><span class="line">      <span class="string">"enabled"</span>: <span class="literal">true</span></span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>由于给role_es角色分配的ES索引权限是仅名称以<code>es.</code>开头，故无权创建<code>es-test</code>。改为创建<code>es.test</code>再试则成功：</p>
<figure class="highlight json"><table><tr><td class="code"><pre><span class="line">&#123;</span><br><span class="line">  <span class="attr">"_index"</span> : <span class="string">"es.test"</span>,</span><br><span class="line">  <span class="attr">"_type"</span> : <span class="string">"_doc"</span>,</span><br><span class="line">  <span class="attr">"_id"</span> : <span class="string">"1"</span>,</span><br><span class="line">  <span class="attr">"_version"</span> : <span class="number">1</span>,</span><br><span class="line">  <span class="attr">"result"</span> : <span class="string">"created"</span>,</span><br><span class="line">  <span class="attr">"_shards"</span> : &#123;</span><br><span class="line">    <span class="attr">"total"</span> : <span class="number">2</span>,</span><br><span class="line">    <span class="attr">"successful"</span> : <span class="number">1</span>,</span><br><span class="line">    <span class="attr">"failed"</span> : <span class="number">0</span></span><br><span class="line">  &#125;,</span><br><span class="line">  <span class="attr">"_seq_no"</span> : <span class="number">0</span>,</span><br><span class="line">  <span class="attr">"_primary_term"</span> : <span class="number">1</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p><img src="/assets/images2019/es-account-manage.assets/1579574124809.png" alt="1579574124809"></p>
<h2 id="账号规划"><a href="#账号规划" class="headerlink" title="账号规划"></a>账号规划</h2><p>根据以上，初步设置了以下账号：</p>
<table>
<thead>
<tr>
<th>角色</th>
<th>现有账号</th>
<th>ES索引权限</th>
<th>Kibana工作区权限</th>
</tr>
</thead>
<tbody>
<tr>
<td>role_es</td>
<td><strong>es</strong></td>
<td>es.*</td>
<td>发现  feature_discover.all<br>可视化  feature_visualize.all<br>仪表板  feature_dashboard.all<br>开发工具  feature_dev_tools.all<br>索引模式  eature_indexPatterns.all</td>
</tr>
<tr>
<td>role_k8s</td>
<td><strong>k8s</strong></td>
<td>k8s*</td>
<td>同上</td>
</tr>
</tbody>
</table>
]]></content>
      <categories>
        <category>ELK</category>
      </categories>
      <tags>
        <tag>ELK</tag>
      </tags>
  </entry>
  <entry>
    <title>MySQL主从配置</title>
    <url>/pages/deployment/else/mysql-replication/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\pages\assets\css\APlayer.min.css"><script src="\pages\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h2 id="mysql配置"><a href="#mysql配置" class="headerlink" title="mysql配置"></a>mysql配置</h2><p>master端my.cnf配置示例：</p>
<a id="more"></a>
<figure class="highlight ini"><table><tr><td class="code"><pre><span class="line"><span class="section">[client]</span></span><br><span class="line"><span class="attr">default-character-set</span>=utf8</span><br><span class="line"></span><br><span class="line"><span class="section">[mysql]</span></span><br><span class="line"><span class="attr">default-character-set</span>=utf8</span><br><span class="line"></span><br><span class="line"><span class="section">[mysqld]</span></span><br><span class="line"><span class="attr">init_connect</span>=<span class="string">'SET collation_connection = utf8_unicode_ci'</span></span><br><span class="line"><span class="attr">init_connect</span>=<span class="string">'SET NAMES utf8'</span></span><br><span class="line"><span class="attr">character-set-server</span>=utf8</span><br><span class="line"><span class="attr">collation-server</span>=utf8_unicode_ci</span><br><span class="line">skip-character-set-client-handshake</span><br><span class="line"></span><br><span class="line"><span class="comment">## 设置server_id，一般设置为IP，同一局域网内注意要唯一</span></span><br><span class="line"><span class="attr">server_id</span>=<span class="number">100</span>  </span><br><span class="line"><span class="comment">## 复制过滤：也就是指定哪个数据库不用同步（mysql库一般不同步）</span></span><br><span class="line"><span class="attr">binlog-ignore-db</span>=mysql  </span><br><span class="line"><span class="comment">## 开启二进制日志功能，可以随便取，最好有含义（关键就是这里了）</span></span><br><span class="line"><span class="attr">log-bin</span>=edu-mysql-bin  </span><br><span class="line"><span class="comment">## 为每个session 分配的内存，在事务过程中用来存储二进制日志的缓存</span></span><br><span class="line"><span class="attr">binlog_cache_size</span>=<span class="number">1</span>M  </span><br><span class="line"><span class="comment">## 主从复制的格式（mixed,statement,row，默认格式是statement）</span></span><br><span class="line"><span class="attr">binlog_format</span>=mixed  </span><br><span class="line"><span class="comment">## 二进制日志自动删除/过期的天数。默认值为0，表示不自动删除。</span></span><br><span class="line"><span class="attr">expire_logs_days</span>=<span class="number">7</span>  </span><br><span class="line"><span class="comment">## 跳过主从复制中遇到的所有错误或指定类型的错误，避免slave端复制中断。</span></span><br><span class="line"><span class="comment">## 如：1062错误是指一些主键重复，1032错误是因为主从数据库数据不一致</span></span><br><span class="line"><span class="attr">slave_skip_errors</span>=<span class="number">1062</span></span><br></pre></td></tr></table></figure>
<p>slave端my.cnf配置示例：</p>
<figure class="highlight ini"><table><tr><td class="code"><pre><span class="line"><span class="section">[client]</span></span><br><span class="line"><span class="attr">default-character-set</span>=utf8</span><br><span class="line"></span><br><span class="line"><span class="section">[mysql]</span></span><br><span class="line"><span class="attr">default-character-set</span>=utf8</span><br><span class="line"></span><br><span class="line"><span class="section">[mysqld]</span></span><br><span class="line"><span class="attr">init_connect</span>=<span class="string">'SET collation_connection = utf8_unicode_ci'</span></span><br><span class="line"><span class="attr">init_connect</span>=<span class="string">'SET NAMES utf8'</span></span><br><span class="line"><span class="attr">character-set-server</span>=utf8</span><br><span class="line"><span class="attr">collation-server</span>=utf8_unicode_ci</span><br><span class="line">skip-character-set-client-handshake</span><br><span class="line"></span><br><span class="line"><span class="comment">## 设置server_id，一般设置为IP,注意要唯一</span></span><br><span class="line"><span class="attr">server_id</span>=<span class="number">101</span></span><br><span class="line"><span class="comment">## 复制过滤：也就是指定哪个数据库不用同步（mysql库一般不同步）</span></span><br><span class="line"><span class="attr">binlog-ignore-db</span>=mysql</span><br><span class="line"><span class="comment">## 开启二进制日志功能，以备Slave作为其它Slave的Master时使用</span></span><br><span class="line"><span class="attr">log-bin</span>=edu-mysql-slave1-bin</span><br><span class="line"><span class="comment">## 为每个session 分配的内存，在事务过程中用来存储二进制日志的缓存</span></span><br><span class="line"><span class="attr">binlog_cache_size</span>=<span class="number">1</span>M</span><br><span class="line"><span class="comment">## 主从复制的格式（mixed,statement,row，默认格式是statement）</span></span><br><span class="line"><span class="attr">binlog_format</span>=mixed</span><br><span class="line"><span class="comment">## 二进制日志自动删除/过期的天数。默认值为0，表示不自动删除。</span></span><br><span class="line"><span class="attr">expire_logs_days</span>=<span class="number">7</span></span><br><span class="line"><span class="comment">## 跳过主从复制中遇到的所有错误或指定类型的错误，避免slave端复制中断。</span></span><br><span class="line"><span class="comment">## 如：1062错误是指一些主键重复，1032错误是因为主从数据库数据不一致</span></span><br><span class="line"><span class="attr">slave_skip_errors</span>=<span class="number">1062</span></span><br><span class="line"><span class="comment">## relay_log配置中继日志</span></span><br><span class="line"><span class="attr">relay_log</span>=edu-mysql-relay-bin</span><br><span class="line"><span class="comment">## log_slave_updates表示slave将复制事件写进自己的二进制日志</span></span><br><span class="line"><span class="attr">log_slave_updates</span>=<span class="number">1</span></span><br><span class="line"><span class="comment">## 防止改变数据(除了特殊的线程)</span></span><br><span class="line"><span class="attr">read_only</span>=<span class="number">1</span></span><br></pre></td></tr></table></figure>
<h2 id="master端添加slave端复制账号"><a href="#master端添加slave端复制账号" class="headerlink" title="master端添加slave端复制账号"></a>master端添加slave端复制账号</h2><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">CREATE USER &apos;slave&apos;@&apos;%&apos; IDENTIFIED BY &apos;xxxxxx&apos;; #slave密码xxxxxx，下面change master时用到</span><br><span class="line">GRANT REPLICATION SLAVE, REPLICATION CLIENT ON *.* TO &apos;slave&apos;@&apos;%&apos;;</span><br><span class="line"># mysql 5.7也可以一行命令</span><br><span class="line"># GRANT REPLICATION SLAVE, REPLICATION CLIENT ON *.* TO &apos;slave&apos;@&apos;%&apos; IDENTIFIED BY &apos;xxxxxx&apos;;</span><br><span class="line"></span><br><span class="line"># &apos;slave&apos;@&apos;%&apos; 或 &apos;slave&apos;@&apos;172.17.0.3&apos; #172.17.0.3是slave容器的ip</span><br><span class="line"># 但不能写虚拟机的ip（本实验是通过docker-compose非host网络模式创建2个mysql实例，未验证host模式是否可以）</span><br></pre></td></tr></table></figure>
<h2 id="获取master信息"><a href="#获取master信息" class="headerlink" title="获取master信息"></a>获取master信息</h2><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line"># mysql -uroot -p</span><br><span class="line">...</span><br><span class="line">flush tables with read lock; # 锁表，start slave后解锁 UNLOCK TABLES</span><br><span class="line">show master status;</span><br><span class="line">+----------------------+----------+--------------+------------------+-------------------+</span><br><span class="line">| File                 | Position | Binlog_Do_DB | Binlog_Ignore_DB | Executed_Gtid_Set |</span><br><span class="line">+----------------------+----------+--------------+------------------+-------------------+</span><br><span class="line">| edu-mysql-bin.000001 |      769 |              | mysql</span><br></pre></td></tr></table></figure>
<h2 id="slave端设定master"><a href="#slave端设定master" class="headerlink" title="slave端设定master"></a>slave端设定master</h2><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">change master to master_host=&apos;172.17.0.2&apos;, master_user=&apos;slave&apos;, master_password=&apos;xxxxxx&apos;, master_port=3306, master_log_file=&apos;edu-mysql-bin.000001&apos;, master_log_pos=769, master_connect_retry=30; # 172.17.0.3是master的IP，docker中通过docker inspect查看</span><br><span class="line"></span><br><span class="line"># change master to master_host=&apos;172.17.0.2&apos;时172.17.0.2是master容器的IP，不能使用虚拟机的IP</span><br><span class="line"></span><br><span class="line">###</span><br><span class="line">change master to master_host=&apos;172.17.0.2&apos;, master_user=&apos;slave&apos;, master_password=&apos;slave&apos;, master_port=3306, master_log_file=&apos;edu-mysql-bin.000033&apos;, master_log_pos=72831102, master_connect_retry=30;</span><br></pre></td></tr></table></figure>
<h2 id="slave启动、查看"><a href="#slave启动、查看" class="headerlink" title="slave启动、查看"></a>slave启动、查看</h2><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">mysql&gt; start slave;</span><br><span class="line">mysql&gt; show slave status \G;</span><br><span class="line">*************************** 1. row ***************************</span><br><span class="line">               Slave_IO_State: Waiting for master to send event</span><br><span class="line">                  Master_Host: 172.17.0.3</span><br><span class="line">                  Master_User: slave</span><br><span class="line">                  Master_Port: 3306</span><br><span class="line">                Connect_Retry: 30</span><br><span class="line">              Master_Log_File: edu-mysql-bin.000001</span><br><span class="line">          Read_Master_Log_Pos: 29661</span><br><span class="line">               Relay_Log_File: edu-mysql-relay-bin.000018</span><br><span class="line">                Relay_Log_Pos: 6051</span><br><span class="line">        Relay_Master_Log_File: edu-mysql-bin.000001</span><br><span class="line">             Slave_IO_Running: Yes</span><br><span class="line">            Slave_SQL_Running: Yes</span><br><span class="line">              Replicate_Do_DB:</span><br></pre></td></tr></table></figure>
]]></content>
      <categories>
        <category>其它</category>
      </categories>
      <tags>
        <tag>MySQL</tag>
      </tags>
  </entry>
  <entry>
    <title>RabbitMQ监控接入</title>
    <url>/pages/monitoring/prometheus/monitoring-rabbitmq/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\pages\assets\css\APlayer.min.css"><script src="\pages\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><hr>
<blockquote>
<p>在Docker中运行的rabbitmq，用docker镜像版的rabbitmq-exporter更方便。也可以使用二进制版的rabbitmq-exporter。</p>
</blockquote>
<a id="more"></a>
<h2 id="Docker中的RabbitMQ"><a href="#Docker中的RabbitMQ" class="headerlink" title="Docker中的RabbitMQ"></a>Docker中的RabbitMQ</h2><p>可通过docker镜像运行rabbitmq exporter：</p>
<figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="attr">rabbitmq_exporter:</span></span><br><span class="line"><span class="attr">image:</span> <span class="string">kbudde/rabbitmq-exporter</span></span><br><span class="line"><span class="attr">ports:</span></span><br><span class="line">	<span class="bullet">-</span> <span class="number">9429</span><span class="string">:9429</span></span><br><span class="line"><span class="attr">environment:</span></span><br><span class="line">	<span class="attr">SERVICE_TAGS:</span> <span class="string">"prometheus-target,rabbitmq-expo"</span></span><br><span class="line">	<span class="attr">RABBIT_URL:</span> <span class="string">"http://127.0.0.1:15672"</span></span><br><span class="line">	<span class="attr">RABBIT_USER:</span> <span class="string">"guest"</span></span><br><span class="line">	<span class="attr">RABBIT_PASSWORD:</span> <span class="string">"guest"</span></span><br><span class="line">	<span class="attr">PUBLISH_PORT:</span> <span class="string">"9429"</span></span><br><span class="line">	<span class="attr">OUTPUT_FORMAT:</span> <span class="string">"JSON"</span></span><br><span class="line"><span class="comment">#   LOG_LEVEL: "debug"</span></span><br><span class="line"><span class="attr">network_mode:</span> <span class="string">host</span></span><br></pre></td></tr></table></figure>
<h2 id="VM安装的RabbitMQ"><a href="#VM安装的RabbitMQ" class="headerlink" title="VM安装的RabbitMQ"></a>VM安装的RabbitMQ</h2><p>获取rabbitmq_exporter：</p>
<figure class="highlight sh"><table><tr><td class="code"><pre><span class="line"><span class="comment"># go编译rabbitmq_exporter</span></span><br><span class="line">go get https://github.com/kbudde/rabbitmq_exporter</span><br><span class="line"></span><br><span class="line"><span class="comment"># 或者wget下载release的二进制文件包</span></span><br><span class="line">https://github.com/kbudde/rabbitmq_exporter/releases/download/v0.29.0/rabbitmq_exporter-0.29.0.linux-amd64.tar.gz</span><br></pre></td></tr></table></figure>
<p>运行rabbitmq_exporter:</p>
<figure class="highlight sh"><table><tr><td class="code"><pre><span class="line">RABBIT_URL=<span class="string">"http://127.0.0.1:15672"</span> RABBIT_USER=guest  RABBIT_PASSWORD=guest ./rabbitmq_exporter</span><br></pre></td></tr></table></figure>
<p>通过supervisor保持rabbitmq_exporter运行时，可作如下配置:</p>
<figure class="highlight ini"><table><tr><td class="code"><pre><span class="line"><span class="section">[program:rabbitmq-expo]</span></span><br><span class="line"><span class="attr">command</span>=/srv/rabbitmq_exporter</span><br><span class="line"><span class="attr">directory</span>=/srv</span><br><span class="line"><span class="attr">user</span>=rabbitmq</span><br><span class="line"><span class="attr">environment</span>=RABBIT_USER=admin,RABBIT_PASSWORD=<span class="string">"xxxxxx"</span>,OUTPUT_FORMAT=JSON,PUBLISH_PORT=<span class="number">9429</span>,RABBIT_URL=http://<span class="number">127.0</span>.<span class="number">0.1</span>:<span class="number">15672</span></span><br><span class="line"><span class="attr">startsecs</span>=<span class="number">3</span></span><br><span class="line"><span class="attr">redirect_stderr</span>=<span class="literal">true</span></span><br><span class="line"><span class="attr">stdout_logfile_maxbytes</span>=<span class="number">50</span>MB</span><br><span class="line"><span class="attr">stdout_logfile_backups</span>=<span class="number">3</span></span><br><span class="line"><span class="attr">stdout_logfile</span>=/var/log/rabbitmq-expo.log</span><br></pre></td></tr></table></figure>
<p>运行后，检查是否能导出监控数据。以10.1.7.211上的rabbitmq为例，打开<a href="http://10.1.7.211:9429/metrics" target="_blank" rel="noopener">http://10.1.7.211:9429/metrics</a>。</p>
<p><img src="/assets/images2019/rabbitmq-monitor-steps.assets/1560918051276.png" alt="1560918051276"></p>
<p>最后，需要将此接口注册到Consul以便Prometheus能自动添加此target。方法见<a href="docs/monitoring/prometheus/self/prometheus-consul-guide.md">应用接入说明</a>。</p>
<p><img src="/assets/images2019/rabbitmq-monitor-steps.assets/1560918662228.png" alt="1560918662228"></p>
<h2 id="图表"><a href="#图表" class="headerlink" title="图表"></a>图表</h2><p>单节点rabbitmq：</p>
<p><img src="/assets/images2019/rabbitmq-monitor-steps.assets/1560917193636.png" alt="1560917193636"></p>
<p>rabbitmq集群：</p>
<p><img src="/assets/images2019/rabbitmq-monitor-steps.assets/1560917249540.png" alt="1560917249540"></p>
<hr>
<p>rabbitmq_exporter使用说明：<a href="https://github.com/kbudde/rabbitmq_exporter" target="_blank" rel="noopener">https://github.com/kbudde/rabbitmq_exporter</a></p>
]]></content>
      <categories>
        <category>监控</category>
      </categories>
      <tags>
        <tag>Prometheus</tag>
      </tags>
  </entry>
  <entry>
    <title>Redis监控接入</title>
    <url>/pages/monitoring/prometheus/monitoring-redis/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\pages\assets\css\APlayer.min.css"><script src="\pages\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><hr>
<blockquote>
<p>在Docker中运行的redis，用docker镜像版的redis_exporter更方便。也可以使用二进制版的redis_exporter</p>
</blockquote>
<a id="more"></a>
<h2 id="Docker中的Redis"><a href="#Docker中的Redis" class="headerlink" title="Docker中的Redis"></a>Docker中的Redis</h2><p>可通过docker镜像运行redis exporter：</p>
<figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="attr">redis-expo:</span></span><br><span class="line">	<span class="attr">image:</span> <span class="string">oliver006/redis_exporter</span></span><br><span class="line">	<span class="attr">ports:</span></span><br><span class="line">		<span class="bullet">-</span> <span class="number">9121</span><span class="string">:9121</span></span><br><span class="line">	<span class="attr">network_mode:</span> <span class="string">host</span></span><br><span class="line">	<span class="attr">environment:</span></span><br><span class="line">	    <span class="attr">REDIS_PASSWORD:</span> <span class="string">"xxxxxxxxxxxxxx"</span></span><br><span class="line">		<span class="attr">SERVICE_TAGS:</span> <span class="string">"prometheus-target,redis-expo"</span></span><br><span class="line">	<span class="attr">command:</span> <span class="string">"--redis.addr redis://127.0.0.1:6379"</span></span><br></pre></td></tr></table></figure>
<h2 id="VM安装的Redis"><a href="#VM安装的Redis" class="headerlink" title="VM安装的Redis"></a>VM安装的Redis</h2><figure class="highlight sh"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 安装redis_exporter</span></span><br><span class="line">wget https://github.com/oliver006/redis_exporter/releases/download/v1.0.0/redis_exporter-v1.0.0.linux-amd64.tar.gz</span><br><span class="line">tar -xf redis_exporter-v1.0.0.linux-amd64.tar.gz -C /srv/</span><br></pre></td></tr></table></figure>
<p>运行redis_exporter:</p>
<figure class="highlight sh"><table><tr><td class="code"><pre><span class="line">nohup ./redis_exporter --redis.addr <span class="string">"redis://127.0.0.1:6379"</span> --redis.password <span class="string">"xxxxxxxxxx"</span> --web.listen-address <span class="string">"0.0.0.0:9121"</span> &amp; 2&gt;&amp;1</span><br></pre></td></tr></table></figure>
<p>通过supervisor保持redis_exporter运行时，可作如下配置:</p>
<figure class="highlight ini"><table><tr><td class="code"><pre><span class="line"><span class="section">[program:redis_exporter]</span></span><br><span class="line"><span class="attr">command</span>=redis_exporter</span><br><span class="line"><span class="attr">directory</span>=/srv/redis_exporter-v1.<span class="number">0.0</span>.linux-amd64</span><br><span class="line"><span class="attr">user</span>=root</span><br><span class="line"><span class="attr">environment</span>=REDIS_PASSWORD=<span class="string">"xxxxxx"</span>,REDIS_ADDR=<span class="string">"redis://127.0.0.1:6379"</span>,REDIS_EXPORTER_WEB_LISTEN_ADDRESS=<span class="string">"0.0.0.0:9121"</span></span><br><span class="line"><span class="attr">startsecs</span>=<span class="number">3</span></span><br><span class="line"><span class="attr">redirect_stderr</span>=<span class="literal">true</span></span><br><span class="line"><span class="attr">stdout_logfile_maxbytes</span>=<span class="number">50</span>MB</span><br><span class="line"><span class="attr">stdout_logfile_backups</span>=<span class="number">3</span></span><br><span class="line"><span class="attr">stdout_logfile</span>=/var/log/redis_exporter.log</span><br></pre></td></tr></table></figure>
<p>运行后，验证是否能输出redis监控数据。以10.1.7.211上的redis为例，打开<a href="http://10.1.7.211:9121/metrics" target="_blank" rel="noopener">http://10.1.7.211:9121/metrics</a>，并搜索<code>redis_connected_clients</code>，非0正常，表明redis_exporter已连接上redis。</p>
<p><img src="/assets/images2019/redis-monitor-steps.assets/1560914994853.png" alt="1560914994853"></p>
<p>最后，需要将此接口注册到Consul以便Prometheus能自动添加此target。方法见<a href="docs/monitoring/prometheus/self/prometheus-consul-guide.md">应用接入说明</a>。</p>
<h2 id="图表"><a href="#图表" class="headerlink" title="图表"></a>图表</h2><p><img src="/assets/images2019/redis-monitor-steps.assets/1560918348143.png" alt="1560918348143"></p>
<hr>
<p>redis_exporter使用说明：<a href="https://github.com/oliver006/redis_exporter" target="_blank" rel="noopener">https://github.com/oliver006/redis_exporter</a></p>
]]></content>
      <categories>
        <category>监控</category>
      </categories>
      <tags>
        <tag>Redis</tag>
        <tag>Prometheus</tag>
      </tags>
  </entry>
  <entry>
    <title>配置管理</title>
    <url>/pages/config-management/config-management/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\pages\assets\css\APlayer.min.css"><script src="\pages\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><blockquote>
<p>配置管理工具可以提高应用部署和变更的效率，还可以让这些流程变得可重用、可扩展、可预测，甚至让它们维持在期望的状态，从而让资产的可控性提高。</p>
</blockquote>
<a id="more"></a>
<p>使用配置管理工具的优势还包括：</p>
<ul>
<li>让代码遵守编码规范，提高代码可读性；</li>
<li>具有 <em>幂等性(Idempotency)</em>，也就是说，无论执行多少次重复的配置管理操作，得到的结果都是一致的；</li>
<li>分布式的设计可以方便地管理大量的远程服务器。</li>
</ul>
<p>配置管理工具主要分为 <em>拉取(pull)</em>模式和 <em>推送(push)</em>模式。拉取模式是指安装在各台服务器上的 <em>代理(agent)</em>定期从 <em>中央存储库(central repository)</em>拉取最新的配置并应用到对应的服务器上；而推送模式则由 <em>中央服务器(central server)</em>的中央服务器会触发其它受管服务器的更新。</p>
<p>下列是几款开源配置管理工具，全都具有开源许可证、使用外部配置文件、支持无人值守运行、可以通过脚本自定义运行。</p>
<h2 id="Ansible"><a href="#Ansible" class="headerlink" title="Ansible"></a>Ansible</h2><p>“Ansible 是一个极其简洁的 IT 自动化平台，可以让你的应用和系统以更简单的方式部署。不需要安装任何代理，只需要使用 SSH 的方式和简单的语言，就可以免去脚本或代码部署应用的过程。”——<a href="https://github.com/ansible/ansible" target="_blank" rel="noopener">GitHub Ansible 代码库</a></p>
<p>由于 Ansible 不需要代理，因此对服务器的资源消耗会很少。Ansible 默认使用的推送模式需要借助 SSH 连接，但 Ansible 也支持拉取模式。<a href="https://opensource.com/article/18/8/ansible-playbooks-you-should-try" target="_blank" rel="noopener">剧本</a> 可以使用最少的命令集编写，当然也可以扩展为更加精细的自动化任务，包括引入角色、变量和其它人写的模块。</p>
<blockquote>
<p><em><a href="https://docs.ansible.com/ansible/latest/index.html" target="_blank" rel="noopener">Ansible</a> is an IT automation tool. It can configure systems, deploy software, and orchestrate more advanced IT tasks such as continuous deployments or zero downtime rolling updates.</em></p>
<p><a href="https://docs.ansible.com/ansible/latest/index.html" target="_blank" rel="noopener"><strong>Ansible</strong></a> 是一个IT自动化工具。它可以配置系统，部署软件以及编排更高级的IT任务，例如持续部署或零停机滚动更新。</p>
</blockquote>
<p><img src="https://www.ansible.com/hubfs/Images/blog-social/Ansible-Blog-Network-Pool-Gradient-Header.png" alt="img"></p>
<h2 id="Puppet"><a href="#Puppet" class="headerlink" title="Puppet"></a>Puppet</h2><p>“Puppet 是一个可以在 Linux、Unix 和 Windows 系统上运行的自动化管理引擎，它可以根据集中的规范来执行诸如添加用户、安装软件包、更新服务器配置等等管理任务。”——<a href="https://github.com/puppetlabs/puppet" target="_blank" rel="noopener">GitHub Puppet 代码库</a></p>
<ul>
<li><a href="https://puppet.com/" target="_blank" rel="noopener">官网</a></li>
<li><a href="https://puppet.com/docs" target="_blank" rel="noopener">文档</a></li>
<li><a href="https://puppet.com/community" target="_blank" rel="noopener">社区</a></li>
</ul>
<p>Puppet 作为一款面向运维工程师和系统管理员的工具，在更多情况下是作为配置管理工具来使用。它通过客户端-服务端的模式工作，使用代理从主服务器获取配置指令。</p>
<p>Puppet 使用 <em>声明式语言(declarative language)</em>或 Ruby 来描述系统配置。它包含了不同的模块，并使用 <em>清单文件(manifest files)</em>记录期望达到的目标状态。Puppet 默认使用推送模式，但也支持拉取模式。</p>
<h2 id="Salt"><a href="#Salt" class="headerlink" title="Salt"></a>Salt</h2><p>“为大规模基础结构或应用程序实现自动化管理的软件。”——<a href="https://github.com/saltstack/salt" target="_blank" rel="noopener">GitHub Salt 代码库</a></p>
<ul>
<li><a href="https://www.saltstack.com/" target="_blank" rel="noopener">官网</a></li>
<li><a href="https://docs.saltstack.com/en/latest/contents.html" target="_blank" rel="noopener">文档</a></li>
<li><a href="https://www.saltstack.com/resources/community/" target="_blank" rel="noopener">社区</a></li>
</ul>
<p>Salt 的专长就是快速收集数据，即使是上万台服务器也能够轻松完成任务。它使用 Python 模块来管理配置信息和执行特定的操作，这些模块可以让 Salt 实现所有远程操作和状态管理。但配置 Salt 模块对技术水平有一定的要求。</p>
<p>Salt 使用客户端-服务端的结构（Salt minions 是客户端，而 Salt master 是服务端），并以 Salt 状态文件记录需要达到的目标状态。</p>
]]></content>
      <categories>
        <category>CMDB</category>
      </categories>
      <tags>
        <tag>CMDB</tag>
      </tags>
  </entry>
  <entry>
    <title>yum安装ruby-2.6和redis-dump</title>
    <url>/pages/deployment/else/ins_ruby_redis_dump/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\pages\assets\css\APlayer.min.css"><script src="\pages\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><blockquote>
<p>系统：CentOS 7.6</p>
</blockquote>
<a id="more"></a>
<figure class="highlight sh"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 1. 安装ruby-install</span></span><br><span class="line">wget https://github.com/postmodern/ruby-install/archive/v0.7.0.tar.gz</span><br><span class="line">tar -xf v0.7.0.tar.gz</span><br><span class="line"><span class="built_in">cd</span> ruby-install-0.7.0/</span><br><span class="line">make install</span><br><span class="line"></span><br><span class="line"><span class="comment"># 安装ruby</span></span><br><span class="line">ruby-install ruby</span><br><span class="line"></span><br><span class="line"><span class="comment"># 安装redis-dump</span></span><br><span class="line">gem install redis-dump</span><br><span class="line"></span><br><span class="line"><span class="comment"># ln -s /opt/rubies/ruby-2.6.3/bin/* /usr/bin/</span></span><br><span class="line"><span class="built_in">export</span> PATH=/opt/rubies/ruby-2.6.3/bin:<span class="variable">$PATH</span></span><br></pre></td></tr></table></figure>
]]></content>
      <categories>
        <category>其它</category>
      </categories>
      <tags>
        <tag>else</tag>
        <tag>Redis</tag>
      </tags>
  </entry>
  <entry>
    <title>Prometheus监控MySQL主从同步</title>
    <url>/pages/monitoring/prometheus/monitoring-mysql-replication/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\pages\assets\css\APlayer.min.css"><script src="\pages\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><hr>
<blockquote>
<p>利用node_exporter从*.prom文件读取指标数据</p>
</blockquote>
<a id="more"></a>
<h2 id="获取数据的脚本"><a href="#获取数据的脚本" class="headerlink" title="获取数据的脚本"></a>获取数据的脚本</h2><p>getKeys.sh:</p>
<figure class="highlight sh"><table><tr><td class="code"><pre><span class="line"><span class="meta">#!/bin/sh</span></span><br><span class="line"></span><br><span class="line">mypath=$(<span class="built_in">cd</span> `dirname <span class="variable">$0</span>`; <span class="built_in">pwd</span>)</span><br><span class="line"><span class="built_in">cd</span> <span class="variable">$mypath</span></span><br><span class="line"></span><br><span class="line"><span class="built_in">echo</span> <span class="string">"executing all shell scripts ..."</span></span><br><span class="line"><span class="keyword">for</span> sh <span class="keyword">in</span> `ls *.sh |grep -v <span class="variable">$0</span>`</span><br><span class="line"><span class="keyword">do</span></span><br><span class="line">  <span class="built_in">echo</span> <span class="string">"will execute: ./<span class="variable">$sh</span> &gt; <span class="variable">$&#123;sh&#125;</span>.prom"</span></span><br><span class="line">  <span class="built_in">eval</span> <span class="string">"./<span class="variable">$sh</span> &gt; <span class="variable">$&#123;sh&#125;</span>.prom"</span></span><br><span class="line"><span class="keyword">done</span></span><br></pre></td></tr></table></figure>
<p>获取主从同步延迟数据的脚本pt-heart.sh：</p>
<figure class="highlight sh"><table><tr><td class="code"><pre><span class="line">out=`pt-heartbeat -D your_dbname --table=heartbeat --check --host=x.x.x.x --port=xx --user=xx --password=xxxxxx --master-server-id=xxx --<span class="built_in">print</span>-master-server-id`</span><br><span class="line">v=`<span class="built_in">echo</span> <span class="string">"<span class="variable">$out</span>"</span> |awk <span class="string">'&#123;print $1&#125;'</span>`</span><br><span class="line">m=`<span class="built_in">echo</span> <span class="string">"<span class="variable">$out</span>"</span> |awk <span class="string">'&#123;print $2&#125;'</span>`</span><br><span class="line"><span class="built_in">echo</span> <span class="string">"pt_heart&#123;server_id=\"<span class="variable">$m</span>\"&#125; <span class="variable">$v</span>"</span></span><br></pre></td></tr></table></figure>
<p>具体示例：</p>
<figure class="highlight sh"><table><tr><td class="code"><pre><span class="line">out=`pt-heartbeat -D test_sync --table=heartbeat --check --host=10.1.7.211 --port=3306 --user=root --password=xxxxxx --master-server-id=100 --<span class="built_in">print</span>-master-server-id`</span><br><span class="line">...</span><br></pre></td></tr></table></figure>
<p>脚本位置：</p>
<figure class="highlight sh"><table><tr><td class="code"><pre><span class="line">[root@docker-dev node_exporter_keys]<span class="comment"># pwd</span></span><br><span class="line">/srv/node_exporter_keys</span><br><span class="line">[root@docker-dev node_exporter_keys]<span class="comment"># tree .</span></span><br><span class="line">.</span><br><span class="line">├── getkeys.sh</span><br><span class="line">├── procs.sh</span><br><span class="line">├── procs.sh.prom</span><br><span class="line">├── pt-heart.sh</span><br><span class="line">└── pt-heart.sh.prom</span><br></pre></td></tr></table></figure>
<h3 id="设置定时任务"><a href="#设置定时任务" class="headerlink" title="设置定时任务"></a>设置定时任务</h3><p>设置crontab定时任务：</p>
<figure class="highlight sh"><table><tr><td class="code"><pre><span class="line">* * * * * /srv/node_exporter_keys/getkeys.sh</span><br></pre></td></tr></table></figure>
<p>输出的文件pt-heart.sh.prom：</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">pt_heart&#123;server_id=&quot;100&quot;&#125; 0.00</span><br></pre></td></tr></table></figure>
<p>修改node_exporter启动参数：</p>
<p>分两种情形：</p>
<ul>
<li>通过docker运行node_exporter</li>
</ul>
<figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="attr">version:</span> <span class="string">'3.0'</span></span><br><span class="line"></span><br><span class="line"><span class="attr">services:</span></span><br><span class="line">  <span class="attr">node-exporter:</span></span><br><span class="line">    <span class="attr">image:</span> <span class="string">prom/node-exporter</span></span><br><span class="line">    <span class="attr">volumes:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">/proc:/host/proc:ro</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">/sys:/host/sys:ro</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">/:/rootfs:ro</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">/srv/node_exporter_keys:/var/extra_keys:ro</span> <span class="comment"># 映射到/var/extra_keys</span></span><br><span class="line">    <span class="attr">ports:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="number">9100</span><span class="string">:9100</span></span><br><span class="line">    <span class="attr">command:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">'--collector.textfile.directory=/var/extra_keys'</span> <span class="comment"># 指定从/var/extra_keys读取*.prom</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">'--path.procfs=/host/proc'</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">'--path.sysfs=/host/sys'</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">'--collector.filesystem.ignored-mount-points="^(/rootfs|/host|)/(sys|proc|dev|host|etc)($$|/)"'</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">'--collector.filesystem.ignored-fs-types="^(sys|proc|auto|cgroup|devpts|ns|au|fuse\.lxc|mqueue)(fs|)$$"</span></span><br></pre></td></tr></table></figure>
<ul>
<li>通过supervisor运行node_exporter</li>
</ul>
<figure class="highlight ini"><table><tr><td class="code"><pre><span class="line"><span class="section">[program:node_exporter]</span></span><br><span class="line"><span class="attr">command</span>=/path/to/node_exporter --collector.textfile.directory=/srv/node_exporter_keys</span><br><span class="line"><span class="attr">directory</span>=/path/to</span><br><span class="line"><span class="attr">user</span>=root</span><br><span class="line"><span class="attr">startsecs</span>=<span class="number">3</span></span><br><span class="line"><span class="attr">redirect_stderr</span>=<span class="literal">true</span></span><br><span class="line"><span class="attr">stdout_logfile_maxbytes</span>=<span class="number">50</span>MB</span><br><span class="line"><span class="attr">stdout_logfile_backups</span>=<span class="number">3</span></span><br><span class="line"><span class="attr">stdout_logfile</span>=/var/log/node_exporter.log</span><br></pre></td></tr></table></figure>
<p>最后，访问相应的<a href="http://your-host:9100/metrics，查看是否有新增的指标名称pt_heart。" target="_blank" rel="noopener">http://your-host:9100/metrics，查看是否有新增的指标名称pt_heart。</a></p>
]]></content>
      <categories>
        <category>监控</category>
      </categories>
      <tags>
        <tag>MySQL</tag>
        <tag>Prometheus</tag>
      </tags>
  </entry>
  <entry>
    <title>NginX监控</title>
    <url>/pages/monitoring/prometheus/monitoring-nginx/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\pages\assets\css\APlayer.min.css"><script src="\pages\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><hr>
<blockquote>
<p>nginx需安装nginx-module-vts模块，然后通过nginx-vts-exporter输出监控指标。</p>
</blockquote>
<a id="more"></a>
<h2 id="nginx-module-vts模块"><a href="#nginx-module-vts模块" class="headerlink" title="nginx-module-vts模块"></a>nginx-module-vts模块</h2><figure class="highlight sh"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 获取nginx-module-vts模块源码</span></span><br><span class="line"><span class="built_in">cd</span> /opt</span><br><span class="line">git <span class="built_in">clone</span> https://github.com/vozlt/nginx-module-vts</span><br><span class="line"></span><br><span class="line"><span class="comment"># nginx源码包</span></span><br><span class="line">wget https://nginx.org/download/nginx-1.17.0.tar.gz</span><br><span class="line">tar -xf nginx-1.17.0.tar.gz</span><br><span class="line"><span class="built_in">cd</span> nginx-1.17.0</span><br><span class="line"></span><br><span class="line"><span class="comment"># 编译nginx，加入nginx-module-vts模块</span></span><br><span class="line">./configure --add-module=/opt/nginx-module-vts --prefix=/etc/nginx --sbin-path=/usr/sbin/nginx --conf-path=/etc/nginx/nginx.conf --error-log-path=/var/<span class="built_in">log</span>/nginx/error.log --http-log-path=/var/<span class="built_in">log</span>/nginx/access.log --pid-path=/var/run/nginx.pid --lock-path=/var/run/nginx.lock --http-client-body-temp-path=/var/cache/nginx/client_temp --http-proxy-temp-path=/var/cache/nginx/proxy_temp --http-fastcgi-temp-path=/var/cache/nginx/fastcgi_temp --http-uwsgi-temp-path=/var/cache/nginx/uwsgi_temp --http-scgi-temp-path=/var/cache/nginx/scgi_temp --user=nginx --group=nginx --with-http_ssl_module --with-http_realip_module --with-http_addition_module --with-http_sub_module --with-http_dav_module --with-http_flv_module --with-http_mp4_module --with-http_gunzip_module --with-http_gzip_static_module --with-http_random_index_module --with-http_secure_link_module --with-http_stub_status_module --with-http_auth_request_module --with-mail --with-mail_ssl_module --with-file-aio --with-ipv6 --with-cc-opt=<span class="string">'-O2 -g -pipe -Wp,-D_FORTIFY_SOURCE=2 -fexceptions -fstack-protector --param=ssp-buffer-size=4 -m64 -mtune=generic'</span></span><br><span class="line"></span><br><span class="line">make &amp;&amp; make install</span><br></pre></td></tr></table></figure>
<h2 id="配置nginx"><a href="#配置nginx" class="headerlink" title="配置nginx"></a>配置nginx</h2><ul>
<li>修改nginx.conf</li>
</ul>
<figure class="highlight"><table><tr><td class="code"><pre><span class="line">http &#123;</span><br><span class="line">    ...</span><br><span class="line">    vhost_traffic_status_zone;</span><br><span class="line">    server &#123;</span><br><span class="line">        listen 8088;</span><br><span class="line">        location /status &#123;</span><br><span class="line">            vhost_traffic_status_display;</span><br><span class="line">            vhost_traffic_status_display_format html;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    ...</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<ul>
<li>server配置示例</li>
</ul>
<figure class="highlight"><table><tr><td class="code"><pre><span class="line">upstream jenkins &#123;</span><br><span class="line">    server 127.0.0.1:8080;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">server &#123;</span><br><span class="line">    listen 80;</span><br><span class="line">    server_name jenkins.keep.com;</span><br><span class="line"></span><br><span class="line">	<span class="comment">#uri访问统计</span></span><br><span class="line">    vhost_traffic_status_filter_by_set_key $uri uri::$server_name;</span><br><span class="line"></span><br><span class="line">	<span class="comment"># #国家/地区访问统计，无此模块已注释</span></span><br><span class="line">    <span class="comment"># vhost_traffic_status_filter_by_set_key $geoip_country_code country::$server_name;</span></span><br><span class="line">	<span class="comment"># #UserAgent 统计</span></span><br><span class="line">    <span class="comment"># vhost_traffic_status_filter_by_set_key $filter_user_agent agent::$server_name;    </span></span><br><span class="line">    vhost_traffic_status_filter_by_set_key $status $server_name; #http code统计</span><br><span class="line">    vhost_traffic_status_filter_by_set_key $upstream_addr upstream::backend; #后端转发统计</span><br><span class="line">    vhost_traffic_status_filter_by_set_key $remote_port client::ports::$server_name; #请求端口统计</span><br><span class="line">    vhost_traffic_status_filter_by_set_key $remote_addr client::addr::$server_name;  #请求IP统计</span><br><span class="line">    </span><br><span class="line">    <span class="comment">#请求路径统计</span></span><br><span class="line">    location ~ ^/storage/(.+)/.*$ &#123;</span><br><span class="line">        set $volume $1;</span><br><span class="line">        vhost_traffic_status_filter_by_set_key $volume storage::$server_name;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    location / &#123;</span><br><span class="line">        proxy_pass http://jenkins;</span><br><span class="line">        proxy_redirect default;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<ul>
<li>添加到系统服务</li>
</ul>
<p>/etc/systemd/system/nginx.service:</p>
<figure class="highlight ini"><table><tr><td class="code"><pre><span class="line"><span class="section">[Unit]</span></span><br><span class="line"><span class="attr">Description</span>=The nginx HTTP and reverse proxy server</span><br><span class="line"><span class="attr">After</span>=network.target remote-fs.target nss-lookup.target</span><br><span class="line"></span><br><span class="line"><span class="section">[Service]</span></span><br><span class="line"><span class="attr">Type</span>=forking</span><br><span class="line"><span class="attr">PIDFile</span>=/run/nginx.pid</span><br><span class="line"><span class="comment"># Nginx will fail to start if /run/nginx.pid already exists but has the wrong</span></span><br><span class="line"><span class="comment"># SELinux context. This might happen when running `nginx -t` from the cmdline.</span></span><br><span class="line"><span class="comment"># https://bugzilla.redhat.com/show_bug.cgi?id=1268621</span></span><br><span class="line"><span class="attr">ExecStartPre</span>=/usr/bin/rm -f /run/nginx.pid</span><br><span class="line"><span class="attr">ExecStartPre</span>=/usr/sbin/nginx -t</span><br><span class="line"><span class="attr">ExecStart</span>=/usr/sbin/nginx</span><br><span class="line"><span class="attr">ExecReload</span>=/bin/kill -s HUP <span class="variable">$MAINPID</span></span><br><span class="line"><span class="attr">KillSignal</span>=SIGQUIT</span><br><span class="line"><span class="attr">TimeoutStopSec</span>=<span class="number">5</span></span><br><span class="line"><span class="attr">KillMode</span>=process</span><br><span class="line"><span class="attr">PrivateTmp</span>=<span class="literal">true</span></span><br><span class="line"></span><br><span class="line"><span class="section">[Install]</span></span><br><span class="line"><span class="attr">WantedBy</span>=multi-user.target</span><br></pre></td></tr></table></figure>
<figure class="highlight sh"><table><tr><td class="code"><pre><span class="line">ln -s /etc/systemd/system/nginx.service /etc/systemd/system/multi-user.target.wants/</span><br></pre></td></tr></table></figure>
<ul>
<li>启动、检查、重新加载</li>
</ul>
<figure class="highlight sh"><table><tr><td class="code"><pre><span class="line">systemctl start nginx</span><br><span class="line"></span><br><span class="line"><span class="comment"># 修改过nginx配置后</span></span><br><span class="line">nginx -t</span><br><span class="line">nginx -s reload</span><br></pre></td></tr></table></figure>
<ul>
<li>查看status</li>
</ul>
<p><img src="/assets/images2019/nginx-monitor-steps.assets/1561097913819.png" alt="1561097913819"></p>
<h2 id="数据转换"><a href="#数据转换" class="headerlink" title="数据转换"></a>数据转换</h2><p>通过<a href="https://github.com/hnlq715/nginx-vts-exporter" target="_blank" rel="noopener">nginx-vts-exporter</a>将由nginx-module-vts模块提供的nginx监控数据转换成prometheus能直接使用的格式。</p>
<p>转换前：<a href="http://192.168.100.150:8088/status/format/json" target="_blank" rel="noopener">http://192.168.100.150:8088/status/format/json</a></p>
<p>转换后：<a href="http://192.168.100.150:9913/metrics" target="_blank" rel="noopener">http://192.168.100.150:9913/metrics</a></p>
<figure class="highlight sh"><table><tr><td class="code"><pre><span class="line">wget https://github.com/hnlq715/nginx-vts-exporter/releases/download/v0.10.3/nginx-vts-exporter-0.10.3.linux-amd64.tar.gz</span><br><span class="line">tar -xf nginx-vts-exporter-0.10.3.linux-amd64.tar.gz</span><br><span class="line">chown -R nginx:nginx nginx-vts-exporter-0.10.3.linux-amd64</span><br><span class="line">ln -s /srv/nginx-vts-exporter-0.10.3.linux-amd64/nginx-vts-exporter /usr/bin/</span><br><span class="line"><span class="comment"># 测试运行exporter</span></span><br><span class="line">nohup nginx-vts-exporter -nginx.scrape_uri=http://localhost:8088/status/format/json</span><br></pre></td></tr></table></figure>
<p>可通过supervisor保持exporter在后台运行：</p>
<figure class="highlight ini"><table><tr><td class="code"><pre><span class="line"><span class="section">[program:nginx_vts_exporter]</span></span><br><span class="line"><span class="attr">command</span>=/usr/bin/nginx-vts-exporter -nginx.scrape_uri=http://localhost:<span class="number">8088</span>/status/format/json</span><br><span class="line"><span class="attr">user</span>=nginx</span><br><span class="line"><span class="attr">startsecs</span>=<span class="number">3</span></span><br><span class="line"><span class="attr">redirect_stderr</span>=<span class="literal">true</span></span><br><span class="line"><span class="attr">stdout_logfile_maxbytes</span>=<span class="number">50</span>MB</span><br><span class="line"><span class="attr">stdout_logfile_backups</span>=<span class="number">3</span></span><br><span class="line"><span class="attr">stdout_logfile</span>=/var/log/nginx_vts_exporter.log</span><br></pre></td></tr></table></figure>
<h2 id="注册到consul"><a href="#注册到consul" class="headerlink" title="注册到consul"></a>注册到consul</h2><p>将nginx监控数据接口注册到consul，使prometheus能获取该target。</p>
<p>curl命令参考：</p>
<figure class="highlight sh"><table><tr><td class="code"><pre><span class="line">curl http://192.168.100.140:8500/v1/agent/service/register -X PUT -i -H <span class="string">"Content-Type:application/json"</span> -d <span class="string">'&#123;</span></span><br><span class="line"><span class="string">	"ID": "nginx_192.168.100.150",</span></span><br><span class="line"><span class="string">	"Name": "nginx_192_168_100_150",</span></span><br><span class="line"><span class="string">	"Tags": ["nginx", "development", "prometheus-target"],</span></span><br><span class="line"><span class="string">	"Address": "192.168.100.150",</span></span><br><span class="line"><span class="string">	"Port": 9913,</span></span><br><span class="line"><span class="string">	"Check": &#123;</span></span><br><span class="line"><span class="string">		"DeregisterCriticalServiceAfter": "90m",</span></span><br><span class="line"><span class="string">		"HTTP": "http://192.168.100.150:9913/metrics",</span></span><br><span class="line"><span class="string">		"Interval": "15s"</span></span><br><span class="line"><span class="string">	&#125;,</span></span><br><span class="line"><span class="string">	"IsDeleted": false,</span></span><br><span class="line"><span class="string">	"Meta": &#123;</span></span><br><span class="line"><span class="string">		"version": "1.0"</span></span><br><span class="line"><span class="string">	&#125;,</span></span><br><span class="line"><span class="string">	"EnableTagOverride": false</span></span><br><span class="line"><span class="string">&#125;'</span></span><br></pre></td></tr></table></figure>
<p><strong>为了统一管控，应按【应用接入说明】记录到配置仓库中。</strong></p>
<p>注册成功后多了一条service记录：</p>
<p><img src="/assets/images2019/nginx-monitor-steps.assets/1561088176905.png" alt="1561088176905"></p>
<h2 id="图表"><a href="#图表" class="headerlink" title="图表"></a>图表</h2><p><img src="/assets/images2019/nginx-monitor-steps.assets/1561088071803.png" alt="1561088071803"></p>
]]></content>
      <categories>
        <category>监控</category>
      </categories>
      <tags>
        <tag>Prometheus</tag>
      </tags>
  </entry>
  <entry>
    <title>yum安装redis</title>
    <url>/pages/deployment/else/ins_redis5/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\pages\assets\css\APlayer.min.css"><script src="\pages\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><blockquote>
<p> 系统：CentOS 7.6</p>
</blockquote>
<figure class="highlight sh"><table><tr><td class="code"><pre><span class="line">rpm -Uvh http://dl.fedoraproject.org/pub/epel/epel-release-latest-7.noarch.rpm</span><br><span class="line">rpm -Uvh https://centos7.iuscommunity.org/ius-release.rpm</span><br><span class="line">yum install redis5-5.0.5 -y</span><br></pre></td></tr></table></figure>
<a id="more"></a>]]></content>
      <categories>
        <category>其它</category>
      </categories>
      <tags>
        <tag>else</tag>
        <tag>Redis</tag>
      </tags>
  </entry>
  <entry>
    <title>Kubernetes Dashboard</title>
    <url>/pages/deployment/k8s/kubernetes-dashboard/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\pages\assets\css\APlayer.min.css"><script src="\pages\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><hr>
<h4 id="登录"><a href="#登录" class="headerlink" title="登录"></a>登录</h4><ul>
<li>获取token</li>
</ul>
<figure class="highlight sh"><table><tr><td class="code"><pre><span class="line">kubectl -n kube-system describe secret $(kubectl -n kube-system get secret | awk <span class="string">'/^deployment-controller-token-/&#123;print $1&#125;'</span>) | awk <span class="string">'$1=="token:"&#123;print $2&#125;'</span></span><br></pre></td></tr></table></figure>
<a id="more"></a>
<figure class="highlight sh"><table><tr><td class="code"><pre><span class="line">kubectl -n kube-system describe secret $(kubectl -n kube-system get secret | grep kubernetes-dashboard-token |awk <span class="string">'&#123;print $1&#125;'</span>) | grep token: | awk <span class="string">'&#123;print $2&#125;'</span></span><br></pre></td></tr></table></figure>
<figure class="highlight sh"><table><tr><td class="code"><pre><span class="line">kubectl -n kube-system describe $(kubectl -n kube-system get secret -n kube-system -o name | grep namespace) | grep token:</span><br></pre></td></tr></table></figure>
<ul>
<li>创建ClusterRoleBinding</li>
</ul>
<figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="attr">apiVersion:</span> <span class="string">rbac.authorization.k8s.io/v1</span></span><br><span class="line"><span class="attr">kind:</span> <span class="string">ClusterRoleBinding</span></span><br><span class="line"><span class="attr">metadata:</span></span><br><span class="line">  <span class="attr">name:</span> <span class="string">kubernetes-dashboard-minimal</span></span><br><span class="line">  <span class="attr">namespace:</span> <span class="string">kube-system</span></span><br><span class="line"><span class="attr">roleRef:</span></span><br><span class="line">  <span class="attr">apiGroup:</span> <span class="string">rbac.authorization.k8s.io</span></span><br><span class="line">  <span class="attr">kind:</span> <span class="string">ClusterRole</span></span><br><span class="line">  <span class="attr">name:</span> <span class="string">cluster-admin</span></span><br><span class="line"><span class="attr">subjects:</span></span><br><span class="line"><span class="bullet">-</span> <span class="attr">kind:</span> <span class="string">ServiceAccount</span></span><br><span class="line">  <span class="attr">name:</span> <span class="string">kubernetes-dashboard</span></span><br><span class="line">  <span class="attr">namespace:</span> <span class="string">kube-system</span></span><br></pre></td></tr></table></figure>
<ul>
<li>URL</li>
</ul>
<p><a href="https://{master_ip}:6443/api/v1/namespaces/kube-system/services/https:kubernetes-dashboard:/proxy/" target="_blank" rel="noopener">https://{master_ip}:6443/api/v1/namespaces/kube-system/services/https:kubernetes-dashboard:/proxy/</a></p>
]]></content>
      <categories>
        <category>K8s</category>
      </categories>
      <tags>
        <tag>K8s</tag>
      </tags>
  </entry>
  <entry>
    <title>MongoDB监控接入</title>
    <url>/pages/monitoring/prometheus/monitoring-mongodb/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\pages\assets\css\APlayer.min.css"><script src="\pages\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><hr>
<blockquote>
<p>Percona Monitoring and Management (PMM)是一款开源的MySQL、MongoDB性能监控工具，PMM客户端负责收集DB监控数据，PMM服务端从已连接的客户端拉取数据，并通过第三方软件Grafana展示图表。</p>
</blockquote>
<a id="more"></a>
<h2 id="安装pmm-client"><a href="#安装pmm-client" class="headerlink" title="安装pmm-client"></a>安装pmm-client</h2><figure class="highlight sh"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 安装pmm-client</span></span><br><span class="line">yum install https://www.percona.com/downloads/pmm/1.1.1/binary/redhat/7/x86_64/pmm-client-1.1.1-1.x86_64.rpm</span><br></pre></td></tr></table></figure>
<h2 id="配置服务端"><a href="#配置服务端" class="headerlink" title="配置服务端"></a>配置服务端</h2><p>目前统一由PMM服务端<strong>10.1.100.200</strong>管理数据库监控任务。</p>
<p>在mysql端执行：</p>
<figure class="highlight sh"><table><tr><td class="code"><pre><span class="line">pmm-admin config --server 10.1.100.200 --<span class="built_in">bind</span>-address=&lt;当前mysql实例IP地址&gt; --client-address=&lt;当前mysql实例IP地址&gt; --client-name=&lt;自定义客户端名称&gt;</span><br></pre></td></tr></table></figure>
<p>示例：</p>
<figure class="highlight sh"><table><tr><td class="code"><pre><span class="line">pmm-admin config --server 10.1.100.200 --<span class="built_in">bind</span>-address=10.1.7.211 --client-address=10.1.7.211 --client-name=Dev</span><br></pre></td></tr></table></figure>
<p>执行后会保存到文件<code>/usr/local/percona/pmm-client/pmm.yml</code>：</p>
<figure class="highlight sh"><table><tr><td class="code"><pre><span class="line">[root@b68-docker-prd pmm]<span class="comment"># cat /usr/local/percona/pmm-client/pmm.yml</span></span><br><span class="line">server_address: 10.1.100.200</span><br><span class="line">client_address: 10.1.7.211</span><br><span class="line">bind_address: 10.1.7.211</span><br><span class="line">client_name: Dev</span><br></pre></td></tr></table></figure>
<h2 id="添加mongodb"><a href="#添加mongodb" class="headerlink" title="添加mongodb"></a>添加mongodb</h2><figure class="highlight sh"><table><tr><td class="code"><pre><span class="line">[root@docker-dev pmm]<span class="comment"># pmm-admin add mongodb --help</span></span><br><span class="line">Usage:</span><br><span class="line">  pmm-admin add mongodb [name] [flags]</span><br><span class="line"></span><br><span class="line">Examples:</span><br><span class="line">  pmm-admin add mongodb</span><br><span class="line">  pmm-admin add mongodb --cluster bare-metal</span><br><span class="line">Flags:</span><br><span class="line">      --cluster string   cluster name</span><br><span class="line">      --uri string       MongoDB URI, format: [mongodb://][user:pass@]host[:port][/database][?options] (default <span class="string">"localhost:27017"</span>)</span><br></pre></td></tr></table></figure>
<p>示例：</p>
<figure class="highlight sh"><table><tr><td class="code"><pre><span class="line">pmm-admin add mongodb --cluster rs1 --uri mongodb://10.1.7.211:27017 mongodb-dev</span><br></pre></td></tr></table></figure>
<h2 id="查看配置"><a href="#查看配置" class="headerlink" title="查看配置"></a>查看配置</h2><figure class="highlight sh"><table><tr><td class="code"><pre><span class="line">[root@docker-dev pmm]<span class="comment"># pmm-admin list</span></span><br><span class="line">pmm-admin 1.1.1</span><br><span class="line"></span><br><span class="line">PMM Server      | 10.1.100.200 </span><br><span class="line">Client Name     | Dev</span><br><span class="line">Client Address  | 10.1.7.211 </span><br><span class="line">Service Manager | linux-systemd</span><br><span class="line"></span><br><span class="line">---------------- ---------------- ----------- -------- ------------------------------ ------------------------</span><br><span class="line">SERVICE TYPE     NAME             LOCAL PORT  RUNNING  DATA SOURCE                    OPTIONS                 </span><br><span class="line">---------------- ---------------- ----------- -------- ------------------------------ ------------------------</span><br><span class="line">...                         </span><br><span class="line">mongodb:metrics  mongodb-dev      42003       YES      10.1.7.211:27017               cluster=rs1</span><br></pre></td></tr></table></figure>
<h2 id="图表"><a href="#图表" class="headerlink" title="图表"></a>图表</h2><ul>
<li>数据接入成功后</li>
</ul>
<p>监控图表页面：<a href="http://10.1.100.200/graph" target="_blank" rel="noopener">http://10.1.100.200/graph</a></p>
<p><img src="mongodb-monitor-steps.assets/1560855181358.png" alt="1560855181358"></p>
<hr>
<p>官方文档：<a href="https://www.percona.com/doc/percona-monitoring-and-management/conf-mongodb.html" target="_blank" rel="noopener">https://www.percona.com/doc/percona-monitoring-and-management/conf-mongodb.html</a></p>
]]></content>
      <categories>
        <category>监控</category>
      </categories>
      <tags>
        <tag>Prometheus</tag>
      </tags>
  </entry>
  <entry>
    <title>Docker介绍</title>
    <url>/pages/deployment/docker/docker/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\pages\assets\css\APlayer.min.css"><script src="\pages\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><hr>
<blockquote>
<p><a href="https://docs.docker.com/engine/docker-overview/" target="_blank" rel="noopener"><strong>Docker</strong></a> 使用客户端 - 服务器架构。Docker客户端与Docker守护进程通信，后者负责构建，运行和分发Docker容器。Docker客户端和守护程序可以在同一系统上运行，也可以将Docker客户端连接到远程Docker守护程序。Docker客户端和守护程序使用REST API，通过UNIX套接字或网络接口进行通信。</p>
</blockquote>
<a id="more"></a>
<p><img src="https://docs.docker.com/engine/images/architecture.svg" alt="Docker Architecture Diagram"></p>
<p><strong>Docker vs VM</strong></p>
<p><img src="/assets/images2019/docker.assets/1561264718294.png" alt="1561264718294"></p>
<p><img src="/assets/images2019/docker.assets/1561264737939.png" alt="1561264737939"></p>
<p><a href="https://docs.docker.com/install/linux/docker-ce/centos/" target="_blank" rel="noopener">docker-ce for centos</a></p>
]]></content>
      <categories>
        <category>Docker</category>
      </categories>
      <tags>
        <tag>Docker</tag>
      </tags>
  </entry>
  <entry>
    <title>Redis in Docker</title>
    <url>/pages/deployment/docker/redis-in-docker/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\pages\assets\css\APlayer.min.css"><script src="\pages\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><hr>
<h3 id="连接redis"><a href="#连接redis" class="headerlink" title="连接redis"></a>连接redis</h3><ul>
<li>docker redis-cli连接redis</li>
</ul>
<figure class="highlight sh"><table><tr><td class="code"><pre><span class="line">[root@localhost redis]<span class="comment"># docker inspect redis_redis_1 |grep net</span></span><br><span class="line">            <span class="string">"NetworkMode"</span>: <span class="string">"redis_localnet"</span>,</span><br><span class="line">            <span class="string">"SandboxKey"</span>: <span class="string">"/var/run/docker/netns/a498b7651db0"</span>,</span><br><span class="line">                <span class="string">"redis_localnet"</span>: &#123;</span><br></pre></td></tr></table></figure>
<a id="more"></a>
<figure class="highlight sh"><table><tr><td class="code"><pre><span class="line">[root@localhost redis]<span class="comment"># docker run -it --network redis_localnet --rm redis redis-cli -h redis</span></span><br><span class="line">redis:6379&gt; get k</span><br><span class="line">(nil)</span><br><span class="line">redis:6379&gt; <span class="built_in">exit</span></span><br><span class="line">[root@localhost redis]<span class="comment"># docker run -it --rm redis redis-cli -h 192.168.80.2</span></span><br><span class="line">192.168.80.2:6379&gt; <span class="built_in">set</span> k abc</span><br><span class="line">OK</span><br><span class="line">192.168.80.2:6379&gt; get k</span><br><span class="line"><span class="string">"abc"</span></span><br><span class="line">192.168.80.2:6379&gt; <span class="built_in">exit</span></span><br><span class="line">[root@localhost redis]<span class="comment"># docker run -it --network redis_localnet --rm redis redis-cli -h redis</span></span><br><span class="line">redis:6379&gt; get k</span><br><span class="line"><span class="string">"abc"</span></span><br><span class="line">redis:6379&gt; del k</span><br><span class="line">(<span class="built_in">integer</span>) 1</span><br><span class="line">redis:6379&gt;</span><br></pre></td></tr></table></figure>
<ul>
<li>从其它redis节点访问</li>
</ul>
<figure class="highlight sh"><table><tr><td class="code"><pre><span class="line">[root@localhost ~]<span class="comment"># docker run -it --rm redis redis-cli -h 10.1.7.211</span></span><br><span class="line">Unable to find image <span class="string">'redis:latest'</span> locally</span><br><span class="line">latest: Pulling from library/redis</span><br><span class="line">27833a3ba0a5: Already exists </span><br><span class="line">cde8019a4b43: Pull complete </span><br><span class="line">97a473b37fb2: Pull complete </span><br><span class="line">c6fe0dfbb7e3: Pull complete </span><br><span class="line">39c8f5ba1240: Pull complete </span><br><span class="line">cfbdd870cf75: Pull complete </span><br><span class="line">Digest: sha256:000339fb57e0ddf2d48d72f3341e47a8ca3b1beae9bdcb25a96323095b72a79b</span><br><span class="line">Status: Downloaded newer image <span class="keyword">for</span> redis:latest</span><br><span class="line">10.1.7.211:6379&gt; get k</span><br><span class="line">(nil)</span><br><span class="line">10.1.7.211:6379&gt; <span class="built_in">set</span> k abcdefg</span><br><span class="line">OK</span><br><span class="line">10.1.7.211:6379&gt; <span class="built_in">exit</span></span><br></pre></td></tr></table></figure>
<h3 id="Redis集群"><a href="#Redis集群" class="headerlink" title="Redis集群"></a>Redis集群</h3><ul>
<li>创建</li>
</ul>
<figure class="highlight sh"><table><tr><td class="code"><pre><span class="line"><span class="meta">#!/bin/sh</span></span><br><span class="line"></span><br><span class="line">para=<span class="string">""</span></span><br><span class="line">port=8000 <span class="comment"># 6个节点8001——8006</span></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> `seq 1 6`</span><br><span class="line"><span class="keyword">do</span></span><br><span class="line"><span class="comment"># host? 192.168.*</span></span><br><span class="line"><span class="comment">#  ipaddr=$(docker inspect new_redis_redis$&#123;i&#125;_1 |jq '.[0].NetworkSettings.Networks.new_redis_default.IPAddress' |sed 's/\"//g')</span></span><br><span class="line"><span class="comment"># bridge? 172.*</span></span><br><span class="line">  ipaddr=$(docker inspect new_redis_redis<span class="variable">$&#123;i&#125;</span>_1 |jq <span class="string">'.[0].NetworkSettings.Networks.bridge.IPAddress'</span> |sed <span class="string">'s/\"//g'</span>)</span><br><span class="line">  <span class="built_in">let</span> port=port+1</span><br><span class="line">  <span class="built_in">echo</span> <span class="variable">$ipaddr</span>:<span class="variable">$port</span></span><br><span class="line">  para=<span class="string">"<span class="variable">$para</span> <span class="variable">$ipaddr</span>:<span class="variable">$port</span>"</span></span><br><span class="line"><span class="keyword">done</span></span><br><span class="line"></span><br><span class="line"><span class="built_in">echo</span> <span class="variable">$para</span> <span class="comment"># 172.17.0.12:8001 172.17.0.8:8002 172.17.0.13:8003 172.17.0.9:8004 172.17.0.10:8005 172.17.0.11:8006</span></span><br><span class="line">docker run --rm -it inem0o/redis-trib create --replicas 1 <span class="variable">$para</span></span><br></pre></td></tr></table></figure>
<ul>
<li>查看</li>
</ul>
<figure class="highlight sh"><table><tr><td class="code"><pre><span class="line">[root@localhost new_redis]<span class="comment"># docker run --rm -it inem0o/redis-trib info 172.17.0.11:8006</span></span><br><span class="line">172.17.0.8:8002@18002 (f015467b...) -&gt; 178239 keys | 5462 slots | 1 slaves.</span><br><span class="line">172.17.0.12:8001@18001 (17687354...) -&gt; 178166 keys | 5461 slots | 1 slaves.</span><br><span class="line">172.17.0.13:8003@18003 (2097e0e6...) -&gt; 178106 keys | 5461 slots | 1 slaves.</span><br><span class="line">[OK] 534511 keys <span class="keyword">in</span> 3 masters.</span><br><span class="line">32.62 keys per slot on average.</span><br></pre></td></tr></table></figure>
<figure class="highlight sh"><table><tr><td class="code"><pre><span class="line">[root@localhost new_redis]<span class="comment"># docker run --rm -it redis redis-cli -h 172.17.0.12 -p 8001</span></span><br><span class="line">172.17.0.12:8001&gt; cluster nodes</span><br><span class="line">6104ad4f30a511d642aebb1bce8dd77bb5d10621 172.17.0.11:8006@18006 slave 2097e0e6a66c6adb6ddbe3bc783663d390a9360d 0 1557199119530 6 connected</span><br><span class="line">f9a309feda3b442dbf555712c7ff47026dc4700b 172.17.0.9:8004@18004 slave 1768735459c96a46722b1f0f038c125fa88aef83 0 1557199119000 4 connected</span><br><span class="line">f015467b0439b9694a6d633cc62a2502079e74f7 172.17.0.8:8002@18002 master - 0 1557199120532 2 connected 5461-10922</span><br><span class="line">1768735459c96a46722b1f0f038c125fa88aef83 172.17.0.12:8001@18001 myself,master - 0 1557199118000 1 connected 0-5460</span><br><span class="line">2097e0e6a66c6adb6ddbe3bc783663d390a9360d 172.17.0.13:8003@18003 master - 0 1557199120030 3 connected 10923-16383</span><br><span class="line">8126fa4d990c4e08cdb7d3e2ebf59771445b3a1a 172.17.0.10:8005@18005 slave f015467b0439b9694a6d633cc62a2502079e74f7 0 1557199119530 5 connected</span><br></pre></td></tr></table></figure>
<hr>
<h3 id="Redis单节点单实例"><a href="#Redis单节点单实例" class="headerlink" title="Redis单节点单实例"></a>Redis单节点单实例</h3><p>docker-compose.yml:</p>
<figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="attr">version:</span> <span class="string">'3'</span></span><br><span class="line"></span><br><span class="line"><span class="attr">services:</span></span><br><span class="line">    <span class="attr">redis:</span></span><br><span class="line">        <span class="attr">image:</span> <span class="string">redis</span></span><br><span class="line">        <span class="attr">ports:</span></span><br><span class="line">            <span class="bullet">-</span> <span class="string">"6379:6379"</span></span><br><span class="line">        <span class="attr">volumes:</span></span><br><span class="line">            <span class="bullet">-</span> <span class="string">./data:/data</span></span><br><span class="line">            <span class="bullet">-</span> <span class="string">./conf/redis.conf:/etc/redis.conf</span></span><br><span class="line">        <span class="attr">networks:</span></span><br><span class="line">            <span class="attr">localnet:</span></span><br><span class="line">                <span class="attr">aliases:</span></span><br><span class="line">                    <span class="bullet">-</span> <span class="string">my-redis-server</span></span><br><span class="line">        <span class="attr">command:</span> <span class="string">["redis-server",</span> <span class="string">"/etc/redis.conf"</span><span class="string">]</span></span><br><span class="line"></span><br><span class="line"><span class="attr">networks:</span></span><br><span class="line">    <span class="attr">localnet:</span></span><br></pre></td></tr></table></figure>
<hr>
<h3 id="单节点redis集群"><a href="#单节点redis集群" class="headerlink" title="单节点redis集群"></a>单节点redis集群</h3><p>docker-compose.yml:</p>
<figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="attr">version:</span> <span class="string">'3'</span></span><br><span class="line"></span><br><span class="line"><span class="attr">services:</span></span><br><span class="line"> <span class="attr">redis1:</span></span><br><span class="line">  <span class="attr">image:</span> <span class="string">redis-cluster</span></span><br><span class="line">  <span class="attr">restart:</span> <span class="string">always</span></span><br><span class="line">  <span class="attr">volumes:</span></span><br><span class="line">   <span class="bullet">-</span> <span class="string">/data/redis/6381/data:/data</span></span><br><span class="line">  <span class="attr">environment:</span></span><br><span class="line">   <span class="bullet">-</span> <span class="string">REDIS_PORT=6381</span></span><br><span class="line">  <span class="attr">ports:</span></span><br><span class="line">    <span class="bullet">-</span> <span class="string">'6381:6381'</span>       <span class="comment">#服务端口</span></span><br><span class="line">    <span class="bullet">-</span> <span class="string">'16381:16381'</span>   <span class="comment">#集群端口</span></span><br><span class="line"></span><br><span class="line"> <span class="attr">redis2:</span></span><br><span class="line">  <span class="attr">image:</span> <span class="string">redis-cluster</span></span><br><span class="line">  <span class="attr">restart:</span> <span class="string">always</span></span><br><span class="line">  <span class="attr">volumes:</span></span><br><span class="line">   <span class="bullet">-</span> <span class="string">/data/redis/6382/data:/data</span></span><br><span class="line">  <span class="attr">environment:</span></span><br><span class="line">   <span class="bullet">-</span> <span class="string">REDIS_PORT=6382</span></span><br><span class="line">  <span class="attr">ports:</span></span><br><span class="line">    <span class="bullet">-</span> <span class="string">'6382:6382'</span></span><br><span class="line">    <span class="bullet">-</span> <span class="string">'16382:16382'</span></span><br><span class="line"></span><br><span class="line"> <span class="attr">redis3:</span></span><br><span class="line">  <span class="attr">image:</span> <span class="string">redis-cluster</span></span><br><span class="line">  <span class="attr">restart:</span> <span class="string">always</span></span><br><span class="line">  <span class="attr">volumes:</span></span><br><span class="line">   <span class="bullet">-</span> <span class="string">/data/redis/6383/data:/data</span></span><br><span class="line">  <span class="attr">environment:</span></span><br><span class="line">   <span class="bullet">-</span> <span class="string">REDIS_PORT=6383</span></span><br><span class="line">  <span class="attr">ports:</span></span><br><span class="line">    <span class="bullet">-</span> <span class="string">'6383:6383'</span></span><br><span class="line">    <span class="bullet">-</span> <span class="string">'16383:16383'</span></span><br><span class="line"></span><br><span class="line"> <span class="attr">redis4:</span></span><br><span class="line">  <span class="attr">image:</span> <span class="string">redis-cluster</span></span><br><span class="line">  <span class="attr">restart:</span> <span class="string">always</span></span><br><span class="line">  <span class="attr">volumes:</span></span><br><span class="line">   <span class="bullet">-</span> <span class="string">/data/redis/6384/data:/data</span></span><br><span class="line">  <span class="attr">environment:</span></span><br><span class="line">   <span class="bullet">-</span> <span class="string">REDIS_PORT=6384</span></span><br><span class="line">  <span class="attr">ports:</span></span><br><span class="line">    <span class="bullet">-</span> <span class="string">'6384:6384'</span></span><br><span class="line">    <span class="bullet">-</span> <span class="string">'16384:16384'</span></span><br><span class="line"></span><br><span class="line"> <span class="attr">redis5:</span></span><br><span class="line">  <span class="attr">image:</span> <span class="string">redis-cluster</span></span><br><span class="line">  <span class="attr">restart:</span> <span class="string">always</span></span><br><span class="line">  <span class="attr">volumes:</span></span><br><span class="line">   <span class="bullet">-</span> <span class="string">/data/redis/6385/data:/data</span></span><br><span class="line">  <span class="attr">environment:</span></span><br><span class="line">   <span class="bullet">-</span> <span class="string">REDIS_PORT=6385</span></span><br><span class="line">  <span class="attr">ports:</span></span><br><span class="line">    <span class="bullet">-</span> <span class="string">'6385:6385'</span></span><br><span class="line">    <span class="bullet">-</span> <span class="string">'16385:16385'</span></span><br><span class="line"></span><br><span class="line"> <span class="attr">redis6:</span></span><br><span class="line">  <span class="attr">image:</span> <span class="string">redis-cluster</span></span><br><span class="line">  <span class="attr">restart:</span> <span class="string">always</span></span><br><span class="line">  <span class="attr">volumes:</span></span><br><span class="line">   <span class="bullet">-</span> <span class="string">/data/redis/6386/data:/data</span></span><br><span class="line">  <span class="attr">environment:</span></span><br><span class="line">   <span class="bullet">-</span> <span class="string">REDIS_PORT=6386</span></span><br><span class="line">  <span class="attr">ports:</span></span><br><span class="line">    <span class="bullet">-</span> <span class="string">'6386:6386'</span></span><br><span class="line">    <span class="bullet">-</span> <span class="string">'16386:16386'</span></span><br></pre></td></tr></table></figure>
<p>redis.conf:</p>
<figure class="highlight ini"><table><tr><td class="code"><pre><span class="line"><span class="comment">#端口</span></span><br><span class="line">port REDIS_PORT</span><br><span class="line"><span class="comment">#开启集群</span></span><br><span class="line">cluster-enabled yes</span><br><span class="line"><span class="comment">#配置文件</span></span><br><span class="line">cluster-config-file nodes.conf</span><br><span class="line">cluster-node-timeout 5000</span><br><span class="line"><span class="comment">#更新操作后进行日志记录</span></span><br><span class="line">appendonly yes</span><br><span class="line"><span class="comment">#设置主服务的连接密码</span></span><br><span class="line"><span class="comment"># masterauth</span></span><br><span class="line"><span class="comment">#设置从服务的连接密码</span></span><br><span class="line"><span class="comment"># requirepass</span></span><br></pre></td></tr></table></figure>
<p>entrypoint.sh:</p>
<figure class="highlight sh"><table><tr><td class="code"><pre><span class="line"><span class="meta">#!/bin/sh</span></span><br><span class="line"><span class="comment">#只作用于当前进程,不作用于其创建的子进程</span></span><br><span class="line"><span class="built_in">set</span> -e</span><br><span class="line"><span class="comment">#$0--Shell本身的文件名 $1--第一个参数 $@--所有参数列表</span></span><br><span class="line"><span class="comment"># allow the container to be started with `--user`</span></span><br><span class="line"><span class="keyword">if</span> [ <span class="string">"<span class="variable">$1</span>"</span> = <span class="string">'redis-server'</span> -a <span class="string">"<span class="variable">$(id -u)</span>"</span> = <span class="string">'0'</span> ]; <span class="keyword">then</span></span><br><span class="line">    sed -i <span class="string">'s/REDIS_PORT/'</span><span class="variable">$REDIS_PORT</span><span class="string">'/g'</span> /usr/<span class="built_in">local</span>/etc/redis.conf</span><br><span class="line">    chown -R redis .  <span class="comment">#改变当前文件所有者</span></span><br><span class="line">    <span class="built_in">exec</span> gosu redis <span class="string">"<span class="variable">$0</span>"</span> <span class="string">"<span class="variable">$@</span>"</span>  <span class="comment">#gosu是sudo轻量级”替代品”</span></span><br><span class="line"><span class="keyword">fi</span></span><br><span class="line"></span><br><span class="line"><span class="built_in">exec</span> <span class="string">"<span class="variable">$@</span>"</span></span><br></pre></td></tr></table></figure>
<p>Dockerfile:</p>
<figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="string">FROM</span> <span class="string">redis</span></span><br><span class="line"></span><br><span class="line"><span class="string">RUN</span> <span class="string">ln</span> <span class="string">-sf</span> <span class="string">/usr/share/zoneinfo/Asia/Shanghai</span> <span class="string">/etc/localtime</span></span><br><span class="line"><span class="string">RUN</span> <span class="string">echo</span> <span class="string">'Asia/Shanghai'</span> <span class="string">&gt;/etc/timezone</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># ENV REDIS_PORT 8000</span></span><br><span class="line"><span class="comment"># ENV REDIS_PORT_NODE 18000</span></span><br><span class="line"><span class="string">EXPOSE</span> <span class="string">$REDIS_PORT</span></span><br><span class="line"><span class="comment"># EXPOSE $REDIS_PORT_NODE</span></span><br><span class="line"></span><br><span class="line"><span class="string">COPY</span> <span class="string">entrypoint.sh</span> <span class="string">/usr/local/bin/</span></span><br><span class="line"><span class="string">COPY</span> <span class="string">redis.conf</span> <span class="string">/usr/local/etc/</span></span><br><span class="line"><span class="string">RUN</span> <span class="string">chmod</span> <span class="number">777</span> <span class="string">/usr/local/etc/redis.conf</span></span><br><span class="line"><span class="string">RUN</span> <span class="string">chmod</span> <span class="string">+x</span> <span class="string">/usr/local/bin/entrypoint.sh</span></span><br><span class="line"></span><br><span class="line"><span class="string">ENTRYPOINT</span> <span class="string">["/usr/local/bin/entrypoint.sh"]</span></span><br><span class="line"><span class="string">CMD</span> <span class="string">["redis-server",</span> <span class="string">"/usr/local/etc/redis.conf"</span><span class="string">]</span></span><br></pre></td></tr></table></figure>
]]></content>
      <categories>
        <category>Docker</category>
      </categories>
      <tags>
        <tag>Docker</tag>
        <tag>Redis</tag>
      </tags>
  </entry>
  <entry>
    <title>清理ELK的旧索引</title>
    <url>/pages/log-analysis/clean_elk_indices/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\pages\assets\css\APlayer.min.css"><script src="\pages\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><hr>
<p>安装elasticsearch-curator</p>
<figure class="highlight sh"><table><tr><td class="code"><pre><span class="line">pip install elasticsearch-curator</span><br><span class="line"></span><br><span class="line">如果报错<span class="string">"ERROR: Cannot uninstall 'PyYAML'. It is a distutils installed ..."</span></span><br><span class="line"></span><br><span class="line">pip install pip==8.0.3</span><br><span class="line">pip uninstall pyyaml</span><br><span class="line">pip install elasticsearch-curator</span><br></pre></td></tr></table></figure>
<a id="more"></a>
<p>配置示例：<br><em>~/.curator/curator.yml</em></p>
<figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="attr">client:</span></span><br><span class="line">  <span class="attr">hosts:</span></span><br><span class="line">    <span class="bullet">-</span> <span class="number">10.1</span><span class="number">.7</span><span class="number">.211</span></span><br><span class="line">  <span class="attr">port:</span> <span class="number">9200</span></span><br><span class="line">  <span class="attr">url_prefix:</span></span><br><span class="line">  <span class="attr">use_ssl:</span> <span class="literal">False</span></span><br><span class="line">  <span class="attr">certificate:</span></span><br><span class="line">  <span class="attr">client_cert:</span></span><br><span class="line">  <span class="attr">client_key:</span></span><br><span class="line">  <span class="attr">aws_key:</span></span><br><span class="line">  <span class="attr">aws_secret_key:</span></span><br><span class="line">  <span class="attr">aws_region:</span></span><br><span class="line">  <span class="attr">ssl_no_validate:</span> <span class="literal">False</span></span><br><span class="line">  <span class="attr">http_auth:</span></span><br><span class="line">  <span class="attr">timeout:</span> <span class="number">100</span></span><br><span class="line">  <span class="attr">master_only:</span> <span class="literal">False</span></span><br><span class="line"><span class="attr">logging:</span></span><br><span class="line">  <span class="attr">loglevel:</span> <span class="string">INFO</span></span><br><span class="line">  <span class="attr">logfile:</span></span><br><span class="line">  <span class="attr">logformat:</span> <span class="string">default</span></span><br><span class="line">  <span class="attr">blacklist:</span> <span class="string">[‘elasticsearch’]</span></span><br></pre></td></tr></table></figure>
<p>action文件配置：<br><figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="attr">actions:</span></span><br><span class="line">  <span class="attr">1:</span></span><br><span class="line">    <span class="attr">action:</span> <span class="string">delete_indices</span></span><br><span class="line">    <span class="attr">description:</span> <span class="string">&gt;-</span></span><br><span class="line">      <span class="string">Delete</span> <span class="string">indices</span> <span class="string">older</span> <span class="string">than</span> <span class="number">10</span> <span class="string">days</span> <span class="string">(based</span> <span class="string">on</span> <span class="string">index</span> <span class="string">name).</span></span><br><span class="line">    <span class="attr">options:</span></span><br><span class="line">      <span class="attr">ignore_empty_list:</span> <span class="literal">True</span></span><br><span class="line">      <span class="attr">timeout_override:</span></span><br><span class="line">      <span class="attr">continue_if_exception:</span> <span class="literal">False</span></span><br><span class="line">      <span class="attr">disable_action:</span> <span class="literal">False</span></span><br><span class="line">    <span class="attr">filters:</span></span><br><span class="line">    <span class="bullet">-</span> <span class="attr">filtertype:</span> <span class="string">pattern</span></span><br><span class="line">      <span class="attr">kind:</span> <span class="string">prefix</span></span><br><span class="line">      <span class="attr">value:</span> <span class="string">'[a-z]'</span> <span class="comment">#匹配小写字母开头的index</span></span><br><span class="line">      <span class="attr">exclude:</span></span><br><span class="line">    <span class="bullet">-</span> <span class="attr">filtertype:</span> <span class="string">age</span></span><br><span class="line">      <span class="attr">source:</span> <span class="string">name</span></span><br><span class="line">      <span class="attr">direction:</span> <span class="string">older</span></span><br><span class="line">      <span class="attr">timestring:</span> <span class="string">'%Y.%m.%d'</span></span><br><span class="line">      <span class="attr">unit:</span> <span class="string">days</span></span><br><span class="line">      <span class="attr">unit_count:</span> <span class="number">10</span></span><br><span class="line">      <span class="attr">exclude:</span></span><br></pre></td></tr></table></figure></p>
<p>只按时间匹配：</p>
<figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="attr">actions:</span></span><br><span class="line">  <span class="attr">1:</span></span><br><span class="line">    <span class="attr">action:</span> <span class="string">delete_indices</span></span><br><span class="line">    <span class="attr">description:</span> <span class="string">&gt;-</span></span><br><span class="line">      <span class="string">Delete</span> <span class="string">indices</span> <span class="string">older</span> <span class="string">than</span> <span class="number">8</span> <span class="string">days</span> <span class="string">(based</span> <span class="string">on</span> <span class="string">index</span> <span class="string">name).</span></span><br><span class="line">    <span class="attr">options:</span></span><br><span class="line">      <span class="attr">ignore_empty_list:</span> <span class="literal">True</span></span><br><span class="line">      <span class="attr">timeout_override:</span></span><br><span class="line">      <span class="attr">continue_if_exception:</span> <span class="literal">False</span></span><br><span class="line">      <span class="attr">disable_action:</span> <span class="literal">False</span></span><br><span class="line">    <span class="attr">filters:</span></span><br><span class="line">    <span class="bullet">-</span> <span class="attr">filtertype:</span> <span class="string">age</span></span><br><span class="line">      <span class="attr">source:</span> <span class="string">name</span></span><br><span class="line">      <span class="attr">direction:</span> <span class="string">older</span></span><br><span class="line">      <span class="attr">timestring:</span> <span class="string">'%Y.%m.%d'</span></span><br><span class="line">      <span class="attr">unit:</span> <span class="string">days</span></span><br><span class="line">      <span class="attr">unit_count:</span> <span class="number">8</span></span><br><span class="line">      <span class="attr">exclude:</span></span><br></pre></td></tr></table></figure>
<p>执行清理：</p>
<figure class="highlight sh"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 命令用法</span></span><br><span class="line">curator &lt;action file&gt; [--config &lt;config file&gt;] [--dry-run]</span><br></pre></td></tr></table></figure>
<figure class="highlight sh"><table><tr><td class="code"><pre><span class="line">[root@<span class="built_in">test</span>-vm150 opt]<span class="comment"># curator ac.yml</span></span><br><span class="line">2019-08-19 12:02:22,174 INFO      Preparing Action ID: 1, <span class="string">"delete_indices"</span></span><br><span class="line">2019-08-19 12:02:22,191 INFO      GET http://10.1.7.211:9200/ [status:200 request:0.011s]</span><br><span class="line">2019-08-19 12:02:22,191 INFO      Trying Action ID: 1, <span class="string">"delete_indices"</span>: Delete indices older than 30 days (based on index name).</span><br><span class="line">...</span><br><span class="line">2019-08-19 12:02:22,762 INFO      Deleting 7 selected indices: [u<span class="string">'keepcorests-log-2019.08.08'</span>, u<span class="string">'keepcorests-log-2019.08.09'</span>, u<span class="string">'keepweb.mdmadapter-log-2019.08.09'</span>, u<span class="string">'fms-log-2019.08.08'</span>, u<span class="string">'fms-log-2019.08.09'</span>, u<span class="string">'keep_onecardsolution-log-2019.08.08'</span>, u<span class="string">'keep_onecardsolution-log-2019.08.09'</span>]</span><br><span class="line">2019-08-19 12:02:22,762 INFO      ---deleting index keepcorests-log-2019.08.08</span><br><span class="line">2019-08-19 12:02:22,763 INFO      ---deleting index keepcorests-log-2019.08.09</span><br><span class="line">2019-08-19 12:02:22,763 INFO      ---deleting index keepweb.mdmadapter-log-2019.08.09</span><br><span class="line">2019-08-19 12:02:22,763 INFO      ---deleting index fms-log-2019.08.08</span><br><span class="line">2019-08-19 12:02:22,763 INFO      ---deleting index fms-log-2019.08.09</span><br><span class="line">2019-08-19 12:02:22,763 INFO      ---deleting index keep_onecardsolution-log-2019.08.08</span><br><span class="line">2019-08-19 12:02:22,763 INFO      ---deleting index keep_onecardsolution-log-2019.08.09</span><br><span class="line">2019-08-19 12:02:23,049 INFO      DELETE http://10.1.7.211:9200/fms-log-2019.08.08,fms-log-2019.08.09,keep_onecardsolution-log-2019.08.08,keep_onecardsolution-log-2019.08.09,keepcorests-log-2019.08.08,keepcorests-log-2019.08.09,keepweb.mdmadapter-log-2019.08.09?master_timeout=100s [status:200 request:0.286s]</span><br><span class="line">...</span><br></pre></td></tr></table></figure>
]]></content>
      <categories>
        <category>ELK</category>
      </categories>
      <tags>
        <tag>ELK</tag>
      </tags>
  </entry>
  <entry>
    <title>Consul ACL</title>
    <url>/pages/monitoring/consul/consul-acl/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\pages\assets\css\APlayer.min.css"><script src="\pages\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><hr>
<h2 id="systemd-service"><a href="#systemd-service" class="headerlink" title="systemd service"></a>systemd service</h2><figure class="highlight ini"><table><tr><td class="code"><pre><span class="line"><span class="section">[Unit]</span></span><br><span class="line"><span class="attr">Description</span>=consul agent</span><br><span class="line"><span class="attr">Requires</span>=network-<span class="literal">on</span>line.target</span><br><span class="line"><span class="attr">After</span>=network-<span class="literal">on</span>line.target</span><br><span class="line"></span><br><span class="line"><span class="section">[Service]</span></span><br><span class="line"><span class="attr">EnvironmentFile</span>=-/etc/sysconfig/consul</span><br><span class="line"><span class="attr">Environment</span>=GOMAXPROCS=<span class="number">2</span></span><br><span class="line"><span class="attr">Restart</span>=<span class="literal">on</span>-failure</span><br><span class="line"><span class="attr">ExecStart</span>=/usr/local/bin/consul agent -config-dir=/opt/consul/conf -rejoin</span><br><span class="line"><span class="attr">ExecReload</span>=/bin/kill -HUP <span class="variable">$MAINPID</span></span><br><span class="line"><span class="attr">KillSignal</span>=SIGTERM</span><br><span class="line"></span><br><span class="line"><span class="section">[Install]</span></span><br><span class="line"><span class="attr">WantedBy</span>=multi-user.target</span><br></pre></td></tr></table></figure>
<a id="more"></a>
<hr>
<h2 id="acl-json"><a href="#acl-json" class="headerlink" title="acl.json"></a>acl.json</h2><p>启用ACL，需在配置加载目录下添加acl配置文件</p>
<figure class="highlight json"><table><tr><td class="code"><pre><span class="line">&#123;</span><br><span class="line">  <span class="attr">"acl_datacenter"</span>: <span class="string">"dc1"</span>,</span><br><span class="line">  <span class="attr">"acl_master_token"</span>: <span class="string">"xxxxxxxxx"</span>,</span><br><span class="line">  <span class="attr">"acl_default_policy"</span>: <span class="string">"deny"</span>,</span><br><span class="line">  <span class="attr">"acl_down_policy"</span>: <span class="string">"extend-cache"</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p><img src="/assets/images2019/consul-acl.assets/1562555213001.png" alt="1562555213001"></p>
<h2 id="deregitster"><a href="#deregitster" class="headerlink" title="deregitster"></a>deregitster</h2><figure class="highlight sh"><table><tr><td class="code"><pre><span class="line">curl  -X PUT http://192.168.100.140:8500/v1/agent/service/deregister/&lt;id&gt; -H <span class="string">"X-Consul-Token:xxx"</span></span><br></pre></td></tr></table></figure>
<h2 id="register"><a href="#register" class="headerlink" title="register"></a>register</h2><ul>
<li>仅node check</li>
</ul>
<figure class="highlight sh"><table><tr><td class="code"><pre><span class="line">curl http://10.1.100.57:8500/v1/agent/service/register -X PUT -i -H <span class="string">"Content-Type:application/json"</span> -H <span class="string">"X-Consul-Token:xxx"</span> -d <span class="string">'&#123;</span></span><br><span class="line"><span class="string">        "ID": "test.swms.api3",</span></span><br><span class="line"><span class="string">        "Name": "test-swms-api3",</span></span><br><span class="line"><span class="string">        "Tags": ["test", "swms"],</span></span><br><span class="line"><span class="string">        "Address": "192.168.101.35",</span></span><br><span class="line"><span class="string">        "Port": 9003,</span></span><br><span class="line"><span class="string">        "Meta": &#123;</span></span><br><span class="line"><span class="string">            "version": "1.0"</span></span><br><span class="line"><span class="string">        &#125;,</span></span><br><span class="line"><span class="string">        "EnableTagOverride": false</span></span><br><span class="line"><span class="string">&#125;'</span></span><br></pre></td></tr></table></figure>
<ul>
<li>node check + service check</li>
</ul>
<figure class="highlight sh"><table><tr><td class="code"><pre><span class="line">curl http://10.1.100.57:8500/v1/agent/service/register -X PUT -i -H <span class="string">"Content-Type:application/json"</span> -H <span class="string">"X-Consul-Token:xxxxxxxxxxx"</span> -d <span class="string">'&#123;</span></span><br><span class="line"><span class="string">	"ID": "test.swms.api2",</span></span><br><span class="line"><span class="string">	"Name": "test-swms-api2",</span></span><br><span class="line"><span class="string">	"Tags": ["test", "swms"],</span></span><br><span class="line"><span class="string">	"Address": "192.168.101.35",</span></span><br><span class="line"><span class="string">	"Port": 9003,</span></span><br><span class="line"><span class="string">	"Check": &#123;</span></span><br><span class="line"><span class="string">		"DeregisterCriticalServiceAfter": "90m",</span></span><br><span class="line"><span class="string">		"Args": [],</span></span><br><span class="line"><span class="string">		"HTTP": "http://192.168.101.35:9003/hc",</span></span><br><span class="line"><span class="string">		"Interval": "15s"</span></span><br><span class="line"><span class="string">	&#125;,</span></span><br><span class="line"><span class="string">	"Meta": &#123;</span></span><br><span class="line"><span class="string">		"version": "1.0"</span></span><br><span class="line"><span class="string">	&#125;,</span></span><br><span class="line"><span class="string">	"EnableTagOverride": false</span></span><br><span class="line"><span class="string">&#125;'</span></span><br></pre></td></tr></table></figure>
<p><em>Name不能包含小数点</em></p>
<hr>
<h2 id="创建一个agent-token"><a href="#创建一个agent-token" class="headerlink" title="创建一个agent token"></a>创建一个agent token</h2><figure class="highlight sh"><table><tr><td class="code"><pre><span class="line">curl \</span><br><span class="line">    --request PUT \</span><br><span class="line">    --header <span class="string">"X-Consul-Token: xxxxxxxxxxxxxxxx"</span> \</span><br><span class="line">    --data \</span><br><span class="line"><span class="string">'&#123;</span></span><br><span class="line"><span class="string">  "Name": "Agent Token",</span></span><br><span class="line"><span class="string">  "Type": "client",</span></span><br><span class="line"><span class="string">  "Rules": "node \"\" &#123; policy = \"write\" &#125; service \"\" &#123; policy = \"read\" &#125;"</span></span><br><span class="line"><span class="string">&#125;'</span> http://127.0.0.1:8500/v1/acl/create</span><br></pre></td></tr></table></figure>
<p>Type: client</p>
<p>WebUI token的policy可以设置为只读:</p>
<figure class="highlight sh"><table><tr><td class="code"><pre><span class="line">service_prefix <span class="string">""</span> &#123;</span><br><span class="line">  policy = <span class="string">"read"</span></span><br><span class="line">  &#125;</span><br><span class="line">key_prefix <span class="string">""</span> &#123;</span><br><span class="line">  policy = <span class="string">"read"</span></span><br><span class="line">  &#125;</span><br><span class="line">node_prefix <span class="string">""</span> &#123;</span><br><span class="line">  policy = <span class="string">"read"</span></span><br><span class="line">  &#125;</span><br></pre></td></tr></table></figure>
<hr>
<p>示例：</p>
<figure class="highlight sh"><table><tr><td class="code"><pre><span class="line">[root@VM_0_4_centos ins_exporter]<span class="comment"># cat deReg.sh </span></span><br><span class="line">curl -i --request PUT \</span><br><span class="line">     --header <span class="string">"X-Consul-Token: xxxxxxxxxxxxxxxxxx"</span> \</span><br><span class="line">     http://10.1.100.57:8500/v1/agent/service/deregister/<span class="variable">$1</span></span><br><span class="line">     </span><br><span class="line">[root@VM_0_4_centos ins_exporter]<span class="comment"># sh deReg.sh id-xxl-vm04</span></span><br><span class="line">HTTP/1.1 200 OK</span><br><span class="line">Vary: Accept-Encoding</span><br><span class="line">Date: Sun, 07 Jul 2019 08:45:42 GMT</span><br><span class="line">Content-Length: 0</span><br><span class="line"></span><br><span class="line">[root@VM_0_4_centos ins_exporter]<span class="comment"># cat regXXL.sh </span></span><br><span class="line">curl http://10.1.100.57:8500/v1/agent/service/register -X PUT -i -H <span class="string">"Content-Type:application/json"</span> \</span><br><span class="line"> --header <span class="string">"X-Consul-Token: xxxxxxxxxxxxxxxxxx"</span> -d <span class="string">'&#123;</span></span><br><span class="line"><span class="string">    "ID": "id-xxl-vm04",</span></span><br><span class="line"><span class="string">    "Name": "xxl",</span></span><br><span class="line"><span class="string">    "Tags": ["xxl-job", "http"],</span></span><br><span class="line"><span class="string">    "Address": "192.168.100.150",</span></span><br><span class="line"><span class="string">    "Port": 9977,</span></span><br><span class="line"><span class="string">    "Check": &#123;</span></span><br><span class="line"><span class="string">        "DeregisterCriticalServiceAfter": "90m",</span></span><br><span class="line"><span class="string">        "HTTP": "http://baidu.com",</span></span><br><span class="line"><span class="string">        "Interval": "15s"</span></span><br><span class="line"><span class="string">    &#125;,</span></span><br><span class="line"><span class="string">    "Meta": &#123;</span></span><br><span class="line"><span class="string">        "version": "1.0",</span></span><br><span class="line"><span class="string">        "type": "app",</span></span><br><span class="line"><span class="string">        "hostname": "vm03"</span></span><br><span class="line"><span class="string">    &#125;,</span></span><br><span class="line"><span class="string">    "EnableTagOverride": false</span></span><br><span class="line"><span class="string">&#125;'</span></span><br><span class="line"></span><br><span class="line">[root@VM_0_4_centos ins_exporter]<span class="comment"># sh regXXL.sh </span></span><br><span class="line">HTTP/1.1 200 OK</span><br><span class="line">Vary: Accept-Encoding</span><br><span class="line">Date: Sun, 07 Jul 2019 08:47:47 GMT</span><br><span class="line">Content-Length: 0</span><br><span class="line"></span><br><span class="line"><span class="comment"># 不带token被禁止</span></span><br><span class="line">[root@VM_0_4_centos ins_exporter]<span class="comment"># curl -i -X PUT http://10.1.100.57:8500/v1/agent/service/deregister/id-xxl-vm04</span></span><br><span class="line">HTTP/1.1 403 Forbidden</span><br><span class="line">Vary: Accept-Encoding</span><br><span class="line">Date: Sun, 07 Jul 2019 08:48:54 GMT</span><br><span class="line">Content-Length: 17</span><br><span class="line">Content-Type: text/plain; charset=utf-8</span><br></pre></td></tr></table></figure>
]]></content>
      <categories>
        <category>Consul</category>
      </categories>
      <tags>
        <tag>Consul</tag>
      </tags>
  </entry>
  <entry>
    <title>yum安装MySQL-5.7</title>
    <url>/pages/deployment/else/ins_mysql/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\pages\assets\css\APlayer.min.css"><script src="\pages\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><blockquote>
<p>系统：CentOS 7.6</p>
</blockquote>
<a id="more"></a>
<figure class="highlight sh"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 先从官网下载rpm包</span></span><br><span class="line">wget https://dev.mysql.com/get/Downloads/MySQL-5.7/mysql-community-server-5.7.26-1.el7.x86_64.rpm</span><br><span class="line"></span><br><span class="line"><span class="comment"># 安装yum依赖源</span></span><br><span class="line"><span class="comment"># rpm -Uvh https://dev.mysql.com/get/mysql80-community-release-el7-3.noarch.rpm</span></span><br><span class="line">wget https://dev.mysql.com/get/mysql80-community-release-el7-3.noarch.rpm</span><br><span class="line">rpm -Uvh mysql80-community-release-el7-3.noarch.rpm</span><br><span class="line"></span><br><span class="line"><span class="comment"># 修改yum源</span></span><br><span class="line">sed -i <span class="string">'s/enabled=1/enabled=0/g'</span> /etc/yum.repos.d/mysql-community.repo</span><br><span class="line">sed -i <span class="string">'/\[mysql57-community\]/,+3s/enabled=.*/enabled=1/'</span> /etc/yum.repos.d/mysql-community.repo</span><br><span class="line"></span><br><span class="line"><span class="comment"># 当前rpm包所在路径，安装</span></span><br><span class="line">yum install mysql-community-server-5.7.26-1.el7.x86_64.rpm -y</span><br></pre></td></tr></table></figure>
<p>完整日志：</p>
<figure class="highlight sh"><table><tr><td class="code"><pre><span class="line">+ wget https://dev.mysql.com/get/Downloads/MySQL-5.7/mysql-community-server-5.7.26-1.el7.x86_64.rpm</span><br><span class="line">--2019-08-13 16:48:01--  https://dev.mysql.com/get/Downloads/MySQL-5.7/mysql-community-server-5.7.26-1.el7.x86_64.rpm</span><br><span class="line">Resolving dev.mysql.com (dev.mysql.com)... 137.254.60.11</span><br><span class="line">Connecting to dev.mysql.com (dev.mysql.com)|137.254.60.11|:443... connected.</span><br><span class="line">HTTP request sent, awaiting response... 302 Found</span><br><span class="line">Location: https://cdn.mysql.com//Downloads/MySQL-5.7/mysql-community-server-5.7.26-1.el7.x86_64.rpm [following]</span><br><span class="line">--2019-08-13 16:48:06--  https://cdn.mysql.com//Downloads/MySQL-5.7/mysql-community-server-5.7.26-1.el7.x86_64.rpm</span><br><span class="line">Resolving cdn.mysql.com (cdn.mysql.com)... 23.44.160.128</span><br><span class="line">Connecting to cdn.mysql.com (cdn.mysql.com)|23.44.160.128|:443... connected.</span><br><span class="line">HTTP request sent, awaiting response... 200 OK</span><br><span class="line">Length: 173541272 (166M) [application/x-redhat-package-manager]</span><br><span class="line">Saving to: ‘mysql-community-server-5.7.26-1.el7.x86_64.rpm’</span><br><span class="line"></span><br><span class="line">100%[===========================================================================================&gt;] 173,541,272 1.71MB/s   <span class="keyword">in</span> 1m 44s </span><br><span class="line"></span><br><span class="line">2019-08-13 16:49:51 (1.59 MB/s) - ‘mysql-community-server-5.7.26-1.el7.x86_64.rpm’ saved [173541272/173541272]</span><br><span class="line"></span><br><span class="line">+ wget https://dev.mysql.com/get/mysql80-community-release-el7-3.noarch.rpm</span><br><span class="line">--2019-08-13 16:49:51--  https://dev.mysql.com/get/mysql80-community-release-el7-3.noarch.rpm</span><br><span class="line">Resolving dev.mysql.com (dev.mysql.com)... 137.254.60.11</span><br><span class="line">Connecting to dev.mysql.com (dev.mysql.com)|137.254.60.11|:443... connected.</span><br><span class="line">HTTP request sent, awaiting response... 302 Found</span><br><span class="line">Location: https://repo.mysql.com//mysql80-community-release-el7-3.noarch.rpm [following]</span><br><span class="line">--2019-08-13 16:49:53--  https://repo.mysql.com//mysql80-community-release-el7-3.noarch.rpm</span><br><span class="line">Resolving repo.mysql.com (repo.mysql.com)... 104.89.31.15</span><br><span class="line">Connecting to repo.mysql.com (repo.mysql.com)|104.89.31.15|:443... connected.</span><br><span class="line">HTTP request sent, awaiting response... 200 OK</span><br><span class="line">Length: 26024 (25K) [application/x-redhat-package-manager]</span><br><span class="line">Saving to: ‘mysql80-community-release-el7-3.noarch.rpm’</span><br><span class="line"></span><br><span class="line">100%[===========================================================================================&gt;] 26,024      49.0KB/s   <span class="keyword">in</span> 0.5s   </span><br><span class="line"></span><br><span class="line">2019-08-13 16:49:55 (49.0 KB/s) - ‘mysql80-community-release-el7-3.noarch.rpm’ saved [26024/26024]</span><br><span class="line"></span><br><span class="line">+ rpm -Uvh mysql80-community-release-el7-3.noarch.rpm</span><br><span class="line">warning: mysql80-community-release-el7-3.noarch.rpm: Header V3 DSA/SHA1 Signature, key ID 5072e1f5: NOKEY</span><br><span class="line">Preparing...                          <span class="comment">################################# [100%]</span></span><br><span class="line">Updating / installing...</span><br><span class="line">   1:mysql80-community-release-el7-3  <span class="comment">################################# [100%]</span></span><br><span class="line">+ sed -i s/enabled=1/enabled=0/g /etc/yum.repos.d/mysql-community.repo</span><br><span class="line">+ sed -i <span class="string">'/\[mysql57-community\]/,+3s/enabled=.*/enabled=1/'</span> /etc/yum.repos.d/mysql-community.repo</span><br><span class="line">+ yum install mysql-community-server-5.7.26-1.el7.x86_64.rpm -y</span><br><span class="line">Loaded plugins: fastestmirror, langpacks</span><br><span class="line">Examining mysql-community-server-5.7.26-1.el7.x86_64.rpm: mysql-community-server-5.7.26-1.el7.x86_64</span><br><span class="line">Marking mysql-community-server-5.7.26-1.el7.x86_64.rpm to be installed</span><br><span class="line">Resolving Dependencies</span><br><span class="line">--&gt; Running transaction check</span><br><span class="line">---&gt; Package mysql-community-server.x86_64 0:5.7.26-1.el7 will be installed</span><br><span class="line">--&gt; Processing Dependency: mysql-community-common(x86-64) = 5.7.26-1.el7 <span class="keyword">for</span> package: mysql-community-server-5.7.26-1.el7.x86_64</span><br><span class="line">Loading mirror speeds from cached hostfile</span><br><span class="line">mysql57-community                                                                                             | 2.5 kB  00:00:00     </span><br><span class="line">mysql57-community/x86_64/primary_db                                                                           | 184 kB  00:00:02     </span><br><span class="line">--&gt; Processing Dependency: mysql-community-client(x86-64) &gt;= 5.7.9 <span class="keyword">for</span> package: mysql-community-server-5.7.26-1.el7.x86_64</span><br><span class="line">--&gt; Processing Dependency: libnuma.so.1(libnuma_1.1)(64bit) <span class="keyword">for</span> package: mysql-community-server-5.7.26-1.el7.x86_64</span><br><span class="line">--&gt; Processing Dependency: libnuma.so.1(libnuma_1.2)(64bit) <span class="keyword">for</span> package: mysql-community-server-5.7.26-1.el7.x86_64</span><br><span class="line">--&gt; Processing Dependency: libnuma.so.1()(64bit) <span class="keyword">for</span> package: mysql-community-server-5.7.26-1.el7.x86_64</span><br><span class="line">--&gt; Running transaction check</span><br><span class="line">---&gt; Package mysql-community-client.x86_64 0:5.7.27-1.el7 will be installed</span><br><span class="line">--&gt; Processing Dependency: mysql-community-libs(x86-64) &gt;= 5.7.9 <span class="keyword">for</span> package: mysql-community-client-5.7.27-1.el7.x86_64</span><br><span class="line">---&gt; Package mysql-community-common.x86_64 0:5.7.26-1.el7 will be installed</span><br><span class="line">---&gt; Package numactl-libs.x86_64 0:2.0.9-7.el7 will be installed</span><br><span class="line">--&gt; Running transaction check</span><br><span class="line">---&gt; Package mariadb-libs.x86_64 1:5.5.60-1.el7_5 will be obsoleted</span><br><span class="line">--&gt; Processing Dependency: libmysqlclient.so.18()(64bit) <span class="keyword">for</span> package: 2:postfix-2.10.1-7.el7.x86_64</span><br><span class="line">--&gt; Processing Dependency: libmysqlclient.so.18(libmysqlclient_18)(64bit) <span class="keyword">for</span> package: 2:postfix-2.10.1-7.el7.x86_64</span><br><span class="line">---&gt; Package mysql-community-libs.x86_64 0:5.7.27-1.el7 will be obsoleting</span><br><span class="line">--&gt; Running transaction check</span><br><span class="line">---&gt; Package mysql-community-libs-compat.x86_64 0:5.7.27-1.el7 will be obsoleting</span><br><span class="line">--&gt; Finished Dependency Resolution</span><br><span class="line"></span><br><span class="line">Dependencies Resolved</span><br><span class="line"></span><br><span class="line">=====================================================================================================================================</span><br><span class="line"> Package                             Arch           Version                Repository                                           Size</span><br><span class="line">=====================================================================================================================================</span><br><span class="line">Installing:</span><br><span class="line"> mysql-community-libs                x86_64         5.7.27-1.el7           mysql57-community                                   2.2 M</span><br><span class="line">     replacing  mariadb-libs.x86_64 1:5.5.60-1.el7_5</span><br><span class="line"> mysql-community-libs-compat         x86_64         5.7.27-1.el7           mysql57-community                                   2.0 M</span><br><span class="line">     replacing  mariadb-libs.x86_64 1:5.5.60-1.el7_5</span><br><span class="line"> mysql-community-server              x86_64         5.7.26-1.el7           /mysql-community-server-5.7.26-1.el7.x86_64         746 M</span><br><span class="line">Installing <span class="keyword">for</span> dependencies:</span><br><span class="line"> mysql-community-client              x86_64         5.7.27-1.el7           mysql57-community                                    24 M</span><br><span class="line"> mysql-community-common              x86_64         5.7.26-1.el7           mysql57-community                                   274 k</span><br><span class="line"> numactl-libs                        x86_64         2.0.9-7.el7            os                                                   29 k</span><br><span class="line"></span><br><span class="line">Transaction Summary</span><br><span class="line">=====================================================================================================================================</span><br><span class="line">Install  3 Packages (+3 Dependent packages)</span><br><span class="line"></span><br><span class="line">Total size: 774 M</span><br><span class="line">Total download size: 29 M</span><br><span class="line">Downloading packages:</span><br><span class="line">warning: /var/cache/yum/x86_64/7/mysql57-community/packages/mysql-community-common-5.7.26-1.el7.x86_64.rpm: Header V3 DSA/SHA1 Signature, key ID 5072e1f5: NOKEY</span><br><span class="line">Public key <span class="keyword">for</span> mysql-community-common-5.7.26-1.el7.x86_64.rpm is not installed</span><br><span class="line">(1/5): mysql-community-common-5.7.26-1.el7.x86_64.rpm                                                         | 274 kB  00:00:03     </span><br><span class="line">(2/5): mysql-community-client-5.7.27-1.el7.x86_64.rpm                                                         |  24 MB  00:00:04     </span><br><span class="line">(3/5): numactl-libs-2.0.9-7.el7.x86_64.rpm                                                                    |  29 kB  00:00:00     </span><br><span class="line">(4/5): mysql-community-libs-compat-5.7.27-1.el7.x86_64.rpm                                                    | 2.0 MB  00:00:00     </span><br><span class="line">(5/5): mysql-community-libs-5.7.27-1.el7.x86_64.rpm                                                           | 2.2 MB  00:00:04     </span><br><span class="line">-------------------------------------------------------------------------------------------------------------------------------------</span><br><span class="line">Total                                                                                                3.6 MB/s |  29 MB  00:00:08     </span><br><span class="line">Retrieving key from file:///etc/pki/rpm-gpg/RPM-GPG-KEY-mysql</span><br><span class="line">Importing GPG key 0x5072E1F5:</span><br><span class="line"> Userid     : <span class="string">"MySQL Release Engineering &lt;mysql-build@oss.oracle.com&gt;"</span></span><br><span class="line"> Fingerprint: a4a9 4068 76fc bd3c 4567 70c8 8c71 8d3b 5072 e1f5</span><br><span class="line"> Package    : mysql80-community-release-el7-3.noarch (installed)</span><br><span class="line"> From       : /etc/pki/rpm-gpg/RPM-GPG-KEY-mysql</span><br><span class="line">Running transaction check</span><br><span class="line">Running transaction <span class="built_in">test</span></span><br><span class="line">Transaction <span class="built_in">test</span> succeeded</span><br><span class="line">Running transaction</span><br><span class="line">Warning: RPMDB altered outside of yum.</span><br><span class="line">  Installing : mysql-community-common-5.7.26-1.el7.x86_64                                                                        1/7 </span><br><span class="line">  Installing : mysql-community-libs-5.7.27-1.el7.x86_64                                                                          2/7 </span><br><span class="line">  Installing : mysql-community-client-5.7.27-1.el7.x86_64                                                                        3/7 </span><br><span class="line">  Installing : numactl-libs-2.0.9-7.el7.x86_64                                                                                   4/7 </span><br><span class="line">  Installing : mysql-community-server-5.7.26-1.el7.x86_64                                                                        5/7 </span><br><span class="line">  Installing : mysql-community-libs-compat-5.7.27-1.el7.x86_64                                                                   6/7 </span><br><span class="line">  Erasing    : 1:mariadb-libs-5.5.60-1.el7_5.x86_64                                                                              7/7 </span><br><span class="line">  Verifying  : mysql-community-server-5.7.26-1.el7.x86_64                                                                        1/7 </span><br><span class="line">  Verifying  : numactl-libs-2.0.9-7.el7.x86_64                                                                                   2/7 </span><br><span class="line">  Verifying  : mysql-community-libs-compat-5.7.27-1.el7.x86_64                                                                   3/7 </span><br><span class="line">  Verifying  : mysql-community-client-5.7.27-1.el7.x86_64                                                                        4/7 </span><br><span class="line">  Verifying  : mysql-community-common-5.7.26-1.el7.x86_64                                                                        5/7 </span><br><span class="line">  Verifying  : mysql-community-libs-5.7.27-1.el7.x86_64                                                                          6/7 </span><br><span class="line">  Verifying  : 1:mariadb-libs-5.5.60-1.el7_5.x86_64</span><br><span class="line"></span><br><span class="line">Installed:</span><br><span class="line">  mysql-community-libs.x86_64 0:5.7.27-1.el7                     mysql-community-libs-compat.x86_64 0:5.7.27-1.el7                  </span><br><span class="line">  mysql-community-server.x86_64 0:5.7.26-1.el7                  </span><br><span class="line"></span><br><span class="line">Dependency Installed:</span><br><span class="line">  mysql-community-client.x86_64 0:5.7.27-1.el7   mysql-community-common.x86_64 0:5.7.26-1.el7   numactl-libs.x86_64 0:2.0.9-7.el7  </span><br><span class="line"></span><br><span class="line">Replaced:</span><br><span class="line">  mariadb-libs.x86_64 1:5.5.60-1.el7_5                                                                                               </span><br><span class="line"></span><br><span class="line">Complete!</span><br></pre></td></tr></table></figure>
]]></content>
      <categories>
        <category>其它</category>
      </categories>
      <tags>
        <tag>MySQL</tag>
      </tags>
  </entry>
  <entry>
    <title>yum安装rabbitmq</title>
    <url>/pages/deployment/else/ins_rabbitmq/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\pages\assets\css\APlayer.min.css"><script src="\pages\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><blockquote>
<p>系统：CentOS 7.6</p>
</blockquote>
<a id="more"></a>
<figure class="highlight sh"><table><tr><td class="code"><pre><span class="line">wget https://github.com/rabbitmq/erlang-rpm/releases/download/v22.0.1/erlang-22.0.1-1.el7.x86_64.rpm</span><br><span class="line"></span><br><span class="line">wget https://github.com/rabbitmq/rabbitmq-server/releases/download/v3.7.15/rabbitmq-server-3.7.15-1.el7.noarch.rpm</span><br><span class="line"></span><br><span class="line">yum install erlang-22.0.1-1.el7.x86_64.rpm rabbitmq-server-3.7.15-1.el7.noarch.rpm</span><br></pre></td></tr></table></figure>
]]></content>
      <categories>
        <category>其它</category>
      </categories>
      <tags>
        <tag>else</tag>
      </tags>
  </entry>
  <entry>
    <title>PMM数据库性能监控</title>
    <url>/pages/deployment/docker/pmm/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\pages\assets\css\APlayer.min.css"><script src="\pages\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><hr>
<blockquote>
<p>Percona Monitoring and Management (PMM)是一款开源的MySQL、MongoDB性能监控工具，PMM客户端负责收集DB监控数据，PMM服务端从已连接的客户端拉取数据，并通过第三方软件Grafana展示图表。</p>
</blockquote>
<a id="more"></a>
<figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="attr">version:</span> <span class="string">'2'</span></span><br><span class="line"></span><br><span class="line"><span class="attr">services:</span></span><br><span class="line">  <span class="attr">pmm-data:</span></span><br><span class="line">    <span class="attr">image:</span> <span class="string">percona/pmm-server:1.1.1</span></span><br><span class="line">    <span class="attr">container_name:</span> <span class="string">pmm-data</span></span><br><span class="line">    <span class="attr">volumes:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">/opt/prometheus/data</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">/opt/consul-data</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">/var/lib/mysql</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">/var/lib/grafana</span></span><br><span class="line">    <span class="attr">entrypoint:</span> <span class="string">/bin/true</span></span><br><span class="line"></span><br><span class="line">  <span class="attr">pmm-server:</span></span><br><span class="line">    <span class="attr">image:</span> <span class="string">percona/pmm-server:1.1.1</span></span><br><span class="line">    <span class="attr">container_name:</span> <span class="string">pmm-server</span></span><br><span class="line">    <span class="attr">ports:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="number">8088</span><span class="string">:80</span></span><br><span class="line">    <span class="attr">restart:</span> <span class="string">always</span></span><br><span class="line">    <span class="attr">environment:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">SERVICE_80_NAME=pmm</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">SERVICE_80_TAGS=pmm,http</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">SERVER_USER=admin</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">SERVER_PASSWORD=$&#123;PMM_SERVER_PASSWORD&#125;</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">METRICS_RETENTION=720h</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">METRICS_MEMORY=4194304</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">METRICS_RESOLUTION=5s</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">QUERIES_RETENTION=30</span></span><br><span class="line">    <span class="attr">volumes_from:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">pmm-data</span></span><br></pre></td></tr></table></figure>
<p>或者</p>
<figure class="highlight sh"><table><tr><td class="code"><pre><span class="line"><span class="meta">#!/bin/sh</span></span><br><span class="line"></span><br><span class="line">tag0=<span class="variable">$1</span></span><br><span class="line">tag=<span class="variable">$&#123;tag0:=1.1.1&#125;</span></span><br><span class="line"></span><br><span class="line">docker stop pmm-server</span><br><span class="line">docker rm pmm-server pmm-data</span><br><span class="line"></span><br><span class="line">docker create \</span><br><span class="line">   -v /opt/prometheus/data \</span><br><span class="line">   -v /opt/consul-data \</span><br><span class="line">   -v /var/lib/mysql \</span><br><span class="line">   -v /var/lib/grafana \</span><br><span class="line">   --name pmm-data \</span><br><span class="line">   percona/pmm-server:<span class="variable">$tag</span> /bin/<span class="literal">true</span></span><br><span class="line">   </span><br><span class="line">   </span><br><span class="line">docker run -d \</span><br><span class="line">   -p 8088:80 \</span><br><span class="line">   --volumes-from pmm-data \</span><br><span class="line">   --name pmm-server \</span><br><span class="line">   -e SERVER_USER=admin \</span><br><span class="line">   -e SERVICE_80_NAME=pmm \</span><br><span class="line">   -e SERVICE_80_TAGS=pmm,http,ui \</span><br><span class="line">   -e SERVER_PASSWORD=<span class="variable">$&#123;PMM_SERVER_PASSWORD&#125;</span> \</span><br><span class="line">   --restart always \</span><br><span class="line">   percona/pmm-server:<span class="variable">$tag</span></span><br></pre></td></tr></table></figure>
]]></content>
      <categories>
        <category>Docker</category>
      </categories>
      <tags>
        <tag>Docker</tag>
        <tag>MySQL</tag>
      </tags>
  </entry>
  <entry>
    <title>Nginx + Consul-template</title>
    <url>/pages/deployment/docker/nginx-consul/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\pages\assets\css\APlayer.min.css"><script src="\pages\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><hr>
<blockquote>
<p>通过registrator自动发现容器内的服务，注册到consul，通过consul -template动态修改nginx配置文件实现动态负载。</p>
</blockquote>
<a id="more"></a>
<p><code>docker-compose.yml</code>:</p>
<figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="attr">version:</span> <span class="string">'3'</span></span><br><span class="line"></span><br><span class="line"><span class="attr">services:</span></span><br><span class="line">  <span class="attr">consul:</span></span><br><span class="line">    <span class="attr">image:</span> <span class="string">consul</span></span><br><span class="line">    <span class="attr">environment:</span></span><br><span class="line">      <span class="attr">SERVICE_8500_NAME:</span> <span class="string">"consul-ui"</span></span><br><span class="line">      <span class="attr">SERVICE_8500_TAGS:</span> <span class="string">"consul,http,ui"</span></span><br><span class="line">    <span class="attr">ports:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="number">8500</span><span class="string">:8500</span></span><br><span class="line">    <span class="attr">network_mode:</span> <span class="string">host</span></span><br><span class="line">    <span class="attr">volumes:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">/data/consul/data:/consul/data</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">./conf.d:/consul/config</span></span><br><span class="line">    <span class="attr">command:</span> <span class="string">"agent -server -bootstrap-expect 1 -ui -disable-host-node-id -client 0.0.0.0 -bind 172.17.0.13"</span></span><br><span class="line"></span><br><span class="line">  <span class="attr">registrator:</span></span><br><span class="line">    <span class="attr">image:</span> <span class="string">gliderlabs/registrator</span></span><br><span class="line">    <span class="attr">depends_on:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">consul</span></span><br><span class="line">    <span class="attr">volumes:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">/var/run/docker.sock:/tmp/docker.sock</span></span><br><span class="line">    <span class="attr">network_mode:</span> <span class="string">host</span></span><br><span class="line">    <span class="attr">environment:</span></span><br><span class="line">      <span class="attr">CONSUL_HTTP_TOKEN:</span> <span class="string">$&#123;CONSUL_HTTP_TOKEN&#125;</span></span><br><span class="line">    <span class="attr">command:</span> <span class="string">-internal</span> <span class="string">consul://127.0.0.1:8500</span></span><br><span class="line"></span><br><span class="line">  <span class="attr">nginx-consul:</span></span><br><span class="line">    <span class="attr">image:</span> <span class="string">nginx-consul:alpine</span></span><br><span class="line">    <span class="attr">build:</span> <span class="string">.</span></span><br><span class="line">    <span class="attr">depends_on:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">consul</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">registrator</span></span><br><span class="line">    <span class="attr">ports:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="number">80</span><span class="string">:80</span></span><br><span class="line">    <span class="attr">network_mode:</span> <span class="string">host</span></span><br><span class="line">    <span class="attr">volumes:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">./files/nginx.conf.ctmpl:/etc/nginx/nginx.conf.ctmpl</span></span><br><span class="line">    <span class="attr">environment:</span></span><br><span class="line">      <span class="attr">HOST_TYPE:</span> <span class="string">$&#123;HOST_TYPE&#125;</span></span><br><span class="line">      <span class="attr">CONSUL_HTTP_TOKEN:</span> <span class="string">$&#123;CONSUL_HTTP_TOKEN&#125;</span></span><br><span class="line">    <span class="attr">command:</span> <span class="string">-consul-addr=127.0.0.1:8500</span> <span class="string">-wait=5s</span> <span class="string">-template</span> <span class="string">/etc/nginx/nginx.conf.ctmpl:/etc/nginx/conf.d/app.conf:/etc/nginx/nginx.sh</span></span><br></pre></td></tr></table></figure>
<p><code>Dockerfile</code>:</p>
<figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="string">FROM</span> <span class="string">nginx:alpine</span></span><br><span class="line"></span><br><span class="line"><span class="string">RUN</span> <span class="string">apk</span> <span class="string">update</span> <span class="string">&amp;&amp;</span> <span class="string">\</span></span><br><span class="line">    <span class="string">apk</span> <span class="string">add</span> <span class="string">--no-cache</span> <span class="string">unzip</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># ENV CONSUL_TEMPLATE_VERSION 0.20.0</span></span><br><span class="line"><span class="string">ENV</span> <span class="string">PACKAGE</span> <span class="string">consul-template_0.20.0_linux_amd64.zip</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># ADD https://releases.hashicorp.com/consul-template/$&#123;CONSUL_TEMPLATE_VERSION&#125;/consul-template_$&#123;CONSUL_TEMPLATE_VERSION&#125;_linux_amd64.zip /tmp/consul-template.zip</span></span><br><span class="line"><span class="string">ADD</span> <span class="string">files/nginx.conf</span> <span class="string">files/nginx.conf.ctmpl</span> <span class="string">files/nginx.sh</span> <span class="string">files/$&#123;PACKAGE&#125;</span> <span class="string">/etc/nginx/</span></span><br><span class="line"></span><br><span class="line"><span class="string">RUN</span> <span class="string">unzip</span> <span class="string">/etc/nginx/$&#123;PACKAGE&#125;</span> <span class="string">-d</span> <span class="string">/usr/bin</span> <span class="string">&amp;&amp;</span> <span class="string">\</span></span><br><span class="line">    <span class="string">chmod</span> <span class="string">+x</span> <span class="string">/usr/bin/consul-template</span> <span class="string">&amp;&amp;</span> <span class="string">\</span></span><br><span class="line">    <span class="string">rm</span> <span class="string">-f</span> <span class="string">/etc/nginx/$&#123;PACKAGE&#125;</span> <span class="string">&amp;&amp;</span> <span class="string">\</span></span><br><span class="line">    <span class="string">chmod</span> <span class="string">+x</span> <span class="string">/etc/nginx/nginx.sh</span> <span class="string">&amp;&amp;</span> <span class="string">\</span></span><br><span class="line">    <span class="string">apk</span> <span class="string">del</span> <span class="string">unzip</span></span><br><span class="line"></span><br><span class="line"><span class="string">WORKDIR</span> <span class="string">/etc/nginx</span></span><br><span class="line"><span class="string">ENTRYPOINT</span> <span class="string">["/usr/bin/consul-template"]</span></span><br></pre></td></tr></table></figure>
<p><code>conf.d/acl.json</code>:</p>
<figure class="highlight sh"><table><tr><td class="code"><pre><span class="line">[root@VM_0_13_centos nginx-consul]<span class="comment"># cat conf.d/acl.json</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="string">"acl_datacenter"</span>: <span class="string">"dc1"</span>,</span><br><span class="line">    <span class="string">"acl_master_token"</span>: <span class="string">"xxxxxxxxxxxxxxxxxxxxxxxxxxxx"</span>,</span><br><span class="line">    <span class="string">"acl_agent_token"</span>: <span class="string">"xxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxxxx"</span>,</span><br><span class="line">    <span class="string">"acl_default_policy"</span>: <span class="string">"deny"</span>,</span><br><span class="line">    <span class="string">"acl_down_policy"</span>: <span class="string">"extend-cache"</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
]]></content>
      <categories>
        <category>Docker</category>
      </categories>
      <tags>
        <tag>Docker</tag>
        <tag>Consul</tag>
      </tags>
  </entry>
  <entry>
    <title>Redis高可用方案KeepAlived配置示例</title>
    <url>/pages/deployment/else/redis_ha_keepalived/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\pages\assets\css\APlayer.min.css"><script src="\pages\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><hr>
<h3 id="一主两从-三哨兵-KeepAlived"><a href="#一主两从-三哨兵-KeepAlived" class="headerlink" title="一主两从+三哨兵+KeepAlived"></a>一主两从+三哨兵+KeepAlived</h3><blockquote>
<p> Redis (M/1 S/2)+ Sentinel/3 + KA/3 (VIP/1)</p>
</blockquote>
<a id="more"></a>
<p>KA配置示例（其一节点）:</p>
<figure class="highlight tex"><table><tr><td class="code"><pre><span class="line">! Configuration File for keepalived</span><br><span class="line"></span><br><span class="line">global_defs &#123;</span><br><span class="line">    router_id redis_swms</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">vrrp_script chk_http_port &#123;     </span><br><span class="line">    script "/usr/local/redis/bin/redis-cli -p 8379 info | grep role:master &gt;/dev/null 2&gt;&amp;1"     </span><br><span class="line">    interval 1 </span><br><span class="line">    timeout 2</span><br><span class="line">    fall 2</span><br><span class="line">    rise 1</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">vrrp_instance VI_1 &#123;</span><br><span class="line">    state BACKUP</span><br><span class="line">    interface eth0</span><br><span class="line">    virtual_router_id 64</span><br><span class="line">    priority 120</span><br><span class="line">    advert_int 1</span><br><span class="line"></span><br><span class="line">    unicast_src_ip 10.1.100.25</span><br><span class="line"></span><br><span class="line">    unicast_peer &#123;</span><br><span class="line">        10.1.100.23</span><br><span class="line">        10.1.100.24</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    authentication &#123;</span><br><span class="line">        auth_type PASS</span><br><span class="line">        auth_pass 12345</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    virtual_ipaddress &#123;</span><br><span class="line">        10.1.100.22</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    track_script &#123;</span><br><span class="line">        chk_http_port</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<hr>
<h3 id="一主一从-KeepAlived"><a href="#一主一从-KeepAlived" class="headerlink" title="一主一从+KeepAlived"></a>一主一从+KeepAlived</h3><blockquote>
<p> Redis (M/1 S/1) + KA/2 (VIP/1)</p>
</blockquote>
<p>KA配置示例（其一节点）:</p>
<figure class="highlight tex"><table><tr><td class="code"><pre><span class="line">! Configuration File for keepalived</span><br><span class="line"></span><br><span class="line">global_defs &#123;</span><br><span class="line">    router_id redis_swms</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">vrrp_script chk_redis &#123;</span><br><span class="line">    script "/opt/scripts/keepalived/redis_check.sh 127.0.0.1 6379"</span><br><span class="line">    interval 1</span><br><span class="line">    timeout 2</span><br><span class="line">    fall 3</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">vrrp_instance VI_1 &#123;</span><br><span class="line">    state BACKUP</span><br><span class="line">    interface ens192</span><br><span class="line">    virtual_router_id 64</span><br><span class="line">    priority 120</span><br><span class="line">    advert_int 1</span><br><span class="line"></span><br><span class="line">    unicast_src_ip 192.168.101.65</span><br><span class="line"></span><br><span class="line">    unicast_peer &#123;</span><br><span class="line">        192.168.101.66</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    authentication &#123;</span><br><span class="line">        auth_type PASS</span><br><span class="line">        auth_pass 12345</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    virtual_ipaddress &#123;</span><br><span class="line">        192.168.101.64</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    track_script &#123;</span><br><span class="line">        chk_redis</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    notify_master "/opt/scripts/keepalived/redis_master.sh 127.0.0.1 192.168.101.66 6379"</span><br><span class="line">    notify_backup "/opt/scripts/keepalived/redis_backup.sh 127.0.0.1 192.168.101.66 6379"</span><br><span class="line">    # notify_fault /opt/scripts/keepalived/redis_fault.sh</span><br><span class="line">    # notify_stop /opt/scripts/keepalived/redis_stop.sh</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>redis_master.sh:</p>
<figure class="highlight sh"><table><tr><td class="code"><pre><span class="line"><span class="meta">#!/bin/bash</span></span><br><span class="line"></span><br><span class="line">REDISCLI=<span class="string">"redis-cli -h <span class="variable">$1</span> -p <span class="variable">$3</span>"</span></span><br><span class="line">LOGFILE=<span class="string">"/var/log/redis/keepalived-redis-state.log"</span></span><br><span class="line"><span class="built_in">echo</span> <span class="string">"[master]"</span> &gt;&gt; <span class="variable">$LOGFILE</span></span><br><span class="line">date &gt;&gt; <span class="variable">$LOGFILE</span></span><br><span class="line"><span class="built_in">echo</span> <span class="string">"Being master...."</span> &gt;&gt; <span class="variable">$LOGFILE</span> 2&gt;&amp;1</span><br><span class="line"><span class="built_in">echo</span> <span class="string">"Run MASTER cmd ..."</span> &gt;&gt; <span class="variable">$LOGFILE</span> 2&gt;&amp;1</span><br><span class="line"><span class="variable">$REDISCLI</span> SLAVEOF <span class="variable">$2</span> <span class="variable">$3</span> &gt;&gt; <span class="variable">$LOGFILE</span></span><br><span class="line">sleep 10 <span class="comment">#delay 10 s wait data async cancel sync</span></span><br><span class="line"><span class="built_in">echo</span> <span class="string">"Run SLAVEOF NO ONE cmd ..."</span> &gt;&gt; <span class="variable">$LOGFILE</span></span><br><span class="line"><span class="variable">$REDISCLI</span> SLAVEOF NO ONE &gt;&gt; <span class="variable">$LOGFILE</span> 2&gt;&amp;1</span><br></pre></td></tr></table></figure>
<p>redis_backup.sh:</p>
<figure class="highlight sh"><table><tr><td class="code"><pre><span class="line"><span class="meta">#!/bin/bash</span></span><br><span class="line"></span><br><span class="line">REDISCLI=<span class="string">"redis-cli -h <span class="variable">$1</span> -p <span class="variable">$3</span>"</span></span><br><span class="line">LOGFILE=<span class="string">"/var/log/redis/keepalived-redis-state.log"</span></span><br><span class="line"><span class="built_in">echo</span> <span class="string">"[backup]"</span> &gt;&gt; <span class="variable">$LOGFILE</span></span><br><span class="line">date &gt;&gt; <span class="variable">$LOGFILE</span></span><br><span class="line"><span class="built_in">echo</span> <span class="string">"Run SLAVEOF cmd ..."</span> &gt;&gt; <span class="variable">$LOGFILE</span></span><br><span class="line"><span class="variable">$REDISCLI</span> SLAVEOF <span class="variable">$2</span> <span class="variable">$3</span> &gt;&gt; <span class="variable">$LOGFILE</span> 2&gt;&amp;1</span><br><span class="line"><span class="built_in">echo</span> <span class="string">"Being slave...."</span> &gt;&gt; <span class="variable">$LOGFILE</span> 2&gt;&amp;1</span><br><span class="line">sleep 15 <span class="comment">#delay 15 s wait data sync exchange role</span></span><br></pre></td></tr></table></figure>
<p>redis_check.sh:</p>
<figure class="highlight sh"><table><tr><td class="code"><pre><span class="line"><span class="meta">#!/bin/bash</span></span><br><span class="line"></span><br><span class="line">ALIVE=`redis-cli -h <span class="variable">$1</span> -p <span class="variable">$2</span> PING`</span><br><span class="line">LOGFILE=<span class="string">"/var/log/redis/keepalived-redis-check.log"</span></span><br><span class="line"><span class="built_in">echo</span> <span class="string">"[CHECK]"</span> &gt;&gt; <span class="variable">$LOGFILE</span></span><br><span class="line">date &gt;&gt; <span class="variable">$LOGFILE</span></span><br><span class="line"><span class="keyword">if</span> [ <span class="variable">$ALIVE</span> = <span class="string">"PONG"</span> ]; <span class="keyword">then</span></span><br><span class="line">  <span class="built_in">echo</span> <span class="string">"Success: redis-cli -h <span class="variable">$1</span> -p <span class="variable">$2</span> PING <span class="variable">$ALIVE</span>"</span> &gt;&gt; <span class="variable">$LOGFILE</span> 2&gt;&amp;1</span><br><span class="line">  <span class="built_in">exit</span> 0</span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">  <span class="built_in">echo</span> <span class="string">"Failed:redis-cli -h <span class="variable">$1</span> -p <span class="variable">$2</span> PING <span class="variable">$ALIVE</span> "</span> &gt;&gt; <span class="variable">$LOGFILE</span> 2&gt;&amp;1</span><br><span class="line">  <span class="built_in">exit</span> 1</span><br><span class="line"><span class="keyword">fi</span></span><br></pre></td></tr></table></figure>
]]></content>
      <categories>
        <category>其它</category>
      </categories>
      <tags>
        <tag>Redis</tag>
      </tags>
  </entry>
  <entry>
    <title>GitLab版本升级</title>
    <url>/pages/deployment/else/gitlab-update/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\pages\assets\css\APlayer.min.css"><script src="\pages\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><blockquote>
<p>GitLab版本升级到11.9.1</p>
</blockquote>
<ul>
<li>先备份gitlab</li>
</ul>
<figure class="highlight sh"><table><tr><td class="code"><pre><span class="line">gitlab-rake gitlab:backup:create</span><br></pre></td></tr></table></figure>
<p>生成的备份文件在：/var/opt/gitlab/backups/下，格式如：1537856454_gitlab_backup.tar</p>
<a id="more"></a>
<ul>
<li>如果要恢复时间戳为1537856454的备份</li>
</ul>
<figure class="highlight sh"><table><tr><td class="code"><pre><span class="line">gitlab-rake gitlab:backup:restore BACKUP=1537856454</span><br></pre></td></tr></table></figure>
<ul>
<li>升级到11.9.1（当前11.0.4）</li>
</ul>
<figure class="highlight sh"><table><tr><td class="code"><pre><span class="line">wget https://mirrors.tuna.tsinghua.edu.cn/gitlab-ce/yum/el7/gitlab-ce-11.9.1-ce.0.el7.x86_64.rpm</span><br><span class="line">rpm -Uvh gitlab-ce-11.9.1-ce.0.el7.x86_64.rpm</span><br></pre></td></tr></table></figure>]]></content>
      <categories>
        <category>其它</category>
      </categories>
      <tags>
        <tag>Gitlab</tag>
      </tags>
  </entry>
  <entry>
    <title>Gitlab CI -- gitlab ci 配置文件一例</title>
    <url>/pages/cicd/gitlab-cicd/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\pages\assets\css\APlayer.min.css"><script src="\pages\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><hr>
<blockquote>
<p><a href="https://docs.gitlab.com/ce/ci/" target="_blank" rel="noopener"><strong>GitLab CI/CD</strong></a>是GitLab内置的工具，用于项目持续集成、持续部署。GitLab CI/CD 由位于代码仓库根目录的名为<strong>.gitlab-ci.yml</strong>的文件配置。而此文件中设置的脚本由GitLab Runner执行。</p>
<p>Gitlab CI （持续集成）自动构建任务需编写配置文件 .gitlab-ci.yml</p>
</blockquote>
<a id="more"></a>
<p><a href="http://git.pro.keep.com/devops/docs" target="_blank" rel="noopener">本书</a> 通过GitLab CI/CD自动发布：</p>
<p><img src="/assets/images2019/cicd.assets/1561299107170.png" alt="Gitlab CI"></p>
<p>以本书的.gitlab-ci.yml为例：</p>
<figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="attr">stages:</span></span><br><span class="line">  <span class="bullet">-</span> <span class="string">build</span></span><br><span class="line">  <span class="bullet">-</span> <span class="string">deploy</span></span><br><span class="line"></span><br><span class="line"><span class="attr">build:</span></span><br><span class="line">  <span class="attr">image:</span> <span class="string">docker:stable</span></span><br><span class="line">  <span class="attr">stage:</span> <span class="string">build</span></span><br><span class="line">  <span class="attr">tags:</span></span><br><span class="line">    <span class="bullet">-</span> <span class="string">dind-v19</span></span><br><span class="line">  <span class="attr">script:</span></span><br><span class="line">    <span class="bullet">-</span> <span class="string">docker</span> <span class="string">info</span></span><br><span class="line">    <span class="bullet">-</span> <span class="string">image_name=lzzeng/docs:latest</span></span><br><span class="line">    <span class="bullet">-</span> <span class="string">docker</span> <span class="string">build</span> <span class="string">-t</span> <span class="string">$image_name</span> <span class="string">.</span></span><br><span class="line">    <span class="bullet">-</span> <span class="string">docker</span> <span class="string">login</span> <span class="string">-u</span> <span class="string">$docker_hub_user</span> <span class="string">-p</span> <span class="string">$docker_hub_pass</span></span><br><span class="line">    <span class="bullet">-</span> <span class="string">docker</span> <span class="string">push</span> <span class="string">$image_name</span></span><br><span class="line">  <span class="attr">only:</span></span><br><span class="line">    <span class="bullet">-</span> <span class="string">master</span> <span class="comment"># this job will affect only the 'master' branch</span></span><br><span class="line"></span><br><span class="line"><span class="attr">ansible-docker:</span></span><br><span class="line">  <span class="attr">image:</span> <span class="string">ansible-alpine:2.8.0</span></span><br><span class="line">  <span class="attr">stage:</span> <span class="string">deploy</span></span><br><span class="line">  <span class="attr">tags:</span></span><br><span class="line">    <span class="bullet">-</span> <span class="string">dind-v19</span></span><br><span class="line">  <span class="attr">script:</span></span><br><span class="line">    <span class="bullet">-</span> <span class="string">echo</span> <span class="string">"GITBOOK_HOST is $GITBOOK_HOST_DEV"</span></span><br><span class="line">    <span class="bullet">-</span> <span class="string">echo</span> <span class="string">"$SSH_PRIVATE_KEY_DEV"</span> <span class="string">&gt;</span> <span class="string">~/.key</span></span><br><span class="line">    <span class="bullet">-</span> <span class="string">chmod</span> <span class="number">600</span> <span class="string">~/.key</span></span><br><span class="line">    <span class="bullet">-</span> <span class="string">echo</span> <span class="string">"$ANSIBLE_CFG_CONTENT"</span> <span class="string">&gt;</span> <span class="string">~/.ansible.cfg</span></span><br><span class="line">    <span class="bullet">-</span> <span class="string">ansible-playbook</span> <span class="string">-i</span> <span class="string">"$GITBOOK_HOST_DEV,"</span> <span class="string">--private-key</span> <span class="string">~/.key</span> <span class="string">-u</span> <span class="string">root</span> <span class="string">deploy/inDocker.yml</span></span><br></pre></td></tr></table></figure>
<p>其中，</p>
<ul>
<li><p>stages 段落表示有 有两个构建阶段，标识分别是build 和 deploy</p>
</li>
<li><p>build段落，stage域（或属性）的值为 build, 表示这段脚本是上述build的具体执行过程</p>
</li>
<li><p>tags域为 dind-v19， 表示本阶段构建选择tag为dind-v19的gitlab runner，这是事先已注册的一个允许构建docker镜像的执行器，且这个执行器自身也是docker容器，即 docker in docker (dind）</p>
</li>
<li><p>build的script段：docker build 构建镜像 -&gt; docker login 登录Docker Hub-&gt; docker push 推送镜像至Docker Hub</p>
</li>
<li><p>only master 表示只接受master分支更新后触发CI</p>
</li>
<li><p>ansible-docker阶段的作用是远程登录目标机器拉取镜像、创建并运行容器</p>
</li>
</ul>
]]></content>
      <categories>
        <category>CICD</category>
      </categories>
      <tags>
        <tag>Gitlab</tag>
        <tag>CICD</tag>
      </tags>
  </entry>
  <entry>
    <title>kubespray安装K8s</title>
    <url>/pages/deployment/k8s/kubespray-k8s/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\pages\assets\css\APlayer.min.css"><script src="\pages\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><hr>
<blockquote>
<p>kubespray项目地址: <a href="https://github.com/kubernetes-sigs/kubespray" target="_blank" rel="noopener">https://github.com/kubernetes-sigs/kubespray</a></p>
<p>官方参考：<a href="http://192.168.100.150/k8s/kubespray-k8s/0812/kubespray/#/docs/getting-started" target="_blank" rel="noopener">http://192.168.100.150/k8s/kubespray-k8s/0812/kubespray/#/docs/getting-started</a></p>
<p>项目分支：release-2.11</p>
<p>K8s版本：1.15.1</p>
</blockquote>
<a id="more"></a>
<p><em><a href="https://kubernetes.io/docs/concepts/overview/what-is-kubernetes/" target="_blank" rel="noopener">Kubernetes (K8s)</a> is an open-source system for automating deployment, scaling, and management of containerized applications.</em></p>
<p><a href="https://kubernetes.io/docs/concepts/overview/what-is-kubernetes/" target="_blank" rel="noopener"><strong>Kubernetes (K8s)</strong></a> 是一个开源容器编排引擎，用于自动化容器化应用程序的部署，扩展和管理。</p>
<p><img src="https://d33wubrfki0l68.cloudfront.net/26a177ede4d7b032362289c6fccd448fc4a91174/eb693/images/docs/container_evolution.svg" alt="Deployment evolution"></p>
<p><em>应用部署方式的演变历史：物理机部署  =&gt; 虚拟机部署  =&gt; 容器化部署</em></p>
<h2 id="准备"><a href="#准备" class="headerlink" title="准备"></a>准备</h2><p>因国外网络问题，安装前需作必要的修改，写成预处理脚本如下：</p>
<p>pre-install.sh:</p>
<figure class="highlight sh"><table><tr><td class="code"><pre><span class="line"><span class="meta">#!/bin/sh</span></span><br><span class="line"></span><br><span class="line"><span class="comment">### 安装git并clone官方安装脚本</span></span><br><span class="line">yum install git -y</span><br><span class="line">kube_version=v1.15.1</span><br><span class="line"><span class="keyword">if</span> [ ! -d kubespray ]; <span class="keyword">then</span></span><br><span class="line">  git <span class="built_in">clone</span> https://github.com/kubernetes-sigs/kubespray</span><br><span class="line">  <span class="built_in">cd</span> kubespray</span><br><span class="line">  git checkout release-2.11</span><br><span class="line">  <span class="built_in">cd</span> -</span><br><span class="line"><span class="keyword">fi</span></span><br><span class="line"></span><br><span class="line"><span class="built_in">cd</span> kubespray</span><br><span class="line"><span class="keyword">if</span> [ ! -d inventory/mycluster ]; <span class="keyword">then</span></span><br><span class="line">  cp -r inventory/sample inventory/mycluster</span><br><span class="line"><span class="keyword">fi</span></span><br><span class="line"></span><br><span class="line"><span class="comment">### 更新pip及安装依赖</span></span><br><span class="line"><span class="keyword">if</span> [ <span class="string">"<span class="variable">$1</span>"</span> = <span class="string">"-U"</span> ]; <span class="keyword">then</span></span><br><span class="line">  easy_install pip</span><br><span class="line">  pip install pip==8.0.3</span><br><span class="line">  pip uninstall requests</span><br><span class="line">  pip install -U pip</span><br><span class="line">  pip install -U setuptools</span><br><span class="line">  pip install -r requirements.txt</span><br><span class="line"><span class="keyword">fi</span></span><br><span class="line"></span><br><span class="line"><span class="comment">################### 所有修改仅涉及以下4个文件，可事先改好另存覆盖</span></span><br><span class="line"><span class="comment">#inventory/mycluster/group_vars/k8s-cluster/k8s-cluster.yml</span></span><br><span class="line"><span class="comment">#roles/download/defaults/main.yml</span></span><br><span class="line"><span class="comment">#roles/kubespray-defaults/defaults/main.yaml</span></span><br><span class="line"><span class="comment">#inventory/mycluster/</span></span><br><span class="line"></span><br><span class="line"><span class="comment">################### 若不事先准备改好的文件，可使用以下命令修改：</span></span><br><span class="line"><span class="comment">### 改版本号</span></span><br><span class="line">sed -i <span class="string">"s/^kube_version:.*$/kube_version: <span class="variable">$kube_version</span>/"</span> roles/kubespray-defaults/defaults/main.yaml</span><br><span class="line">sed -i <span class="string">"s/^kube_version:.*$/kube_version: <span class="variable">$kube_version</span>/"</span> roles/download/defaults/main.yml</span><br><span class="line">sed -i <span class="string">"s/^kube_version:.*$/kube_version: <span class="variable">$kube_version</span>/"</span> inventory/mycluster/group_vars/k8s-cluster/k8s-cluster.yml</span><br><span class="line"></span><br><span class="line"><span class="comment">### 改镜像源</span></span><br><span class="line">kube_image_repo=mirrorgooglecontainers</span><br><span class="line">sed -i <span class="string">"s/^kube_image_repo:.*$/kube_image_repo: <span class="variable">$kube_image_repo</span>/"</span> inventory/mycluster/group_vars/k8s-cluster/k8s-cluster.yml</span><br><span class="line"></span><br><span class="line">sed -i <span class="string">"s/^kube_image_repo:.*$/kube_image_repo: <span class="variable">$kube_image_repo</span>/"</span> roles/download/defaults/main.yml</span><br><span class="line">sed -i <span class="string">"s/k8s.gcr.io/<span class="variable">$kube_image_repo</span>/g"</span> roles/download/defaults/main.yml</span><br><span class="line">sed -i <span class="string">"s#gcr.io/google_containers#<span class="variable">$kube_image_repo</span>#g"</span> roles/download/defaults/main.yml</span><br><span class="line">sed -i <span class="string">"s/gcr.io/<span class="variable">$kube_image_repo</span>/g"</span> roles/download/defaults/main.yml</span><br><span class="line">sed -i <span class="string">"s#(k8s.)?gcr.io(/google_containers)?#<span class="variable">$kube_image_repo</span>#g"</span> roles/download/defaults/main.yml</span><br><span class="line"></span><br><span class="line"><span class="comment">#nodelocaldns_version: 1.15.1</span></span><br><span class="line">nodelocaldns_image_repo=lzzeng/k8s-dns-node-cache</span><br><span class="line">sed -i <span class="string">'s#^nodelocaldns_image_repo:.*$'</span><span class="string">"#nodelocaldns_image_repo: <span class="variable">$nodelocaldns_image_repo</span>#"</span> roles/download/defaults/main.yml</span><br><span class="line"></span><br><span class="line"><span class="comment">### 改二进制文件下载地址</span></span><br><span class="line">download_url=http://192.168.100.150/k8s/<span class="variable">$kube_version</span></span><br><span class="line">sed -i <span class="string">'s#^kubeadm_download_url:.*$#kubeadm_download_url: '</span>\"<span class="string">"<span class="variable">$download_url</span>"</span><span class="string">'/kubeadm\"#'</span> roles/download/defaults/main.yml</span><br><span class="line">sed -i <span class="string">'s#^hyperkube_download_url:.*$#hyperkube_download_url: '</span>\"<span class="string">"<span class="variable">$download_url</span>"</span><span class="string">'/hyperkube\"#'</span> roles/download/defaults/main.yml</span><br><span class="line">sed -i <span class="string">'s#^calicoctl_download_url:.*$#calicoctl_download_url: '</span>\"<span class="string">"<span class="variable">$download_url</span>"</span><span class="string">'/calicoctl-linux-amd64\"#'</span> roles/download/defaults/main.yml <span class="comment">#1.15.1 使用 3.7.3</span></span><br><span class="line">sed -i <span class="string">'s#^etcd_download_url:.*$#etcd_download_url: '</span>\"<span class="string">"<span class="variable">$download_url</span>"</span><span class="string">'/etcd-v3.3.10-linux-amd64.tar.gz\"#'</span> roles/download/defaults/main.yml <span class="comment">#1.15.1 使用 v3.3.10</span></span><br><span class="line">sed -i <span class="string">'s#^cni_download_url:.*$#cni_download_url: '</span>\"<span class="string">"<span class="variable">$download_url</span>"</span><span class="string">'/cni-plugins-linux-amd64-v0.8.1.tgz\"#'</span> roles/download/defaults/main.yml <span class="comment">#1.15.1 使用 v0.8.1</span></span><br><span class="line">sed -i <span class="string">'s#^crictl_download_url:.*$#crictl_download_url: '</span>\"<span class="string">"<span class="variable">$download_url</span>"</span><span class="string">'/critest-v1.15.0-linux-amd64.tar.gz\"#'</span> roles/download/defaults/main.yml <span class="comment">#1.15.1 使用 v1.15.0</span></span><br><span class="line"></span><br><span class="line"><span class="comment">### 可以修改内存限制，使得1G内存也可以执行安装</span></span><br><span class="line"><span class="comment">#sed -i 's/^minimal_node_memory_mb:.*$/minimal_node_memory_mb: 500/' roles/kubernetes/preinstall/defaults/main.yml</span></span><br><span class="line"><span class="comment">#sed -i 's/^minimal_master_memory_mb:.*$/minimal_master_memory_mb: 500/' roles/kubernetes/preinstall/defaults/main.yml</span></span><br><span class="line"><span class="comment">#sed -i 's/ansible_memtotal_mb\s*&gt;=\s*[0-9]\+/ansible_memtotal_mb &gt;= 500/' roles/kubernetes/preinstall/tasks/0020-verify-settings.yml</span></span><br><span class="line"></span><br><span class="line"><span class="comment">### docker加速</span></span><br><span class="line">cat &lt;&lt;EOF &gt;&gt; inventory/mycluster/group_vars/k8s-cluster/k8s-cluster.yml</span><br><span class="line"><span class="comment"># Debian docker-ce repo</span></span><br><span class="line">docker_debian_repo_base_url: <span class="string">"https://mirrors.aliyun.com/docker-ce/linux/debian"</span></span><br><span class="line">docker_debian_repo_gpgkey: <span class="string">"https://mirrors.aliyun.com/docker-ce/linux/debian/gpg"</span></span><br><span class="line">dockerproject_apt_repo_base_url: <span class="string">"https://mirrors.aliyun.com/docker-engine/apt/repo"</span></span><br><span class="line">dockerproject_apt_repo_gpgkey: <span class="string">"https://mirrors.aliyun.com/docker-engine/apt/gpg"</span></span><br><span class="line">docker_options: <span class="string">"--insecure-registry= --registry-mirror=https://registry.docker-cn.com --graph= "</span></span><br><span class="line">EOF</span><br><span class="line"></span><br><span class="line"><span class="comment">### 打印ansible命令</span></span><br><span class="line"><span class="built_in">echo</span> <span class="string">"再kubespray根目录执行以下命令安装或重置："</span></span><br><span class="line"><span class="built_in">echo</span> ansible-playbook -i inventory/mycluster/hosts.ini --become --become-user=root cluster.yml</span><br><span class="line"><span class="built_in">echo</span> ansible-playbook -i inventory/mycluster/hosts.ini --become --become-user=root reset.yml</span><br></pre></td></tr></table></figure>
<p>inventory/mycluster/hosts.ini示例：</p>
<p>node1、node2是master调度节点，node1~node3是etcd节点，node3~node6是工作节点。</p>
<figure class="highlight"><table><tr><td class="code"><pre><span class="line"><span class="section">[all]</span></span><br><span class="line">node1    ansible_host=192.168.100.79 ip=192.168.100.79</span><br><span class="line">node2    ansible_host=192.168.100.80 ip=192.168.100.80</span><br><span class="line">node3    ansible_host=192.168.100.81 ip=192.168.100.81</span><br><span class="line">node4    ansible_host=192.168.100.216 ip=192.168.100.216</span><br><span class="line">node5    ansible_host=192.168.100.217 ip=192.168.100.217</span><br><span class="line">node6    ansible_host=192.168.100.218 ip=192.168.100.218</span><br><span class="line"></span><br><span class="line"><span class="section">[kube-master]</span></span><br><span class="line">node1</span><br><span class="line">node2</span><br><span class="line"></span><br><span class="line"><span class="section">[etcd]</span></span><br><span class="line">node1</span><br><span class="line">node2</span><br><span class="line">node3</span><br><span class="line"></span><br><span class="line"><span class="section">[kube-node]</span></span><br><span class="line">node3</span><br><span class="line">node4</span><br><span class="line">node5</span><br><span class="line">node6</span><br><span class="line"></span><br><span class="line"><span class="section">[k8s-cluster:children]</span></span><br><span class="line">kube-master</span><br><span class="line">kube-node</span><br></pre></td></tr></table></figure>
<h2 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h2><p>另找一个执行ansible的机器，并授权使其可以免密登录node1~node6：</p>
<figure class="highlight sh"><table><tr><td class="code"><pre><span class="line">ssh-keygen		          <span class="comment"># 这几条命令都会提示手动确认</span></span><br><span class="line">ssh-copy-id root@node1</span><br><span class="line">ssh-copy-id root@node2</span><br><span class="line">...</span><br></pre></td></tr></table></figure>
<p>执行安装：</p>
<figure class="highlight sh"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 执行上述准备好的预处理脚本（对应v1.15.1版本）</span></span><br><span class="line">sh pre-install.sh</span><br><span class="line"><span class="comment"># 按上述修改好hosts.ini后，执行ansible编排任务，等待结束即可</span></span><br><span class="line">ansible-playbook -i inventory/mycluster/hosts.ini --become --become-user=root cluster.yml</span><br></pre></td></tr></table></figure>
<h2 id="登录"><a href="#登录" class="headerlink" title="登录"></a>登录</h2><p>获取登录kubernetes-dashboard的token:</p>
<figure class="highlight sh"><table><tr><td class="code"><pre><span class="line">kubectl get svc --all-namespaces | grep kubernetes-dashboard</span><br><span class="line">kubectl -n kube-system describe $(kubectl -n kube-system get secret -n kube-system -o name | grep namespace) | grep token</span><br></pre></td></tr></table></figure>
<p>未使用keepalived时，可通过其一master登录：<a href="https://192.168.100.79:6443/api/v1/namespaces/kube-system/services/https:kubernetes-dashboard:/proxy/" target="_blank" rel="noopener">https://192.168.100.79:6443/api/v1/namespaces/kube-system/services/https:kubernetes-dashboard:/proxy/</a></p>
<h2 id="keepalived配置示例"><a href="#keepalived配置示例" class="headerlink" title="keepalived配置示例"></a>keepalived配置示例</h2><p>node1 (master-1) 的/etc/keepalived/keepalived.conf：</p>
<figure class="highlight"><table><tr><td class="code"><pre><span class="line">! Configuration File for keepalived</span><br><span class="line"></span><br><span class="line">global_defs &#123;</span><br><span class="line">   router_id LVS_DEVEL</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">vrrp_script check_haproxy &#123;</span><br><span class="line">    script "killall -0 haproxy"</span><br><span class="line">    interval 3</span><br><span class="line">    weight -2</span><br><span class="line">    fall 10</span><br><span class="line">    rise 2</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">vrrp_instance VI_1 &#123;</span><br><span class="line">    state MASTER</span><br><span class="line">    interface ens32</span><br><span class="line">    virtual_router_id 78</span><br><span class="line">    priority 120</span><br><span class="line">    advert_int 1</span><br><span class="line">    authentication &#123;</span><br><span class="line">        auth_type PASS</span><br><span class="line">        auth_pass xxxxxxxxxxxxxxxx</span><br><span class="line">    &#125;</span><br><span class="line">    virtual_ipaddress &#123;</span><br><span class="line">        192.168.100.78</span><br><span class="line">    &#125;</span><br><span class="line">    track_script &#123;</span><br><span class="line">        check_haproxy</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>node2 (master-2) 的/etc/keepalived/keepalived.conf：</p>
<figure class="highlight"><table><tr><td class="code"><pre><span class="line">! Configuration File for keepalived</span><br><span class="line"></span><br><span class="line">global_defs &#123;</span><br><span class="line">   router_id LVS_DEVEL</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">vrrp_script check_haproxy &#123;</span><br><span class="line">    script "killall -0 haproxy"</span><br><span class="line">    interval 3</span><br><span class="line">    weight -2</span><br><span class="line">    fall 10</span><br><span class="line">    rise 2</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">vrrp_instance VI_1 &#123;</span><br><span class="line">    state BACKUP</span><br><span class="line">    interface ens32</span><br><span class="line">    virtual_router_id 78</span><br><span class="line">    priority 100</span><br><span class="line">    advert_int 1</span><br><span class="line">    authentication &#123;</span><br><span class="line">        auth_type PASS</span><br><span class="line">        auth_pass xxxxxxxxxxxxxxxx</span><br><span class="line">    &#125;</span><br><span class="line">    virtual_ipaddress &#123;</span><br><span class="line">        192.168.100.78</span><br><span class="line">    &#125;</span><br><span class="line">    track_script &#123;</span><br><span class="line">        check_haproxy</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>仅<code>state BACKUP</code>和<code>priority 100</code>两处不同。</p>
<hr>
<p><strong>补充（1.14.1）</strong></p>
<ul>
<li><p>修改了配置文件中的镜像地址</p>
<ul>
<li>inventory/mycluster/group_vars/k8s-cluster/k8s-cluster.yml</li>
<li>roles/download/defaults/main.yml</li>
</ul>
<p>大部分镜像可以改从registry.cn-hangzhou.aliyuncs.com/google_containers获取。</p>
</li>
</ul>
<ul>
<li><p>不能直接下载的软件</p>
<p>通过浏览器（已设置google代理）下载kubeadm和hyperkube，放置在内网文件服务器中。hyperkube和kubeadm包会被下载到所有k8s节点的/tmp/releases目录下。</p>
</li>
</ul>
<figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="comment"># kubeadm_download_url: https://storage.googleapis.com/kubernetes-release/release/v1.14.1/bin/linux/amd64/kubeadm</span></span><br><span class="line"><span class="comment"># hyperkube_download_url: https://storage.googleapis.com/kubernetes-release/release/v1.14.1/bin/linux/amd64/hyperkube</span></span><br></pre></td></tr></table></figure>
<ul>
<li><p>不能从Ali镜像库获取的镜像</p>
<ul>
<li>k8s.gcr.io/cluster-proportional-autoscaler-amd64:1.4.0</li>
<li>k8s.gcr.io/k8s-dns-node-cache:1.15.1</li>
</ul>
</li>
</ul>
<ul>
<li>执行</li>
</ul>
<figure class="highlight sh"><table><tr><td class="code"><pre><span class="line">pip install -r requirements.txt</span><br><span class="line"></span><br><span class="line">ansible-playbook -i inventory/mycluster/hosts.ini --become --become-user=root cluster.yml</span><br></pre></td></tr></table></figure>
<ul>
<li>如何清理</li>
</ul>
<figure class="highlight sh"><table><tr><td class="code"><pre><span class="line">ansible -i inventory/mycluster/hosts.ini all -m script -a <span class="string">'/opt/clean.sh'</span></span><br><span class="line"><span class="comment"># 或者</span></span><br><span class="line">ansible-playbook -i inventory/mycluster/hosts.ini --become --become-user=root reset.yml</span><br></pre></td></tr></table></figure>
<p>clean.sh:</p>
<figure class="highlight sh"><table><tr><td class="code"><pre><span class="line"><span class="meta">#!/bin/sh</span></span><br><span class="line"></span><br><span class="line">rm -rf /etc/kubernetes/</span><br><span class="line">rm -rf /var/lib/kubelet</span><br><span class="line">rm -rf /var/lib/etcd</span><br><span class="line">rm -rf /usr/<span class="built_in">local</span>/bin/kubectl</span><br><span class="line">rm -rf /etc/systemd/system/calico-node.service</span><br><span class="line">rm -rf /etc/systemd/system/kubelet.service</span><br><span class="line">systemctl stop etcd.service</span><br><span class="line">systemctl <span class="built_in">disable</span> etcd.service</span><br><span class="line">systemctl stop calico-node.service</span><br><span class="line">systemctl <span class="built_in">disable</span> calico-node.service</span><br><span class="line">docker stop $(docker ps -q)</span><br><span class="line">docker rm $(docker ps -a -q)</span><br><span class="line">systemctl restart docker</span><br></pre></td></tr></table></figure>
<ul>
<li>安装完成后修改节点标签</li>
</ul>
<figure class="highlight sh"><table><tr><td class="code"><pre><span class="line">kubectl label node node3 node-role.kubernetes.io/worker=<span class="string">""</span>  <span class="comment">#标记worker</span></span><br><span class="line"></span><br><span class="line">kubectl label node node3 node-role.kubernetes.io/node=<span class="string">""</span> <span class="comment">#标记node</span></span><br><span class="line"></span><br><span class="line">kubectl label node node3  <span class="string">"node-role.kubernetes.io/worker"</span>- <span class="comment"># 删除worker标记</span></span><br></pre></td></tr></table></figure>
<hr>
<h3 id="Kubernetes-Dashboard"><a href="#Kubernetes-Dashboard" class="headerlink" title="Kubernetes Dashboard"></a>Kubernetes Dashboard</h3><ul>
<li><p>以NodePort方式暴露服务</p>
<p>修改代码，使用NodePort方式访问Dashboard。</p>
</li>
</ul>
<figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="comment"># ./roles/kubernetes-apps/ansible/templates/dashboard.yml.j2</span></span><br><span class="line"><span class="comment"># ------------------- Dashboard Service ------------------- #</span></span><br><span class="line">      <span class="attr">targetPort:</span> <span class="number">8443</span></span><br><span class="line">  <span class="attr">type:</span> <span class="string">NodePort</span>    <span class="string">//添加这一行</span>   </span><br><span class="line">  <span class="attr">selector:</span></span><br><span class="line"><span class="attr">k8s-app:</span> <span class="string">kubernetes-dashboard</span></span><br></pre></td></tr></table></figure>
<ul>
<li>获取token</li>
</ul>
<figure class="highlight sh"><table><tr><td class="code"><pre><span class="line">kubectl get svc --all-namespaces | grep kubernetes-dashboard</span><br><span class="line"></span><br><span class="line">kubectl -n kube-system describe $(kubectl -n kube-system get secret -n kube-system -o name | grep namespace) | grep token</span><br></pre></td></tr></table></figure>
<ul>
<li><p>非NodePort方式访问</p>
<p><a href="https://192.168.100.78:6443/api/v1/namespaces/kube-system/services/https:kubernetes-dashboard:/proxy/" target="_blank" rel="noopener">https://192.168.100.78:6443/api/v1/namespaces/kube-system/services/https:kubernetes-dashboard:/proxy/</a>（192.168.100.78是VIP或者某个master节点IP）</p>
</li>
</ul>
<hr>
<p><strong>后续操作</strong></p>
<p>以上完成的是带有kubernetes dashboard的初始环境的搭建，之后还要进行 替换Ingress、设置AD认证、安装管理工具等，此不涉及。</p>
]]></content>
      <categories>
        <category>K8s</category>
      </categories>
      <tags>
        <tag>K8s</tag>
      </tags>
  </entry>
  <entry>
    <title>Consul-template</title>
    <url>/pages/monitoring/consul/consul-template/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\pages\assets\css\APlayer.min.css"><script src="\pages\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><hr>
<h2 id="安装consul"><a href="#安装consul" class="headerlink" title="安装consul"></a>安装consul</h2><p>见 <a href="/monitoring/consul/my-nginx-consul">consul</a></p>
<h2 id="安装consul-template"><a href="#安装consul-template" class="headerlink" title="安装consul-template"></a>安装consul-template</h2><figure class="highlight sh"><table><tr><td class="code"><pre><span class="line">wget https://releases.hashicorp.com/consul-template/0.20.0/consul-template_0.20.0_linux_amd64.tgz</span><br><span class="line">tar -xf consul-template_0.20.0_linux_amd64.tgz</span><br><span class="line">mv consul-template /usr/bin</span><br><span class="line">chmod a+x /usr/bin/consul-template</span><br></pre></td></tr></table></figure>
<a id="more"></a>
<h2 id="注册服务"><a href="#注册服务" class="headerlink" title="注册服务"></a>注册服务</h2><figure class="highlight sh"><table><tr><td class="code"><pre><span class="line">curl http://192.168.100.140:8500/v1/agent/service/register -X PUT -i -H <span class="string">"Content-Type:application/json"</span> -d <span class="string">'&#123;</span></span><br><span class="line"><span class="string">	"ID": "test.zlz.01",</span></span><br><span class="line"><span class="string">	"Name": "test_zlz",</span></span><br><span class="line"><span class="string">	"Tags": ["zlz"],</span></span><br><span class="line"><span class="string">	"Address": "192.168.101.35",</span></span><br><span class="line"><span class="string">	"Port": 9003,</span></span><br><span class="line"><span class="string">	"Check": &#123;</span></span><br><span class="line"><span class="string">		"DeregisterCriticalServiceAfter": "90m",</span></span><br><span class="line"><span class="string">		"Args": [],</span></span><br><span class="line"><span class="string">		"HTTP": "http://192.168.101.35:9003/hc",</span></span><br><span class="line"><span class="string">		"Interval": "15s"</span></span><br><span class="line"><span class="string">	&#125;,</span></span><br><span class="line"><span class="string">	"Meta": &#123;</span></span><br><span class="line"><span class="string">		"version": "1.0"</span></span><br><span class="line"><span class="string">	&#125;,</span></span><br><span class="line"><span class="string">	"EnableTagOverride": false</span></span><br><span class="line"><span class="string">&#125;'</span></span><br><span class="line"></span><br><span class="line">curl http://192.168.100.140:8500/v1/agent/service/register -X PUT -i -H <span class="string">"Content-Type:application/json"</span> -d <span class="string">'&#123;</span></span><br><span class="line"><span class="string">	"ID": "test.zlz.02",</span></span><br><span class="line"><span class="string">	"Name": "test_zlz",</span></span><br><span class="line"><span class="string">	"Tags": ["zlz"],</span></span><br><span class="line"><span class="string">	"Address": "192.168.101.36",</span></span><br><span class="line"><span class="string">	"Port": 9003,</span></span><br><span class="line"><span class="string">	"Check": &#123;</span></span><br><span class="line"><span class="string">		"DeregisterCriticalServiceAfter": "90m",</span></span><br><span class="line"><span class="string">		"Args": [],</span></span><br><span class="line"><span class="string">		"HTTP": "http://192.168.101.36:9003/hc",</span></span><br><span class="line"><span class="string">		"Interval": "15s"</span></span><br><span class="line"><span class="string">	&#125;,</span></span><br><span class="line"><span class="string">	"Meta": &#123;</span></span><br><span class="line"><span class="string">		"version": "1.0"</span></span><br><span class="line"><span class="string">	&#125;,</span></span><br><span class="line"><span class="string">	"EnableTagOverride": false</span></span><br><span class="line"><span class="string">&#125;'</span></span><br></pre></td></tr></table></figure>
<h2 id="编写NginX配置模板"><a href="#编写NginX配置模板" class="headerlink" title="编写NginX配置模板"></a>编写NginX配置模板</h2><p>nginx.conf.ctmpl：</p>
<figure class="highlight"><table><tr><td class="code"><pre><span class="line">&#123;&#123;range services -&#125;&#125;</span><br><span class="line">&#123;&#123;$name := .Name&#125;&#125;</span><br><span class="line">&#123;&#123;$service := service .Name&#125;&#125;</span><br><span class="line">&#123;&#123;if in .Tags "zlz"&#125;&#125;</span><br><span class="line">upstream &#123;&#123;$name&#125;&#125; &#123;</span><br><span class="line">    &#123;&#123;range $service&#125;&#125;server &#123;&#123;.Address&#125;&#125;:&#123;&#123;.Port&#125;&#125;;</span><br><span class="line">    &#123;&#123;end&#125;&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#123;&#123;end&#125;&#125;</span><br><span class="line">&#123;&#123;end&#125;&#125;</span><br><span class="line"></span><br><span class="line">&#123;&#123;- range services -&#125;&#125;</span><br><span class="line">&#123;&#123;$name := .Name&#125;&#125;</span><br><span class="line">&#123;&#123;if in .Tags "zlz"&#125;&#125;</span><br><span class="line">server &#123;</span><br><span class="line">    listen 80;</span><br><span class="line">    server_name	xxx.xxx;</span><br><span class="line">    root	html;</span><br><span class="line">    index	index.html index.htm;</span><br><span class="line">    </span><br><span class="line">    access_log	/var/log/nginx/&#123;&#123;$name&#125;&#125;_access.log	main;</span><br><span class="line">    </span><br><span class="line">    location / &#123;</span><br><span class="line">    proxy_pass http://&#123;&#123;$name&#125;&#125;;</span><br><span class="line">    proxy_redirect		off;</span><br><span class="line">    proxy_set_header    Host        	$host;</span><br><span class="line">    proxy_set_header    X-Real-IP   	$remote_addr;</span><br><span class="line">    proxy_set_header    X-Forwarded-For $proxy_add_x_forwarded_for;</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    error_page  500 502 503 504 /50x.html;</span><br><span class="line">    location = /50x.html &#123;</span><br><span class="line">    root	/usr/share/nginx/html;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line">&#123;&#123;end&#125;&#125;</span><br><span class="line">&#123;&#123;end&#125;&#125;</span><br></pre></td></tr></table></figure>
<h2 id="编写consul-template配置文件"><a href="#编写consul-template配置文件" class="headerlink" title="编写consul-template配置文件"></a>编写consul-template配置文件</h2><p>nginx.hcl：</p>
<figure class="highlight"><table><tr><td class="code"><pre><span class="line">consul &#123;</span><br><span class="line">    address = "192.168.100.150:8500"</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">template &#123;</span><br><span class="line">    source = "nginx.conf.ctmpl"</span><br><span class="line">    destination = "/etc/nginx/conf.d/default.conf"</span><br><span class="line">    command = "service nginx reload"</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h2 id="测试consul-template"><a href="#测试consul-template" class="headerlink" title="测试consul-template"></a>测试consul-template</h2><figure class="highlight sh"><table><tr><td class="code"><pre><span class="line">consul-template -config nginx.hcl <span class="comment"># 会生成/etc/nginx/conf.d/default.conf</span></span><br><span class="line"><span class="comment"># [control] + c</span></span><br></pre></td></tr></table></figure>
<h2 id="测试自动更新NginX配置"><a href="#测试自动更新NginX配置" class="headerlink" title="测试自动更新NginX配置"></a>测试自动更新NginX配置</h2><ol>
<li>运行consul-template服务</li>
</ol>
<figure class="highlight sh"><table><tr><td class="code"><pre><span class="line">nohup consul-template -config nginx.hcl &gt;/var/<span class="built_in">log</span>/consul-template.log 2&gt;&amp;1 &amp;</span><br></pre></td></tr></table></figure>
<ol start="2">
<li><p>模拟健康状态异常时自动更新NginX配置</p>
<p>比如，修改<code>&quot;HTTP&quot;: &quot;http://192.168.101.35:9003/hc&quot;</code>为<code>&quot;HTTP&quot;: &quot;http://192.168.101.35:9003/hcc&quot;</code>，重新注册该服务后test.zlz.01的服务健康状态变为不正常。consul-template能自动检测到异常，并重新生成/etc/nginx/conf.d/default.conf。</p>
</li>
</ol>
]]></content>
      <categories>
        <category>Consul</category>
      </categories>
      <tags>
        <tag>Consul</tag>
      </tags>
  </entry>
  <entry>
    <title>Consul介绍</title>
    <url>/pages/monitoring/consul/consul/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\pages\assets\css\APlayer.min.css"><script src="\pages\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><hr>
<blockquote>
<p><a href="https://www.consul.io/docs/internals/architecture.html" target="_blank" rel="noopener"><strong>Consul</strong></a> 是一个分布式服务发现与配置的工具。与其他分布式服务注册与发现的方案，Consul的方案更“一站式”，内置了服务注册与发现框架、分布一致性协议实现（不需要ZooKeeper）、健康检查、K/V存储、多数据中心方案。</p>
</blockquote>
<a id="more"></a>
<p><img src="https://www.consul.io/assets/images/consul-arch-420ce04a.png" alt="Consul Architecture"></p>
<ul>
<li>注册服务（Register Service）</li>
</ul>
<figure class="highlight sh"><table><tr><td class="code"><pre><span class="line">curl http://&lt;your-consul-url&gt;/v1/agent/service/register -X PUT -i -H <span class="string">"Content-Type:application/json"</span> -d <span class="string">'&#123;</span></span><br><span class="line"><span class="string">    "Name": "test-name", </span></span><br><span class="line"><span class="string">    "Tags": [</span></span><br><span class="line"><span class="string">        "test-tag"</span></span><br><span class="line"><span class="string">    ], </span></span><br><span class="line"><span class="string">    "EnableTagOverride": false, </span></span><br><span class="line"><span class="string">    "ID": "test-id", </span></span><br><span class="line"><span class="string">    "Meta": &#123;"version": "1.0"&#125;, </span></span><br><span class="line"><span class="string">    "Address": "192.168.100.150", </span></span><br><span class="line"><span class="string">    "Port": 8080, </span></span><br><span class="line"><span class="string">    "Check": &#123;</span></span><br><span class="line"><span class="string">        "DeregisterCriticalServiceAfter": "90m", </span></span><br><span class="line"><span class="string">        "Args": [], </span></span><br><span class="line"><span class="string">        "HTTP": "http://192.168.100.150:8080/", </span></span><br><span class="line"><span class="string">        "Interval": "15s"</span></span><br><span class="line"><span class="string">    &#125;</span></span><br><span class="line"><span class="string">&#125;'</span></span><br></pre></td></tr></table></figure>
<ul>
<li>注销服务（Deregister Service）</li>
</ul>
<figure class="highlight sh"><table><tr><td class="code"><pre><span class="line">curl -X PUT http://&lt;your-consul-url&gt;/v1/agent/service/deregister/<span class="built_in">test</span>-id</span><br></pre></td></tr></table></figure>
]]></content>
      <categories>
        <category>Consul</category>
      </categories>
      <tags>
        <tag>Consul</tag>
      </tags>
  </entry>
  <entry>
    <title>基于NginX + Consul + Registrator + Consul-Template自动服务发现和负载均衡</title>
    <url>/pages/monitoring/consul/nginx-consul-registrator/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\pages\assets\css\APlayer.min.css"><script src="\pages\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><hr>
<blockquote>
<p>通过Docker，可以很方便地将Consul、Consul Template、Registrator和Nginx组装成一个可扩展的、高质量、高可用的服务架构体系，在添加和移除服务时不需要重写任何配置，也不需要重启任何服务，从而降低运维成本。</p>
</blockquote>
<a id="more"></a>
<h3 id="Overview"><a href="#Overview" class="headerlink" title="Overview"></a>Overview</h3><p>01.</p>
<p><img src="/assets/images2019/1556875370359.png" alt="1556875370359"></p>
<p>02.</p>
<p><img src="/assets/images2019/1556875405475.png" alt="1556875405475"></p>
<hr>
<h3 id="Configure-files"><a href="#Configure-files" class="headerlink" title="Configure files"></a>Configure files</h3><p>docker-compose.yml:</p>
<figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="attr">version:</span> <span class="string">'2'</span></span><br><span class="line"></span><br><span class="line"><span class="attr">services:</span></span><br><span class="line">  <span class="attr">consul:</span></span><br><span class="line">    <span class="attr">image:</span> <span class="string">consul</span></span><br><span class="line">    <span class="attr">ports:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="number">8400</span><span class="string">:8400</span></span><br><span class="line">      <span class="bullet">-</span> <span class="number">8500</span><span class="string">:8500</span></span><br><span class="line">      <span class="bullet">-</span> <span class="number">8600</span><span class="string">:53/udp</span></span><br><span class="line">    <span class="attr">network_mode:</span> <span class="string">host</span></span><br><span class="line">    <span class="attr">command:</span> <span class="string">agent</span> <span class="string">-server</span> <span class="string">-client=0.0.0.0</span> <span class="string">-dev</span> <span class="string">-node=node0</span> <span class="string">-bootstrap-expect=1</span> <span class="string">-data-dir=/tmp/consul</span></span><br><span class="line">    <span class="attr">labels:</span></span><br><span class="line">      <span class="attr">SERVICE_IGNORE:</span> <span class="string">'true'</span></span><br><span class="line"></span><br><span class="line">  <span class="attr">registrator:</span></span><br><span class="line">    <span class="attr">image:</span> <span class="string">gliderlabs/registrator</span></span><br><span class="line">    <span class="attr">depends_on:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">consul</span></span><br><span class="line">    <span class="attr">volumes:</span></span><br><span class="line">       <span class="bullet">-</span> <span class="string">/var/run/docker.sock:/tmp/docker.sock</span></span><br><span class="line">    <span class="attr">network_mode:</span> <span class="string">host</span></span><br><span class="line"><span class="comment">#    command: -internal consul://consul:8500 # err</span></span><br><span class="line">    <span class="attr">command:</span> <span class="string">-internal</span> <span class="string">consul://127.0.0.1:8500</span></span><br><span class="line"></span><br><span class="line">  <span class="attr">nginx-consul:</span></span><br><span class="line">    <span class="attr">image:</span> <span class="string">nginx-consul:v0.3.2</span></span><br><span class="line">    <span class="attr">build:</span> <span class="string">.</span></span><br><span class="line">    <span class="attr">depends_on:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">consul</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">registrator</span></span><br><span class="line">    <span class="attr">ports:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="number">80</span><span class="string">:80</span></span><br><span class="line">    <span class="attr">network_mode:</span> <span class="string">host</span></span><br><span class="line">    <span class="attr">command:</span> <span class="string">-consul-addr=127.0.0.1:8500</span> <span class="string">-wait=5s</span> <span class="string">-template</span> <span class="string">/etc/nginx/nginx.conf.ctmpl:/etc/nginx/conf.d/app.conf:/etc/nginx/nginx.sh</span></span><br></pre></td></tr></table></figure>
<p>nginx-consul-template Dockerfile:</p>
<figure class="highlight sh"><table><tr><td class="code"><pre><span class="line">FROM nginx</span><br><span class="line"> </span><br><span class="line">RUN apt-get update &amp;&amp; \</span><br><span class="line">    apt-get install --no-install-recommends --no-install-suggests -y unzip &amp;&amp; \</span><br><span class="line">    rm -r /var/lib/apt/lists/*</span><br><span class="line"></span><br><span class="line">ENV CONSUL_TEMPLATE_VERSION 0.20.0</span><br><span class="line"></span><br><span class="line">ADD https://releases.hashicorp.com/consul-template/<span class="variable">$&#123;CONSUL_TEMPLATE_VERSION&#125;</span>/consul-template_<span class="variable">$&#123;CONSUL_TEMPLATE_VERSION&#125;</span>_linux_amd64.zip /tmp/consul-template.zip</span><br><span class="line"></span><br><span class="line">ADD nginx.conf.ctmpl nginx.sh /etc/nginx/</span><br><span class="line"></span><br><span class="line">RUN unzip /tmp/consul-template.zip -d /usr/bin &amp;&amp; \</span><br><span class="line">    chmod +x /usr/bin/consul-template &amp;&amp; \</span><br><span class="line">    rm -f /tmp/consul-template.zip &amp;&amp; \</span><br><span class="line">    chmod +x /etc/nginx/nginx.sh</span><br><span class="line"></span><br><span class="line">WORKDIR /etc/nginx</span><br><span class="line"><span class="comment"># CMD ["nginx", "-g", "daemon off;", "&amp;"]</span></span><br><span class="line">ENTRYPOINT [<span class="string">"/usr/bin/consul-template"</span>]</span><br></pre></td></tr></table></figure>
<p>nginx configure template:</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&#123;&#123;range services&#125;&#125;</span><br><span class="line">&#123;&#123;$name := .Name&#125;&#125;</span><br><span class="line">&#123;&#123;$service := service .Name&#125;&#125;</span><br><span class="line">&#123;&#123;if in .Tags &quot;http&quot;&#125;&#125;</span><br><span class="line">upstream &#123;&#123;$name&#125;&#125; &#123;</span><br><span class="line">    &#123;&#123;range $service&#125;&#125;server &#123;&#123;.Address&#125;&#125;:&#123;&#123;.Port&#125;&#125;;</span><br><span class="line">    &#123;&#123;end&#125;&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#123;&#123;end&#125;&#125;</span><br><span class="line">&#123;&#123;end&#125;&#125;</span><br><span class="line"></span><br><span class="line">&#123;&#123;range services&#125;&#125;</span><br><span class="line">&#123;&#123;$name := .Name&#125;&#125;</span><br><span class="line">&#123;&#123;if in .Tags &quot;http&quot;&#125;&#125;</span><br><span class="line">server &#123;</span><br><span class="line">    listen 80;</span><br><span class="line">    server_name	&#123;&#123;$name&#125;&#125;.xxx.com;</span><br><span class="line">    root	html;</span><br><span class="line">    index	index.html index.htm;</span><br><span class="line">    </span><br><span class="line">    access_log	/var/log/nginx/&#123;&#123;$name&#125;&#125;_access.log	main;</span><br><span class="line">    </span><br><span class="line">    location / &#123;</span><br><span class="line">    proxy_pass http://&#123;&#123;$name&#125;&#125;;</span><br><span class="line">    proxy_redirect		off;</span><br><span class="line">    proxy_set_header    Host        	$host;</span><br><span class="line">    proxy_set_header    X-Real-IP   	$remote_addr;</span><br><span class="line">    proxy_set_header    X-Forwarded-For $proxy_add_x_forwarded_for;</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    error_page  500 502 503 504 /50x.html;</span><br><span class="line">    location = /50x.html &#123;</span><br><span class="line">    root	/usr/share/nginx/html;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line">&#123;&#123;end&#125;&#125;</span><br><span class="line">&#123;&#123;end&#125;&#125;</span><br></pre></td></tr></table></figure>
<p>nginx.sh:</p>
<figure class="highlight sh"><table><tr><td class="code"><pre><span class="line"><span class="meta">#!/bin/bash</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> nginx -t&gt;/dev/null; <span class="keyword">then</span></span><br><span class="line">    <span class="keyword">if</span> [[ -s /var/run/nginx.pid ]]; <span class="keyword">then</span></span><br><span class="line">        nginx -s reload</span><br><span class="line">        <span class="keyword">if</span> [[ $? != 0 ]]; <span class="keyword">then</span></span><br><span class="line">            rm -f /var/run/nginx.pid</span><br><span class="line">            nginx -c /etc/nginx/nginx.conf</span><br><span class="line">        <span class="keyword">fi</span></span><br><span class="line">    <span class="keyword">else</span></span><br><span class="line">        nginx -c /etc/nginx/nginx.conf</span><br><span class="line">    <span class="keyword">fi</span></span><br><span class="line"><span class="keyword">fi</span></span><br></pre></td></tr></table></figure>
<p>pma docker-compose.yml:</p>
<figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="attr">pma:</span></span><br><span class="line">    <span class="attr">image:</span> <span class="string">phpmyadmin/phpmyadmin:4.7.3-1</span></span><br><span class="line">    <span class="attr">environment:</span></span><br><span class="line">      <span class="attr">SERVICE_NAME:</span> <span class="string">pma01</span></span><br><span class="line">      <span class="attr">SERVICE_TAGS:</span> <span class="string">"http,phpmyadmin"</span></span><br><span class="line">    <span class="attr">ports:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="number">80</span></span><br></pre></td></tr></table></figure>
<hr>
<h3 id="How-to-test"><a href="#How-to-test" class="headerlink" title="How to test"></a>How to test</h3><ul>
<li>run pma</li>
</ul>
<figure class="highlight sh"><table><tr><td class="code"><pre><span class="line">docker-compose up -d</span><br><span class="line">docker-compose scale pma=3</span><br><span class="line">docker-compose scale pma=1</span><br></pre></td></tr></table></figure>
<ul>
<li>start nginx-consul</li>
</ul>
<figure class="highlight sh"><table><tr><td class="code"><pre><span class="line">docker-compose up -d</span><br></pre></td></tr></table></figure>
]]></content>
      <categories>
        <category>Consul</category>
      </categories>
      <tags>
        <tag>Docker</tag>
        <tag>Consul</tag>
      </tags>
  </entry>
  <entry>
    <title>ELK in K8s</title>
    <url>/pages/deployment/k8s/k8s-elk/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\pages\assets\css\APlayer.min.css"><script src="\pages\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><hr>
<h2 id="示例配置"><a href="#示例配置" class="headerlink" title="示例配置"></a>示例配置</h2><a id="more"></a>
<ul>
<li>elk-rc.yaml</li>
</ul>
<figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="attr">apiVersion:</span> <span class="string">v1</span></span><br><span class="line"><span class="attr">kind:</span> <span class="string">ReplicationController</span></span><br><span class="line"><span class="attr">metadata:</span></span><br><span class="line">  <span class="attr">name:</span> <span class="string">elk-rc</span></span><br><span class="line">  <span class="attr">labels:</span></span><br><span class="line">    <span class="attr">k8s-app:</span> <span class="string">elk</span></span><br><span class="line"><span class="attr">spec:</span></span><br><span class="line">  <span class="attr">selector:</span></span><br><span class="line">    <span class="attr">k8s-app:</span> <span class="string">elk</span></span><br><span class="line">  <span class="attr">template:</span></span><br><span class="line">    <span class="attr">metadata:</span></span><br><span class="line">      <span class="attr">labels:</span></span><br><span class="line">        <span class="attr">k8s-app:</span> <span class="string">elk</span></span><br><span class="line">    <span class="attr">spec:</span></span><br><span class="line">      <span class="attr">containers:</span></span><br><span class="line">        <span class="bullet">-</span> <span class="attr">image:</span> <span class="string">docker.elastic.co/elasticsearch/elasticsearch:6.6.0</span></span><br><span class="line">          <span class="attr">name:</span> <span class="string">elasticsearch</span></span><br><span class="line">          <span class="attr">ports:</span></span><br><span class="line">            <span class="bullet">-</span> <span class="attr">containerPort:</span> <span class="number">9200</span></span><br><span class="line">          <span class="attr">volumeMounts:</span></span><br><span class="line">            <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">es-storage</span></span><br><span class="line">              <span class="attr">mountPath:</span> <span class="string">/usr/share/elasticsearch/data</span></span><br><span class="line">              <span class="attr">subPath:</span> <span class="string">elasticsearch/data</span></span><br><span class="line">        <span class="bullet">-</span> <span class="attr">image:</span> <span class="string">docker.elastic.co/logstash/logstash:6.6.0</span></span><br><span class="line">          <span class="attr">name:</span> <span class="string">logstash</span></span><br><span class="line">          <span class="attr">ports:</span></span><br><span class="line">            <span class="bullet">-</span> <span class="attr">containerPort:</span> <span class="number">9600</span></span><br><span class="line">            <span class="bullet">-</span> <span class="attr">containerPort:</span> <span class="number">5000</span></span><br><span class="line">        <span class="bullet">-</span> <span class="attr">image:</span> <span class="string">docker.elastic.co/kibana/kibana:6.6.0</span></span><br><span class="line">          <span class="attr">name:</span> <span class="string">kibana</span></span><br><span class="line">          <span class="attr">env:</span></span><br><span class="line">            <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">ELASTICSEARCH_URL</span></span><br><span class="line">              <span class="attr">value:</span> <span class="string">http://127.0.0.1:9200</span></span><br><span class="line">          <span class="attr">ports:</span></span><br><span class="line">            <span class="bullet">-</span> <span class="attr">containerPort:</span> <span class="number">5601</span></span><br><span class="line">      <span class="attr">volumes:</span></span><br><span class="line">        <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">es-storage</span></span><br><span class="line">          <span class="attr">persistentVolumeClaim:</span></span><br><span class="line">            <span class="attr">claimName:</span> <span class="string">pvc001</span></span><br></pre></td></tr></table></figure>
<ul>
<li>elk-svc-kibana.yaml</li>
</ul>
<figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="attr">apiVersion:</span> <span class="string">v1</span></span><br><span class="line"><span class="attr">kind:</span> <span class="string">Service</span></span><br><span class="line"><span class="attr">metadata:</span></span><br><span class="line">  <span class="attr">name:</span> <span class="string">kibana</span></span><br><span class="line">  <span class="attr">labels:</span></span><br><span class="line">    <span class="attr">k8s-app:</span> <span class="string">elk</span></span><br><span class="line"><span class="attr">spec:</span></span><br><span class="line">  <span class="attr">type:</span> <span class="string">LoadBalancer</span></span><br><span class="line">  <span class="attr">selector:</span></span><br><span class="line">    <span class="attr">k8s-app:</span> <span class="string">elk</span></span><br><span class="line">  <span class="attr">ports:</span></span><br><span class="line">    <span class="bullet">-</span> <span class="attr">port:</span> <span class="number">5601</span></span><br><span class="line">      <span class="attr">name:</span> <span class="string">kibana</span></span><br></pre></td></tr></table></figure>
<ul>
<li>elk-svc-logstash.yaml</li>
</ul>
<figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="attr">apiVersion:</span> <span class="string">v1</span></span><br><span class="line"><span class="attr">kind:</span> <span class="string">Service</span></span><br><span class="line"><span class="attr">metadata:</span></span><br><span class="line">  <span class="attr">name:</span> <span class="string">logstash</span></span><br><span class="line">  <span class="attr">labels:</span></span><br><span class="line">    <span class="attr">k8s-app:</span> <span class="string">elk</span></span><br><span class="line"><span class="attr">spec:</span></span><br><span class="line">  <span class="attr">selector:</span></span><br><span class="line">    <span class="attr">k8s-app:</span> <span class="string">elk</span></span><br><span class="line">  <span class="attr">ports:</span></span><br><span class="line">    <span class="bullet">-</span> <span class="attr">port:</span> <span class="number">8600</span></span><br><span class="line">      <span class="attr">name:</span> <span class="string">logstash</span></span><br></pre></td></tr></table></figure>
<ul>
<li>pv.yaml</li>
</ul>
<figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="meta">---</span></span><br><span class="line"><span class="attr">apiVersion:</span> <span class="string">v1</span></span><br><span class="line"><span class="attr">kind:</span> <span class="string">PersistentVolume</span></span><br><span class="line"><span class="attr">metadata:</span></span><br><span class="line">  <span class="attr">name:</span> <span class="string">pv001</span></span><br><span class="line"><span class="attr">spec:</span></span><br><span class="line">  <span class="attr">capacity:</span></span><br><span class="line">    <span class="attr">storage:</span> <span class="string">20Gi</span></span><br><span class="line">  <span class="attr">accessModes:</span></span><br><span class="line">    <span class="bullet">-</span> <span class="string">ReadWriteMany</span></span><br><span class="line">  <span class="attr">persistentVolumeReclaimPolicy:</span> <span class="string">Retain</span></span><br><span class="line">  <span class="attr">storageClassName:</span> <span class="string">nfs</span></span><br><span class="line">  <span class="attr">nfs:</span></span><br><span class="line">    <span class="attr">path:</span> <span class="string">"/path/to/nfs"</span></span><br><span class="line">    <span class="attr">server:</span> <span class="string">x.xx.xxx.xxx</span></span><br><span class="line">    </span><br><span class="line"><span class="meta">---</span></span><br><span class="line"><span class="attr">apiVersion:</span> <span class="string">v1</span></span><br><span class="line"><span class="attr">kind:</span> <span class="string">PersistentVolumeClaim</span></span><br><span class="line"><span class="attr">metadata:</span></span><br><span class="line">  <span class="attr">name:</span> <span class="string">pvc001</span></span><br><span class="line"><span class="attr">spec:</span></span><br><span class="line">  <span class="attr">accessModes:</span></span><br><span class="line">    <span class="bullet">-</span> <span class="string">ReadWriteMany</span></span><br><span class="line">  <span class="attr">resources:</span></span><br><span class="line">    <span class="attr">requests:</span></span><br><span class="line">      <span class="attr">storage:</span> <span class="string">20Gi</span></span><br><span class="line">  <span class="attr">storageClassName:</span> <span class="string">nfs</span></span><br></pre></td></tr></table></figure>
<p>创建NFS持久卷：</p>
<figure class="highlight sh"><table><tr><td class="code"><pre><span class="line">kubectl create -f pv.yaml</span><br></pre></td></tr></table></figure>
<p>部署ELK：</p>
<figure class="highlight sh"><table><tr><td class="code"><pre><span class="line"></span><br><span class="line">kubectl create -f elk-rc.yaml</span><br><span class="line">kubectl create -f elk-svc-logstash.yaml</span><br><span class="line">kubectl create -f elk-svc-kibana.yaml</span><br><span class="line">kubectl get pods</span><br><span class="line">kubectl get svc</span><br></pre></td></tr></table></figure>
]]></content>
      <categories>
        <category>K8s</category>
      </categories>
      <tags>
        <tag>ELK</tag>
        <tag>K8s</tag>
      </tags>
  </entry>
  <entry>
    <title>K8s部署prometheus</title>
    <url>/pages/deployment/k8s/k8s-prometheus/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\pages\assets\css\APlayer.min.css"><script src="\pages\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><hr>
<h2 id="示例配置"><a href="#示例配置" class="headerlink" title="示例配置"></a>示例配置</h2><a id="more"></a>
<figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="attr">apiVersion:</span> <span class="string">v1</span></span><br><span class="line"><span class="attr">kind:</span> <span class="string">ConfigMap</span></span><br><span class="line"><span class="attr">metadata:</span></span><br><span class="line">  <span class="attr">name:</span> <span class="string">prometheus-config</span></span><br><span class="line">  <span class="attr">namespace:</span> <span class="string">kube-system</span></span><br><span class="line"><span class="attr">data:</span></span><br><span class="line">  <span class="attr">prometheus.yml:</span> <span class="string">|</span></span><br><span class="line">    <span class="attr">global:</span></span><br><span class="line">      <span class="attr">scrape_interval:</span>     <span class="string">15s</span></span><br><span class="line">      <span class="attr">evaluation_interval:</span> <span class="string">15s</span></span><br><span class="line">    <span class="attr">scrape_configs:</span></span><br><span class="line"></span><br><span class="line">    <span class="bullet">-</span> <span class="attr">job_name:</span> <span class="string">'kubernetes-apiservers'</span></span><br><span class="line">      <span class="attr">kubernetes_sd_configs:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="attr">role:</span> <span class="string">endpoints</span></span><br><span class="line">      <span class="attr">scheme:</span> <span class="string">https</span></span><br><span class="line">      <span class="attr">tls_config:</span></span><br><span class="line">        <span class="attr">ca_file:</span> <span class="string">/var/run/secrets/kubernetes.io/serviceaccount/ca.crt</span></span><br><span class="line">      <span class="attr">bearer_token_file:</span> <span class="string">/var/run/secrets/kubernetes.io/serviceaccount/token</span></span><br><span class="line">      <span class="attr">relabel_configs:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="attr">source_labels:</span> <span class="string">[__meta_kubernetes_namespace,</span> <span class="string">__meta_kubernetes_service_name,</span> <span class="string">__meta_kubernetes_endpoint_port_name]</span></span><br><span class="line">        <span class="attr">action:</span> <span class="string">keep</span></span><br><span class="line">        <span class="attr">regex:</span> <span class="string">default;kubernetes;https</span></span><br><span class="line"></span><br><span class="line">    <span class="bullet">-</span> <span class="attr">job_name:</span> <span class="string">'kubernetes-nodes'</span></span><br><span class="line">      <span class="attr">kubernetes_sd_configs:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="attr">role:</span> <span class="string">node</span></span><br><span class="line">      <span class="attr">scheme:</span> <span class="string">https</span></span><br><span class="line">      <span class="attr">tls_config:</span></span><br><span class="line">        <span class="attr">ca_file:</span> <span class="string">/var/run/secrets/kubernetes.io/serviceaccount/ca.crt</span></span><br><span class="line">      <span class="attr">bearer_token_file:</span> <span class="string">/var/run/secrets/kubernetes.io/serviceaccount/token</span></span><br><span class="line">      <span class="attr">relabel_configs:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="attr">action:</span> <span class="string">labelmap</span></span><br><span class="line">        <span class="attr">regex:</span> <span class="string">__meta_kubernetes_node_label_(.+)</span></span><br><span class="line">      <span class="bullet">-</span> <span class="attr">target_label:</span> <span class="string">__address__</span></span><br><span class="line">        <span class="attr">replacement:</span> <span class="string">kubernetes.default.svc:443</span></span><br><span class="line">      <span class="bullet">-</span> <span class="attr">source_labels:</span> <span class="string">[__meta_kubernetes_node_name]</span></span><br><span class="line">        <span class="attr">regex:</span> <span class="string">(.+)</span></span><br><span class="line">        <span class="attr">target_label:</span> <span class="string">__metrics_path__</span></span><br><span class="line">        <span class="attr">replacement:</span> <span class="string">/api/v1/nodes/$&#123;1&#125;/proxy/metrics</span></span><br><span class="line"></span><br><span class="line">    <span class="bullet">-</span> <span class="attr">job_name:</span> <span class="string">'kubernetes-cadvisor'</span></span><br><span class="line">      <span class="attr">kubernetes_sd_configs:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="attr">role:</span> <span class="string">node</span></span><br><span class="line">      <span class="attr">scheme:</span> <span class="string">https</span></span><br><span class="line">      <span class="attr">tls_config:</span></span><br><span class="line">        <span class="attr">ca_file:</span> <span class="string">/var/run/secrets/kubernetes.io/serviceaccount/ca.crt</span></span><br><span class="line">      <span class="attr">bearer_token_file:</span> <span class="string">/var/run/secrets/kubernetes.io/serviceaccount/token</span></span><br><span class="line">      <span class="attr">relabel_configs:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="attr">action:</span> <span class="string">labelmap</span></span><br><span class="line">        <span class="attr">regex:</span> <span class="string">__meta_kubernetes_node_label_(.+)</span></span><br><span class="line">      <span class="bullet">-</span> <span class="attr">target_label:</span> <span class="string">__address__</span></span><br><span class="line">        <span class="attr">replacement:</span> <span class="string">kubernetes.default.svc:443</span></span><br><span class="line">      <span class="bullet">-</span> <span class="attr">source_labels:</span> <span class="string">[__meta_kubernetes_node_name]</span></span><br><span class="line">        <span class="attr">regex:</span> <span class="string">(.+)</span></span><br><span class="line">        <span class="attr">target_label:</span> <span class="string">__metrics_path__</span></span><br><span class="line">        <span class="attr">replacement:</span> <span class="string">/api/v1/nodes/$&#123;1&#125;/proxy/metrics/cadvisor</span></span><br><span class="line"></span><br><span class="line">    <span class="bullet">-</span> <span class="attr">job_name:</span> <span class="string">'kubernetes-service-endpoints'</span></span><br><span class="line">      <span class="attr">kubernetes_sd_configs:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="attr">role:</span> <span class="string">endpoints</span></span><br><span class="line">      <span class="attr">relabel_configs:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="attr">source_labels:</span> <span class="string">[__meta_kubernetes_service_annotation_prometheus_io_scrape]</span></span><br><span class="line">        <span class="attr">action:</span> <span class="string">keep</span></span><br><span class="line">        <span class="attr">regex:</span> <span class="literal">true</span></span><br><span class="line">      <span class="bullet">-</span> <span class="attr">source_labels:</span> <span class="string">[__meta_kubernetes_service_annotation_prometheus_io_scheme]</span></span><br><span class="line">        <span class="attr">action:</span> <span class="string">replace</span></span><br><span class="line">        <span class="attr">target_label:</span> <span class="string">__scheme__</span></span><br><span class="line">        <span class="attr">regex:</span> <span class="string">(https?)</span></span><br><span class="line">      <span class="bullet">-</span> <span class="attr">source_labels:</span> <span class="string">[__meta_kubernetes_service_annotation_prometheus_io_path]</span></span><br><span class="line">        <span class="attr">action:</span> <span class="string">replace</span></span><br><span class="line">        <span class="attr">target_label:</span> <span class="string">__metrics_path__</span></span><br><span class="line">        <span class="attr">regex:</span> <span class="string">(.+)</span></span><br><span class="line">      <span class="bullet">-</span> <span class="attr">source_labels:</span> <span class="string">[__address__,</span> <span class="string">__meta_kubernetes_service_annotation_prometheus_io_port]</span></span><br><span class="line">        <span class="attr">action:</span> <span class="string">replace</span></span><br><span class="line">        <span class="attr">target_label:</span> <span class="string">__address__</span></span><br><span class="line">        <span class="attr">regex:</span> <span class="string">([^:]+)(?::\d+)?;(\d+)</span></span><br><span class="line">        <span class="attr">replacement:</span> <span class="string">$1:$2</span></span><br><span class="line">      <span class="bullet">-</span> <span class="attr">action:</span> <span class="string">labelmap</span></span><br><span class="line">        <span class="attr">regex:</span> <span class="string">__meta_kubernetes_service_label_(.+)</span></span><br><span class="line">      <span class="bullet">-</span> <span class="attr">source_labels:</span> <span class="string">[__meta_kubernetes_namespace]</span></span><br><span class="line">        <span class="attr">action:</span> <span class="string">replace</span></span><br><span class="line">        <span class="attr">target_label:</span> <span class="string">kubernetes_namespace</span></span><br><span class="line">      <span class="bullet">-</span> <span class="attr">source_labels:</span> <span class="string">[__meta_kubernetes_service_name]</span></span><br><span class="line">        <span class="attr">action:</span> <span class="string">replace</span></span><br><span class="line">        <span class="attr">target_label:</span> <span class="string">kubernetes_name</span></span><br><span class="line"></span><br><span class="line">    <span class="bullet">-</span> <span class="attr">job_name:</span> <span class="string">'kubernetes-services'</span></span><br><span class="line">      <span class="attr">kubernetes_sd_configs:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="attr">role:</span> <span class="string">service</span></span><br><span class="line">      <span class="attr">metrics_path:</span> <span class="string">/probe</span></span><br><span class="line">      <span class="attr">params:</span></span><br><span class="line">        <span class="attr">module:</span> <span class="string">[http_2xx]</span></span><br><span class="line">      <span class="attr">relabel_configs:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="attr">source_labels:</span> <span class="string">[__meta_kubernetes_service_annotation_prometheus_io_probe]</span></span><br><span class="line">        <span class="attr">action:</span> <span class="string">keep</span></span><br><span class="line">        <span class="attr">regex:</span> <span class="literal">true</span></span><br><span class="line">      <span class="bullet">-</span> <span class="attr">source_labels:</span> <span class="string">[__address__]</span></span><br><span class="line">        <span class="attr">target_label:</span> <span class="string">__param_target</span></span><br><span class="line">      <span class="bullet">-</span> <span class="attr">target_label:</span> <span class="string">__address__</span></span><br><span class="line">        <span class="attr">replacement:</span> <span class="string">blackbox-exporter.example.com:9115</span></span><br><span class="line">      <span class="bullet">-</span> <span class="attr">source_labels:</span> <span class="string">[__param_target]</span></span><br><span class="line">        <span class="attr">target_label:</span> <span class="string">instance</span></span><br><span class="line">      <span class="bullet">-</span> <span class="attr">action:</span> <span class="string">labelmap</span></span><br><span class="line">        <span class="attr">regex:</span> <span class="string">__meta_kubernetes_service_label_(.+)</span></span><br><span class="line">      <span class="bullet">-</span> <span class="attr">source_labels:</span> <span class="string">[__meta_kubernetes_namespace]</span></span><br><span class="line">        <span class="attr">target_label:</span> <span class="string">kubernetes_namespace</span></span><br><span class="line">      <span class="bullet">-</span> <span class="attr">source_labels:</span> <span class="string">[__meta_kubernetes_service_name]</span></span><br><span class="line">        <span class="attr">target_label:</span> <span class="string">kubernetes_name</span></span><br><span class="line"></span><br><span class="line">    <span class="bullet">-</span> <span class="attr">job_name:</span> <span class="string">'kubernetes-ingresses'</span></span><br><span class="line">      <span class="attr">kubernetes_sd_configs:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="attr">role:</span> <span class="string">ingress</span></span><br><span class="line">      <span class="attr">relabel_configs:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="attr">source_labels:</span> <span class="string">[__meta_kubernetes_ingress_annotation_prometheus_io_probe]</span></span><br><span class="line">        <span class="attr">action:</span> <span class="string">keep</span></span><br><span class="line">        <span class="attr">regex:</span> <span class="literal">true</span></span><br><span class="line">      <span class="bullet">-</span> <span class="attr">source_labels:</span> <span class="string">[__meta_kubernetes_ingress_scheme,__address__,__meta_kubernetes_ingress_path]</span></span><br><span class="line">        <span class="attr">regex:</span> <span class="string">(.+);(.+);(.+)</span></span><br><span class="line">        <span class="attr">replacement:</span> <span class="string">$&#123;1&#125;://$&#123;2&#125;$&#123;3&#125;</span></span><br><span class="line">        <span class="attr">target_label:</span> <span class="string">__param_target</span></span><br><span class="line">      <span class="bullet">-</span> <span class="attr">target_label:</span> <span class="string">__address__</span></span><br><span class="line">        <span class="attr">replacement:</span> <span class="string">blackbox-exporter.example.com:9115</span></span><br><span class="line">      <span class="bullet">-</span> <span class="attr">source_labels:</span> <span class="string">[__param_target]</span></span><br><span class="line">        <span class="attr">target_label:</span> <span class="string">instance</span></span><br><span class="line">      <span class="bullet">-</span> <span class="attr">action:</span> <span class="string">labelmap</span></span><br><span class="line">        <span class="attr">regex:</span> <span class="string">__meta_kubernetes_ingress_label_(.+)</span></span><br><span class="line">      <span class="bullet">-</span> <span class="attr">source_labels:</span> <span class="string">[__meta_kubernetes_namespace]</span></span><br><span class="line">        <span class="attr">target_label:</span> <span class="string">kubernetes_namespace</span></span><br><span class="line">      <span class="bullet">-</span> <span class="attr">source_labels:</span> <span class="string">[__meta_kubernetes_ingress_name]</span></span><br><span class="line">        <span class="attr">target_label:</span> <span class="string">kubernetes_name</span></span><br><span class="line"></span><br><span class="line">    <span class="bullet">-</span> <span class="attr">job_name:</span> <span class="string">'kubernetes-pods'</span></span><br><span class="line">      <span class="attr">kubernetes_sd_configs:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="attr">role:</span> <span class="string">pod</span></span><br><span class="line">      <span class="attr">relabel_configs:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="attr">source_labels:</span> <span class="string">[__meta_kubernetes_pod_annotation_prometheus_io_scrape]</span></span><br><span class="line">        <span class="attr">action:</span> <span class="string">keep</span></span><br><span class="line">        <span class="attr">regex:</span> <span class="literal">true</span></span><br><span class="line">      <span class="bullet">-</span> <span class="attr">source_labels:</span> <span class="string">[__meta_kubernetes_pod_annotation_prometheus_io_path]</span></span><br><span class="line">        <span class="attr">action:</span> <span class="string">replace</span></span><br><span class="line">        <span class="attr">target_label:</span> <span class="string">__metrics_path__</span></span><br><span class="line">        <span class="attr">regex:</span> <span class="string">(.+)</span></span><br><span class="line">      <span class="bullet">-</span> <span class="attr">source_labels:</span> <span class="string">[__address__,</span> <span class="string">__meta_kubernetes_pod_annotation_prometheus_io_port]</span></span><br><span class="line">        <span class="attr">action:</span> <span class="string">replace</span></span><br><span class="line">        <span class="attr">regex:</span> <span class="string">([^:]+)(?::\d+)?;(\d+)</span></span><br><span class="line">        <span class="attr">replacement:</span> <span class="string">$1:$2</span></span><br><span class="line">        <span class="attr">target_label:</span> <span class="string">__address__</span></span><br><span class="line">      <span class="bullet">-</span> <span class="attr">action:</span> <span class="string">labelmap</span></span><br><span class="line">        <span class="attr">regex:</span> <span class="string">__meta_kubernetes_pod_label_(.+)</span></span><br><span class="line">      <span class="bullet">-</span> <span class="attr">source_labels:</span> <span class="string">[__meta_kubernetes_namespace]</span></span><br><span class="line">        <span class="attr">action:</span> <span class="string">replace</span></span><br><span class="line">        <span class="attr">target_label:</span> <span class="string">kubernetes_namespace</span></span><br><span class="line">      <span class="bullet">-</span> <span class="attr">source_labels:</span> <span class="string">[__meta_kubernetes_pod_name]</span></span><br><span class="line">        <span class="attr">action:</span> <span class="string">replace</span></span><br><span class="line">        <span class="attr">target_label:</span> <span class="string">kubernetes_pod_name</span></span><br><span class="line"></span><br><span class="line"><span class="meta">---</span></span><br><span class="line"><span class="attr">apiVersion:</span> <span class="string">apps/v1beta2</span></span><br><span class="line"><span class="attr">kind:</span> <span class="string">Deployment</span></span><br><span class="line"><span class="attr">metadata:</span></span><br><span class="line">  <span class="attr">labels:</span></span><br><span class="line">    <span class="attr">name:</span> <span class="string">prometheus-deployment</span></span><br><span class="line">  <span class="attr">name:</span> <span class="string">prometheus</span></span><br><span class="line">  <span class="attr">namespace:</span> <span class="string">kube-system</span></span><br><span class="line"><span class="attr">spec:</span></span><br><span class="line">  <span class="attr">replicas:</span> <span class="number">1</span></span><br><span class="line">  <span class="attr">selector:</span></span><br><span class="line">    <span class="attr">matchLabels:</span></span><br><span class="line">      <span class="attr">app:</span> <span class="string">prometheus</span></span><br><span class="line">  <span class="attr">template:</span></span><br><span class="line">    <span class="attr">metadata:</span></span><br><span class="line">      <span class="attr">labels:</span></span><br><span class="line">        <span class="attr">app:</span> <span class="string">prometheus</span></span><br><span class="line">    <span class="attr">spec:</span></span><br><span class="line">      <span class="attr">containers:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="attr">image:</span> <span class="string">prom/prometheus:v2.0.0</span></span><br><span class="line">        <span class="attr">name:</span> <span class="string">prometheus</span></span><br><span class="line">        <span class="attr">command:</span></span><br><span class="line">        <span class="bullet">-</span> <span class="string">"/bin/prometheus"</span></span><br><span class="line">        <span class="attr">args:</span></span><br><span class="line">        <span class="bullet">-</span> <span class="string">"--config.file=/etc/prometheus/prometheus.yml"</span></span><br><span class="line">        <span class="bullet">-</span> <span class="string">"--storage.tsdb.path=/prometheus"</span></span><br><span class="line">        <span class="bullet">-</span> <span class="string">"--storage.tsdb.retention=24h"</span></span><br><span class="line">        <span class="attr">ports:</span></span><br><span class="line">        <span class="bullet">-</span> <span class="attr">containerPort:</span> <span class="number">9090</span></span><br><span class="line">          <span class="attr">protocol:</span> <span class="string">TCP</span></span><br><span class="line">        <span class="attr">volumeMounts:</span></span><br><span class="line">        <span class="bullet">-</span> <span class="attr">mountPath:</span> <span class="string">"/prometheus"</span></span><br><span class="line">          <span class="attr">name:</span> <span class="string">data</span></span><br><span class="line">        <span class="bullet">-</span> <span class="attr">mountPath:</span> <span class="string">"/etc/prometheus"</span></span><br><span class="line">          <span class="attr">name:</span> <span class="string">config-volume</span></span><br><span class="line">        <span class="attr">resources:</span></span><br><span class="line">          <span class="attr">requests:</span></span><br><span class="line">            <span class="attr">cpu:</span> <span class="string">100m</span></span><br><span class="line">            <span class="attr">memory:</span> <span class="string">100Mi</span></span><br><span class="line">          <span class="attr">limits:</span></span><br><span class="line">            <span class="attr">cpu:</span> <span class="string">500m</span></span><br><span class="line">            <span class="attr">memory:</span> <span class="string">2500Mi</span></span><br><span class="line">      <span class="attr">serviceAccountName:</span> <span class="string">prometheus</span>    </span><br><span class="line">      <span class="attr">volumes:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">data</span></span><br><span class="line">        <span class="attr">emptyDir:</span> <span class="string">&#123;&#125;</span></span><br><span class="line">      <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">config-volume</span></span><br><span class="line">        <span class="attr">configMap:</span></span><br><span class="line">          <span class="attr">name:</span> <span class="string">prometheus-config</span></span><br><span class="line"></span><br><span class="line"><span class="meta">---</span></span><br><span class="line"><span class="attr">kind:</span> <span class="string">Service</span></span><br><span class="line"><span class="attr">apiVersion:</span> <span class="string">v1</span></span><br><span class="line"><span class="attr">metadata:</span></span><br><span class="line">  <span class="attr">labels:</span></span><br><span class="line">    <span class="attr">app:</span> <span class="string">prometheus</span></span><br><span class="line">  <span class="attr">name:</span> <span class="string">prometheus</span></span><br><span class="line">  <span class="attr">namespace:</span> <span class="string">kube-system</span></span><br><span class="line"><span class="attr">spec:</span></span><br><span class="line">  <span class="attr">type:</span> <span class="string">NodePort</span></span><br><span class="line">  <span class="attr">ports:</span></span><br><span class="line">  <span class="bullet">-</span> <span class="attr">port:</span> <span class="number">9090</span></span><br><span class="line">    <span class="attr">targetPort:</span> <span class="number">9090</span></span><br><span class="line">    <span class="attr">nodePort:</span> <span class="number">30003</span></span><br><span class="line">  <span class="attr">selector:</span></span><br><span class="line">    <span class="attr">app:</span> <span class="string">prometheus</span></span><br><span class="line"><span class="attr">apiVersion:</span> <span class="string">rbac.authorization.k8s.io/v1</span></span><br><span class="line"><span class="attr">kind:</span> <span class="string">ClusterRole</span></span><br><span class="line"><span class="attr">metadata:</span></span><br><span class="line">  <span class="attr">name:</span> <span class="string">prometheus</span></span><br><span class="line"><span class="attr">rules:</span></span><br><span class="line"><span class="bullet">-</span> <span class="attr">apiGroups:</span> <span class="string">[""]</span></span><br><span class="line">  <span class="attr">resources:</span></span><br><span class="line">  <span class="bullet">-</span> <span class="string">nodes</span></span><br><span class="line">  <span class="bullet">-</span> <span class="string">nodes/proxy</span></span><br><span class="line">  <span class="bullet">-</span> <span class="string">services</span></span><br><span class="line">  <span class="bullet">-</span> <span class="string">endpoints</span></span><br><span class="line">  <span class="bullet">-</span> <span class="string">pods</span></span><br><span class="line">  <span class="attr">verbs:</span> <span class="string">["get",</span> <span class="string">"list"</span><span class="string">,</span> <span class="string">"watch"</span><span class="string">]</span></span><br><span class="line"><span class="bullet">-</span> <span class="attr">apiGroups:</span></span><br><span class="line">  <span class="bullet">-</span> <span class="string">extensions</span></span><br><span class="line">  <span class="attr">resources:</span></span><br><span class="line">  <span class="bullet">-</span> <span class="string">ingresses</span></span><br><span class="line">  <span class="attr">verbs:</span> <span class="string">["get",</span> <span class="string">"list"</span><span class="string">,</span> <span class="string">"watch"</span><span class="string">]</span></span><br><span class="line"><span class="bullet">-</span> <span class="attr">nonResourceURLs:</span> <span class="string">["/metrics"]</span></span><br><span class="line">  <span class="attr">verbs:</span> <span class="string">["get"]</span></span><br><span class="line"></span><br><span class="line"><span class="meta">---</span></span><br><span class="line"><span class="attr">apiVersion:</span> <span class="string">v1</span></span><br><span class="line"><span class="attr">kind:</span> <span class="string">ServiceAccount</span></span><br><span class="line"><span class="attr">metadata:</span></span><br><span class="line">  <span class="attr">name:</span> <span class="string">prometheus</span></span><br><span class="line">  <span class="attr">namespace:</span> <span class="string">kube-system</span></span><br><span class="line"></span><br><span class="line"><span class="meta">---</span></span><br><span class="line"><span class="attr">apiVersion:</span> <span class="string">rbac.authorization.k8s.io/v1</span></span><br><span class="line"><span class="attr">kind:</span> <span class="string">ClusterRoleBinding</span></span><br><span class="line"><span class="attr">metadata:</span></span><br><span class="line">  <span class="attr">name:</span> <span class="string">prometheus</span></span><br><span class="line"><span class="attr">roleRef:</span></span><br><span class="line">  <span class="attr">apiGroup:</span> <span class="string">rbac.authorization.k8s.io</span></span><br><span class="line">  <span class="attr">kind:</span> <span class="string">ClusterRole</span></span><br><span class="line">  <span class="attr">name:</span> <span class="string">prometheus</span></span><br><span class="line"><span class="attr">subjects:</span></span><br><span class="line"><span class="bullet">-</span> <span class="attr">kind:</span> <span class="string">ServiceAccount</span></span><br><span class="line">  <span class="attr">name:</span> <span class="string">prometheus</span></span><br><span class="line">  <span class="attr">namespace:</span> <span class="string">kube-system</span></span><br></pre></td></tr></table></figure>
<h2 id="grafana"><a href="#grafana" class="headerlink" title="grafana"></a>grafana</h2><figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="attr">apiVersion:</span> <span class="string">extensions/v1beta1</span></span><br><span class="line"><span class="attr">kind:</span> <span class="string">Deployment</span></span><br><span class="line"><span class="attr">metadata:</span></span><br><span class="line">  <span class="attr">name:</span> <span class="string">grafana-core</span></span><br><span class="line">  <span class="attr">namespace:</span> <span class="string">kube-system</span></span><br><span class="line">  <span class="attr">labels:</span></span><br><span class="line">    <span class="attr">app:</span> <span class="string">grafana</span></span><br><span class="line">    <span class="attr">component:</span> <span class="string">core</span></span><br><span class="line"><span class="attr">spec:</span></span><br><span class="line">  <span class="attr">replicas:</span> <span class="number">1</span></span><br><span class="line">  <span class="attr">template:</span></span><br><span class="line">    <span class="attr">metadata:</span></span><br><span class="line">      <span class="attr">labels:</span></span><br><span class="line">        <span class="attr">app:</span> <span class="string">grafana</span></span><br><span class="line">        <span class="attr">component:</span> <span class="string">core</span></span><br><span class="line">    <span class="attr">spec:</span></span><br><span class="line">      <span class="attr">containers:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="attr">image:</span> <span class="string">grafana/grafana:4.2.0</span></span><br><span class="line">        <span class="attr">name:</span> <span class="string">grafana-core</span></span><br><span class="line">        <span class="attr">imagePullPolicy:</span> <span class="string">IfNotPresent</span></span><br><span class="line">        <span class="comment"># env:</span></span><br><span class="line">        <span class="attr">resources:</span></span><br><span class="line">          <span class="comment"># keep request = limit to keep this container in guaranteed class</span></span><br><span class="line">          <span class="attr">limits:</span></span><br><span class="line">            <span class="attr">cpu:</span> <span class="string">100m</span></span><br><span class="line">            <span class="attr">memory:</span> <span class="string">100Mi</span></span><br><span class="line">          <span class="attr">requests:</span></span><br><span class="line">            <span class="attr">cpu:</span> <span class="string">100m</span></span><br><span class="line">            <span class="attr">memory:</span> <span class="string">100Mi</span></span><br><span class="line">        <span class="attr">env:</span></span><br><span class="line">          <span class="comment"># The following env variables set up basic auth twith the default admin user and admin password.</span></span><br><span class="line">          <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">GF_AUTH_BASIC_ENABLED</span></span><br><span class="line">            <span class="attr">value:</span> <span class="string">"true"</span></span><br><span class="line">          <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">GF_AUTH_ANONYMOUS_ENABLED</span></span><br><span class="line">            <span class="attr">value:</span> <span class="string">"false"</span></span><br><span class="line">          <span class="comment"># - name: GF_AUTH_ANONYMOUS_ORG_ROLE</span></span><br><span class="line">          <span class="comment">#   value: Admin</span></span><br><span class="line">          <span class="comment"># does not really work, because of template variables in exported dashboards:</span></span><br><span class="line">          <span class="comment"># - name: GF_DASHBOARDS_JSON_ENABLED</span></span><br><span class="line">          <span class="comment">#   value: "true"</span></span><br><span class="line">        <span class="attr">readinessProbe:</span></span><br><span class="line">          <span class="attr">httpGet:</span></span><br><span class="line">            <span class="attr">path:</span> <span class="string">/login</span></span><br><span class="line">            <span class="attr">port:</span> <span class="number">3000</span></span><br><span class="line">          <span class="comment"># initialDelaySeconds: 30</span></span><br><span class="line">          <span class="comment"># timeoutSeconds: 1</span></span><br><span class="line">        <span class="attr">volumeMounts:</span></span><br><span class="line">        <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">grafana-persistent-storage</span></span><br><span class="line">          <span class="attr">mountPath:</span> <span class="string">/var</span></span><br><span class="line">      <span class="attr">volumes:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">grafana-persistent-storage</span></span><br><span class="line">        <span class="attr">emptyDir:</span> <span class="string">&#123;&#125;</span></span><br><span class="line"></span><br><span class="line"><span class="meta">---</span></span><br><span class="line"><span class="attr">apiVersion:</span> <span class="string">extensions/v1beta1</span></span><br><span class="line"><span class="attr">kind:</span> <span class="string">Ingress</span></span><br><span class="line"><span class="attr">metadata:</span></span><br><span class="line">   <span class="attr">name:</span> <span class="string">grafana</span></span><br><span class="line">   <span class="attr">namespace:</span> <span class="string">kube-system</span></span><br><span class="line"><span class="attr">spec:</span></span><br><span class="line">   <span class="attr">rules:</span></span><br><span class="line">   <span class="bullet">-</span> <span class="attr">host:</span> <span class="string">k8s.grafana</span></span><br><span class="line">     <span class="attr">http:</span></span><br><span class="line">       <span class="attr">paths:</span></span><br><span class="line">       <span class="bullet">-</span> <span class="attr">path:</span> <span class="string">/</span></span><br><span class="line">         <span class="attr">backend:</span></span><br><span class="line">          <span class="attr">serviceName:</span> <span class="string">grafana</span></span><br><span class="line">          <span class="attr">servicePort:</span> <span class="number">3000</span></span><br><span class="line"></span><br><span class="line"><span class="meta">---</span></span><br><span class="line"><span class="attr">apiVersion:</span> <span class="string">v1</span></span><br><span class="line"><span class="attr">kind:</span> <span class="string">Service</span></span><br><span class="line"><span class="attr">metadata:</span></span><br><span class="line">  <span class="attr">name:</span> <span class="string">grafana</span></span><br><span class="line">  <span class="attr">namespace:</span> <span class="string">kube-system</span></span><br><span class="line">  <span class="attr">labels:</span></span><br><span class="line">    <span class="attr">app:</span> <span class="string">grafana</span></span><br><span class="line">    <span class="attr">component:</span> <span class="string">core</span></span><br><span class="line"><span class="attr">spec:</span></span><br><span class="line">  <span class="attr">type:</span> <span class="string">NodePort</span></span><br><span class="line">  <span class="attr">ports:</span></span><br><span class="line">    <span class="bullet">-</span> <span class="attr">port:</span> <span class="number">3000</span></span><br><span class="line">  <span class="attr">selector:</span></span><br><span class="line">    <span class="attr">app:</span> <span class="string">grafana</span></span><br><span class="line">    <span class="attr">component:</span> <span class="string">core</span></span><br></pre></td></tr></table></figure>
]]></content>
      <categories>
        <category>K8s</category>
      </categories>
      <tags>
        <tag>K8s</tag>
        <tag>Prometheus</tag>
      </tags>
  </entry>
  <entry>
    <title>RKE安装K8s HA集群过程记录</title>
    <url>/pages/deployment/k8s/rke-k8s-ha/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\pages\assets\css\APlayer.min.css"><script src="\pages\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><hr>
<h3 id="准备工作"><a href="#准备工作" class="headerlink" title="准备工作"></a>准备工作</h3><p>ansible主机清单：</p>
<figure class="highlight"><table><tr><td class="code"><pre><span class="line"><span class="section">[rke]</span></span><br><span class="line">rke ansible_host=192.168.100.228</span><br><span class="line"></span><br><span class="line"><span class="section">[k8s]</span></span><br><span class="line">master01 ansible_host=192.168.101.72</span><br><span class="line">master02 ansible_host=192.168.101.75</span><br><span class="line">master03 ansible_host=192.168.100.229</span><br></pre></td></tr></table></figure>
<a id="more"></a>
<p>安装docker：</p>
<figure class="highlight sh"><table><tr><td class="code"><pre><span class="line">ansible-playbook roles/docker.yml</span><br></pre></td></tr></table></figure>
<p>使用ansible之前，需要分发密钥至各节点root用户。</p>
<p>创建rancher用户，并分发密钥：</p>
<figure class="highlight sh"><table><tr><td class="code"><pre><span class="line">ansible-playbook roles/key.yml</span><br></pre></td></tr></table></figure>
<p>安装rke、kubectl、helm工具：</p>
<figure class="highlight sh"><table><tr><td class="code"><pre><span class="line"><span class="comment"># https://www.cnrancher.com/download/rke/rke_linux-amd64</span></span><br><span class="line">wget https://www.cnrancher.com/download/rke/rke_linux-amd64</span><br><span class="line">chmod +x rke_linux-amd64</span><br><span class="line">mv rke_linux-amd64 /usr/bin/rke</span><br><span class="line"></span><br><span class="line"><span class="comment"># https://www.cnrancher.com/download/kubectl/kubectl_amd64-linux</span></span><br><span class="line">wget https://www.cnrancher.com/download/kubectl/kubectl_amd64-linux</span><br><span class="line">chmod +x kubectl_amd64-linux</span><br><span class="line">mv kubectl_amd64-linux /usr/bin/kubectl</span><br><span class="line"></span><br><span class="line"><span class="comment"># https://www.cnrancher.com/download/helm/helm-linux.tar.gz</span></span><br><span class="line">wget https://storage.googleapis.com/kubernetes-helm/helm-v2.12.0-linux-amd64.tar.gz</span><br><span class="line">tar -xf helm-v2.12.0-linux-amd64.tar.gz</span><br><span class="line">mv linux-amd64/helm /usr/bin/helm</span><br><span class="line">mv linux-amd64/tiller /usr/bin/tiller</span><br><span class="line">rm -rf linux-amd64</span><br></pre></td></tr></table></figure>
<h3 id="创建集群"><a href="#创建集群" class="headerlink" title="创建集群"></a>创建集群</h3><p>rancher-cluster.yml:</p>
<figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="attr">nodes:</span></span><br><span class="line">  <span class="bullet">-</span> <span class="attr">address:</span> <span class="number">192.168</span><span class="number">.101</span><span class="number">.72</span></span><br><span class="line">    <span class="attr">user:</span> <span class="string">rancher</span></span><br><span class="line">    <span class="attr">role:</span> <span class="string">[controlplane,worker,etcd]</span></span><br><span class="line">  <span class="bullet">-</span> <span class="attr">address:</span> <span class="number">192.168</span><span class="number">.101</span><span class="number">.75</span></span><br><span class="line">    <span class="attr">user:</span> <span class="string">rancher</span></span><br><span class="line">    <span class="attr">role:</span> <span class="string">[controlplane,worker,etcd]</span></span><br><span class="line">  <span class="bullet">-</span> <span class="attr">address:</span> <span class="number">192.168</span><span class="number">.100</span><span class="number">.229</span></span><br><span class="line">    <span class="attr">user:</span> <span class="string">rancher</span></span><br><span class="line">    <span class="attr">role:</span> <span class="string">[controlplane,etcd]</span></span><br><span class="line"></span><br><span class="line"><span class="attr">services:</span></span><br><span class="line">  <span class="attr">etcd:</span></span><br><span class="line">    <span class="attr">snapshot:</span> <span class="literal">true</span></span><br><span class="line">    <span class="attr">creation:</span> <span class="string">6h</span></span><br><span class="line">    <span class="attr">retention:</span> <span class="string">24h</span></span><br></pre></td></tr></table></figure>
<p>rke up:</p>
<figure class="highlight sh"><table><tr><td class="code"><pre><span class="line">rke up --config rancher-cluster.yml</span><br></pre></td></tr></table></figure>
<p>rke up后会生成kube_config_rancher-cluster.yml</p>
<p>设置kube_config环境变量（或者复制到~/.kube/config ）：</p>
<figure class="highlight sh"><table><tr><td class="code"><pre><span class="line"><span class="built_in">echo</span> <span class="string">"export KUBECONFIG=/home/rancher/kube_config_rancher-cluster.yml"</span> &gt;&gt; /etc/profile</span><br><span class="line"><span class="built_in">source</span> /etc/profile</span><br></pre></td></tr></table></figure>
<h3 id="安装tiller"><a href="#安装tiller" class="headerlink" title="安装tiller"></a>安装tiller</h3><figure class="highlight sh"><table><tr><td class="code"><pre><span class="line"><span class="comment"># Helm在集群上安装tiller服务以管理charts. 由于RKE默认启用RBAC, 因此我们需要使用kubectl来创建一个serviceaccount，clusterrolebinding才能让tiller具有部署到集群的权限</span></span><br><span class="line"></span><br><span class="line">kubectl -n kube-system create serviceaccount tiller</span><br><span class="line"></span><br><span class="line"><span class="comment"># 创建ClusterRoleBinding以授予tiller帐户对集群的访问权限</span></span><br><span class="line">kubectl create clusterrolebinding tiller --clusterrole cluster-admin --serviceaccount=kube-system:tiller</span><br><span class="line"></span><br><span class="line"><span class="comment"># 安装Helm Server(Tiller)</span></span><br><span class="line">helm init --service-account tiller --tiller-image registry.cn-hangzhou.aliyuncs.com/google_containers/tiller:v2.12.0 --stable-repo-url https://kubernetes.oss-cn-hangzhou.aliyuncs.com/charts</span><br></pre></td></tr></table></figure>
<h3 id="安装cert-manager"><a href="#安装cert-manager" class="headerlink" title="安装cert-manager"></a>安装cert-manager</h3><figure class="highlight sh"><table><tr><td class="code"><pre><span class="line">helm install stable/cert-manager \</span><br><span class="line">  --name cert-manager \</span><br><span class="line">  --namespace kube-system</span><br></pre></td></tr></table></figure>
<h3 id="安装rancher-web"><a href="#安装rancher-web" class="headerlink" title="安装rancher web"></a>安装rancher web</h3><figure class="highlight sh"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 使用helm repo add命令添加Rancher chart仓库地址</span></span><br><span class="line">helm repo add rancher-stable https://releases.rancher.com/server-charts/stable</span><br><span class="line"></span><br><span class="line">helm install rancher-stable/rancher \</span><br><span class="line">  --name rancher \</span><br><span class="line">  --namespace cattle-system \</span><br><span class="line">  --<span class="built_in">set</span> hostname=xxx.com</span><br><span class="line"></span><br><span class="line">helm install rancher-stable/rancher --name rancher --namespace cattle-system --<span class="built_in">set</span> hostname=xxx.com</span><br></pre></td></tr></table></figure>
<p>如果不是通过DNS解析域名，而是通过本地hosts解析，可以通过给cattle-cluster-agent Pod和cattle-node-agent添加主机别名，让其可以正常通信，前提是IP地址可以互通。</p>
<figure class="highlight sh"><table><tr><td class="code"><pre><span class="line">kubectl -n cattle-system patch deployments cattle-cluster-agent --patch <span class="string">'&#123;</span></span><br><span class="line"><span class="string">    "spec": &#123;</span></span><br><span class="line"><span class="string">        "template": &#123;</span></span><br><span class="line"><span class="string">            "spec": &#123;</span></span><br><span class="line"><span class="string">                "hostAliases": [</span></span><br><span class="line"><span class="string">                    &#123;</span></span><br><span class="line"><span class="string">                        "hostnames":</span></span><br><span class="line"><span class="string">                        [</span></span><br><span class="line"><span class="string">                            "xxx.com"</span></span><br><span class="line"><span class="string">                        ],</span></span><br><span class="line"><span class="string">                            "ip": "192.168.100.228"</span></span><br><span class="line"><span class="string">                    &#125;</span></span><br><span class="line"><span class="string">                ]</span></span><br><span class="line"><span class="string">            &#125;</span></span><br><span class="line"><span class="string">        &#125;</span></span><br><span class="line"><span class="string">    &#125;</span></span><br><span class="line"><span class="string">&#125;'</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 上面这条命令可能报错：Error from server (NotFound): deployments.extensions "cattle-cluster-agent" not found，因为cattle-cluster-agent还没有创建成功</span></span><br><span class="line"></span><br><span class="line">kubectl -n cattle-system patch daemonsets cattle-node-agent --patch <span class="string">'&#123;</span></span><br><span class="line"><span class="string">    "spec": &#123;</span></span><br><span class="line"><span class="string">        "template": &#123;</span></span><br><span class="line"><span class="string">            "spec": &#123;</span></span><br><span class="line"><span class="string">                "hostAliases": [</span></span><br><span class="line"><span class="string">                    &#123;</span></span><br><span class="line"><span class="string">                        "hostnames":</span></span><br><span class="line"><span class="string">                        [</span></span><br><span class="line"><span class="string">                            "xxx.com"</span></span><br><span class="line"><span class="string">                        ],</span></span><br><span class="line"><span class="string">                            "ip": "192.168.100.228"</span></span><br><span class="line"><span class="string">                    &#125;</span></span><br><span class="line"><span class="string">                ]</span></span><br><span class="line"><span class="string">            &#125;</span></span><br><span class="line"><span class="string">        &#125;</span></span><br><span class="line"><span class="string">    &#125;</span></span><br><span class="line"><span class="string">&#125;'</span></span><br></pre></td></tr></table></figure>
<h3 id="安装rancher-cli"><a href="#安装rancher-cli" class="headerlink" title="安装rancher cli"></a>安装rancher cli</h3><figure class="highlight sh"><table><tr><td class="code"><pre><span class="line">wget https://www.cnrancher.com/download/cli/rancher-linux-amd64.tar.gz</span><br><span class="line">mkdir rancher-linux-amd64.tmp.d <span class="comment"># 临时目录</span></span><br><span class="line">tar -xf rancher-linux-amd64.tar.gz -C rancher-linux-amd64.tmp.d</span><br><span class="line">find rancher-linux-amd64.tmp.d -name <span class="string">'rancher'</span> -<span class="built_in">type</span> f | xargs -I &#123;&#125; mv &#123;&#125; /usr/bin/;</span><br><span class="line">rm -rf rancher-linux-amd64.tmp.d</span><br></pre></td></tr></table></figure>
]]></content>
      <categories>
        <category>K8s</category>
      </categories>
      <tags>
        <tag>K8s</tag>
      </tags>
  </entry>
  <entry>
    <title>Gitlab CI/CD Practice —— Gitlab Runner in Docker/K8s</title>
    <url>/pages/gitlab-cicd-gitlab-runner/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\pages\assets\css\APlayer.min.css"><script src="\pages\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><hr>
<blockquote>
<p>GitLab Runner is the open source project that is used to run your jobs and send the results back to GitLab. It is used in conjunction with <a href="https://about.gitlab.com/product/continuous-integration/" target="_blank" rel="noopener">GitLab CI</a>, the open-source continuous integration service included with GitLab that coordinates the jobs</p>
</blockquote>
<a id="more"></a>
<h3 id="gitlab-runner-in-Docker"><a href="#gitlab-runner-in-Docker" class="headerlink" title="gitlab-runner in Docker"></a>gitlab-runner in Docker</h3><figure class="highlight sh"><table><tr><td class="code"><pre><span class="line">[root@zlz srv]<span class="comment"># docker exec -it gitlab-runner /bin/bash</span></span><br><span class="line"></span><br><span class="line">root@9e069893788a:/<span class="comment"># gitlab-runner register</span></span><br><span class="line">Runtime platform                                    arch=amd64 os=linux pid=33 revision=fa86510e version=11.9.2</span><br><span class="line">Running <span class="keyword">in</span> system-mode.</span><br><span class="line">Please enter the gitlab-ci coordinator URL (e.g. https://gitlab.com/):</span><br><span class="line">http://xxx.com/</span><br><span class="line">Please enter the gitlab-ci token <span class="keyword">for</span> this runner:</span><br><span class="line">peWrQo7zxksbVhsuTncq</span><br><span class="line">Please enter the gitlab-ci description <span class="keyword">for</span> this runner:</span><br><span class="line">[9e069893788a]: <span class="built_in">test</span> gitlab cid^H^H</span><br><span class="line">Please enter the gitlab-ci tags <span class="keyword">for</span> this runner (comma separated):</span><br><span class="line"><span class="built_in">test</span>,zlztest</span><br><span class="line">Registering runner... succeeded                     runner=peWrQo7z</span><br><span class="line">Please enter the executor: docker-ssh, parallels, virtualbox, kubernetes, docker, shell, ssh, docker+machine, docker-ssh+machine:</span><br><span class="line">docker</span><br><span class="line">Please enter the default Docker image (e.g. ruby:2.1):</span><br><span class="line">alpine:latest</span><br><span class="line">Runner registered successfully. Feel free to start it, but <span class="keyword">if</span> it<span class="string">'s running already the config should be automatically reloaded! </span></span><br><span class="line"><span class="string">root@9e069893788a:/#</span></span><br></pre></td></tr></table></figure>
<h3 id="gitlab-runner-in-k8s"><a href="#gitlab-runner-in-k8s" class="headerlink" title="gitlab-runner in k8s"></a>gitlab-runner in k8s</h3><figure class="highlight sh"><table><tr><td class="code"><pre><span class="line">helm repo add gitlab https://charts.gitlab.io</span><br><span class="line">helm install --name gitlab-runner -f values.yml gitlab/gitlab-runner</span><br></pre></td></tr></table></figure>
<p>values.yml：</p>
<figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="attr">imagePullPolicy:</span> <span class="string">IfNotPresent</span></span><br><span class="line"><span class="attr">gitlabUrl:</span> <span class="string">http://xxx.com/</span></span><br><span class="line"><span class="attr">runnerRegistrationToken:</span> <span class="string">"peWrQo7zxksbVhsuTncq"</span></span><br><span class="line"><span class="attr">unregisterRunners:</span> <span class="literal">true</span></span><br><span class="line"><span class="attr">concurrent:</span> <span class="number">10</span></span><br><span class="line"><span class="attr">checkInterval:</span> <span class="number">30</span></span><br><span class="line"><span class="attr">rbac:</span></span><br><span class="line">  <span class="attr">create:</span> <span class="literal">false</span></span><br><span class="line">  <span class="attr">clusterWideAccess:</span> <span class="literal">false</span></span><br><span class="line"><span class="attr">metrics:</span></span><br><span class="line">  <span class="attr">enabled:</span> <span class="literal">true</span></span><br><span class="line"><span class="attr">runners:</span></span><br><span class="line">  <span class="attr">image:</span> <span class="string">ubuntu:16.04</span></span><br><span class="line">  <span class="attr">privileged:</span> <span class="literal">false</span></span><br><span class="line">  <span class="attr">cache:</span> <span class="string">&#123;&#125;</span></span><br><span class="line">  <span class="attr">builds:</span> <span class="string">&#123;&#125;</span></span><br><span class="line">  <span class="attr">services:</span> <span class="string">&#123;&#125;</span></span><br><span class="line">  <span class="attr">helpers:</span> <span class="string">&#123;&#125;</span></span><br><span class="line"><span class="attr">resources:</span> <span class="string">&#123;&#125;</span></span><br><span class="line"><span class="attr">affinity:</span> <span class="string">&#123;&#125;</span></span><br><span class="line"><span class="attr">nodeSelector:</span> <span class="string">&#123;&#125;</span></span><br><span class="line"><span class="attr">tolerations:</span> <span class="string">[]</span></span><br><span class="line"><span class="attr">hostAliases:</span> <span class="string">[]</span></span><br><span class="line"><span class="attr">podAnnotations:</span> <span class="string">&#123;&#125;</span></span><br></pre></td></tr></table></figure>
<p>或者</p>
<figure class="highlight sh"><table><tr><td class="code"><pre><span class="line">apiVersion: v1</span><br><span class="line">kind: ConfigMap</span><br><span class="line">metadata:</span><br><span class="line">  name: gitlab-runner</span><br><span class="line">  namespace: default</span><br><span class="line">data:</span><br><span class="line">  config.toml: |</span><br><span class="line">    concurrent = 2</span><br><span class="line"></span><br><span class="line">    [[runners]]</span><br><span class="line">      name = <span class="string">"Kubernetes Runner"</span></span><br><span class="line">      url = <span class="string">"http://xxx.com/"</span></span><br><span class="line">      token = <span class="string">"peWrQo7zxksbVhsuTncq"</span></span><br><span class="line">      executor = <span class="string">"kubernetes"</span></span><br><span class="line">      [runners.kubernetes]</span><br><span class="line">        namespace = <span class="string">"default"</span></span><br><span class="line">        image = <span class="string">"busybox"</span></span><br><span class="line"></span><br><span class="line">---</span><br><span class="line">apiVersion: extensions/v1beta1</span><br><span class="line">kind: Deployment</span><br><span class="line">metadata:</span><br><span class="line">  name: gitlab-runner</span><br><span class="line">  namespace: default</span><br><span class="line">spec:</span><br><span class="line">  replicas: 1</span><br><span class="line">  selector:</span><br><span class="line">    matchLabels:</span><br><span class="line">      name: gitlab-runner</span><br><span class="line">  template:</span><br><span class="line">    metadata:</span><br><span class="line">      labels:</span><br><span class="line">        name: gitlab-runner</span><br><span class="line">    spec:</span><br><span class="line">      containers:</span><br><span class="line">      - args:</span><br><span class="line">        - run</span><br><span class="line">        image: gitlab/gitlab-runner:latest</span><br><span class="line">        imagePullPolicy: IfNotPresent</span><br><span class="line">        name: gitlab-runner</span><br><span class="line">        volumeMounts:</span><br><span class="line">        - mountPath: /etc/gitlab-runner</span><br><span class="line">          name: config</span><br><span class="line">      restartPolicy: Always</span><br><span class="line">      volumes:</span><br><span class="line">      - configMap:</span><br><span class="line">          name: gitlab-runner</span><br><span class="line">        name: config</span><br></pre></td></tr></table></figure>
<p>创建runner然后进入容器手动注册。</p>
<figure class="highlight sh"><table><tr><td class="code"><pre><span class="line">kubectl apply -f &lt;yaml&gt;</span><br><span class="line">gitlab-ci-multi-runner register</span><br><span class="line"><span class="comment"># 或者</span></span><br><span class="line">gitlab-runner register</span><br></pre></td></tr></table></figure>
<p>或者</p>
<figure class="highlight sh"><table><tr><td class="code"><pre><span class="line">kubectl create -f gitlab-sc.yml</span><br><span class="line">helm install --name gitlab-runner --namespace gitlabci -f values.yml gitlab/gitlab-runner</span><br></pre></td></tr></table></figure>
<p>相关yaml：</p>
<figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="meta">---</span></span><br><span class="line"><span class="attr">apiVersion:</span> <span class="string">v1</span></span><br><span class="line"><span class="attr">kind:</span> <span class="string">Namespace</span></span><br><span class="line"><span class="attr">metadata:</span></span><br><span class="line">  <span class="attr">name:</span> <span class="string">gitlabci</span></span><br><span class="line">  <span class="attr">labels:</span></span><br><span class="line">    <span class="attr">name:</span> <span class="string">gitlabci</span></span><br><span class="line"></span><br><span class="line"><span class="meta">---</span></span><br><span class="line"><span class="comment"># Source: gitlab-runner/templates/service-account.yaml</span></span><br><span class="line"><span class="attr">apiVersion:</span> <span class="string">v1</span></span><br><span class="line"><span class="attr">kind:</span> <span class="string">ServiceAccount</span></span><br><span class="line"><span class="attr">metadata:</span></span><br><span class="line">  <span class="attr">name:</span> <span class="string">gitlab-runner-admin</span></span><br><span class="line">  <span class="attr">namespace:</span> <span class="string">gitlabci</span></span><br><span class="line"></span><br><span class="line"><span class="meta">---</span></span><br><span class="line"><span class="comment"># Source: gitlab-runner/templates/role.yaml</span></span><br><span class="line"><span class="attr">apiVersion:</span> <span class="string">rbac.authorization.k8s.io/v1</span></span><br><span class="line"><span class="attr">kind:</span> <span class="string">"ClusterRole"</span></span><br><span class="line"><span class="attr">metadata:</span></span><br><span class="line">  <span class="attr">name:</span> <span class="string">gitlab-runner-admin</span></span><br><span class="line">  <span class="attr">namespace:</span> <span class="string">gitlabci</span></span><br><span class="line"><span class="attr">rules:</span></span><br><span class="line"><span class="bullet">-</span> <span class="attr">apiGroups:</span> <span class="string">["*"]</span></span><br><span class="line">  <span class="attr">resources:</span> <span class="string">["*"]</span></span><br><span class="line">  <span class="attr">verbs:</span> <span class="string">["*"]</span></span><br><span class="line"></span><br><span class="line"><span class="meta">---</span></span><br><span class="line"><span class="comment"># Source: gitlab-runner/templates/role-binding.yaml</span></span><br><span class="line"><span class="attr">apiVersion:</span> <span class="string">rbac.authorization.k8s.io/v1</span></span><br><span class="line"><span class="attr">kind:</span> <span class="string">"ClusterRoleBinding"</span></span><br><span class="line"><span class="attr">metadata:</span></span><br><span class="line">  <span class="attr">name:</span> <span class="string">gitlab-runner-admin</span></span><br><span class="line">  <span class="attr">namespace:</span> <span class="string">gitlabci</span></span><br><span class="line"><span class="attr">roleRef:</span></span><br><span class="line">  <span class="attr">apiGroup:</span> <span class="string">rbac.authorization.k8s.io</span></span><br><span class="line">  <span class="attr">kind:</span> <span class="string">"ClusterRole"</span></span><br><span class="line">  <span class="attr">name:</span> <span class="string">gitlab-runner-admin</span></span><br><span class="line"><span class="attr">subjects:</span></span><br><span class="line"><span class="bullet">-</span> <span class="attr">kind:</span> <span class="string">ServiceAccount</span></span><br><span class="line">  <span class="attr">name:</span> <span class="string">gitlab-runner-admin</span></span><br><span class="line">  <span class="attr">namespace:</span> <span class="string">gitlabci</span></span><br></pre></td></tr></table></figure>
]]></content>
      <categories>
        <category>CICD</category>
      </categories>
      <tags>
        <tag>Gitlab</tag>
      </tags>
  </entry>
  <entry>
    <title>Gitlab Runner</title>
    <url>/pages/cicd/gitlab-runner/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\pages\assets\css\APlayer.min.css"><script src="\pages\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><hr>
<p>启动gitlab-runner（提供自动创建、销毁runner的服务）</p>
<figure class="highlight sh"><table><tr><td class="code"><pre><span class="line">docker run -d --name gitlab-runner --restart always \</span><br><span class="line">  -v /srv/gitlab-runner/config:/etc/gitlab-runner \</span><br><span class="line">  -v /var/run/docker.sock:/var/run/docker.sock \</span><br><span class="line">  gitlab/gitlab-runner:latest</span><br></pre></td></tr></table></figure>
<a id="more"></a>
<p>注册runner</p>
<figure class="highlight sh"><table><tr><td class="code"><pre><span class="line">gitlab-runner register -n \</span><br><span class="line">  --url http://gitlab.keep.com/ \</span><br><span class="line">  --registration-token your-token*** \</span><br><span class="line">  --executor docker \</span><br><span class="line">  --description <span class="string">"Docker in Docker Runner"</span> \</span><br><span class="line">  --docker-image alpine:latest \</span><br><span class="line">  --tag-list <span class="string">"dind-v19"</span></span><br></pre></td></tr></table></figure>
<p>查看注册后生成的/etc/gitlab-runner/config.toml：</p>
<figure class="highlight"><table><tr><td class="code"><pre><span class="line"><span class="section">[[runners]]</span></span><br><span class="line">  name = "Docker in Docker Runner"</span><br><span class="line">  url = "http://gitlab.keep.com/"</span><br><span class="line">  token = "xxxxx"</span><br><span class="line">  executor = "docker"</span><br><span class="line"><span class="section">  [runners.custom_build_dir]</span></span><br><span class="line"><span class="section">  [runners.docker]</span></span><br><span class="line">    tls_verify = false</span><br><span class="line">    image = "alpine:latest"</span><br><span class="line">    privileged = false</span><br><span class="line">    disable_entrypoint_overwrite = false</span><br><span class="line">    oom_kill_disable = false</span><br><span class="line">    disable_cache = false</span><br><span class="line">    volumes = ["/cache"]</span><br><span class="line">    shm_size = 0</span><br><span class="line"><span class="section">  [runners.cache]</span></span><br><span class="line"><span class="section">    [runners.cache.s3]</span></span><br><span class="line"><span class="section">    [runners.cache.gcs]</span></span><br><span class="line"><span class="section">  [runners.custom]</span></span><br><span class="line">    run_exec = ""</span><br></pre></td></tr></table></figure>
<p>gitlab cicd日志：</p>
<figure class="highlight sh"><table><tr><td class="code"><pre><span class="line">Running with gitlab-runner 12.1.0 (de7731dd)</span><br><span class="line">  on Docker <span class="keyword">in</span> Docker Runner PdsMyiEk</span><br><span class="line">Using Docker executor with image docker:stable ...</span><br><span class="line">Pulling docker image docker:stable ...</span><br><span class="line">Using docker image sha256:9a38a85b1e4e7bb53b7c7cc45afff6ba7b1cdfe01b9738f36a3b4ad0cdb10b00 <span class="keyword">for</span> docker:stable ...</span><br><span class="line">Running on runner-PdsMyiEk-project-238-concurrent-0 via 521aa7f3c946...</span><br><span class="line">Fetching changes...</span><br><span class="line">Initialized empty Git repository <span class="keyword">in</span> /builds/devops/docs/.git/</span><br><span class="line">Created fresh repository.</span><br><span class="line">From http://lzzeng.keep.com/devops/docs</span><br><span class="line"></span><br><span class="line">- [new branch]      master     -&gt; origin/master</span><br><span class="line">  Checking out 78455dad as master...</span><br><span class="line"></span><br><span class="line">Skipping Git submodules setup</span><br><span class="line">$ docker info</span><br><span class="line">Client:</span><br><span class="line"> Debug Mode: <span class="literal">false</span></span><br><span class="line"></span><br><span class="line">Server:</span><br><span class="line">ERROR: Cannot connect to the Docker daemon at tcp://docker:2375. Is the docker daemon running?</span><br><span class="line">errors pretty printing info</span><br><span class="line">ERROR: Job failed: <span class="built_in">exit</span> code 1</span><br></pre></td></tr></table></figure>
<p>要支持docker in docker，改为：</p>
<figure class="highlight"><table><tr><td class="code"><pre><span class="line"><span class="section">[[runners]]</span></span><br><span class="line">  name = "Docker in Docker Runner"</span><br><span class="line">  url = "http://lzzeng.keep.com/"</span><br><span class="line">  token = "PdsMyiEkyfbPsVZgboPd"</span><br><span class="line">  executor = "docker"</span><br><span class="line"><span class="section">  [runners.custom_build_dir]</span></span><br><span class="line"><span class="section">  [runners.docker]</span></span><br><span class="line">    tls_verify = false</span><br><span class="line">    image = "alpine:latest"</span><br><span class="line">    privileged = true</span><br><span class="line">    disable_entrypoint_overwrite = false</span><br><span class="line">    oom_kill_disable = false</span><br><span class="line">    disable_cache = false</span><br><span class="line">    volumes = ["/cache", "/var/run/docker.sock:/var/run/docker.sock", "/etc/default/docker:/etc/default/docker", "/etc/docker/daemon.json:/etc/docker/daemon.json"]</span><br><span class="line">    shm_size = 0</span><br><span class="line"><span class="section">  [runners.cache]</span></span><br><span class="line"><span class="section">    [runners.cache.s3]</span></span><br><span class="line"><span class="section">    [runners.cache.gcs]</span></span><br><span class="line"><span class="section">  [runners.custom]</span></span><br><span class="line">    run_exec = ""</span><br></pre></td></tr></table></figure>
]]></content>
      <categories>
        <category>CICD</category>
      </categories>
      <tags>
        <tag>Gitlab</tag>
        <tag>CICD</tag>
      </tags>
  </entry>
  <entry>
    <title>通过Rancher初步创建K8s集群过程记录</title>
    <url>/pages/deployment/k8s/rancher-k8s/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\pages\assets\css\APlayer.min.css"><script src="\pages\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><hr>
<p>集群架构参考图：</p>
<p><img src="/assets/images2019/rancher-k8s.assets/1551952435046.png" alt="1551952435046"></p>
<a id="more"></a>
<p>集群资源列表：</p>
<table>
<thead>
<tr>
<th>IP</th>
<th>role</th>
<th>description</th>
</tr>
</thead>
<tbody>
<tr>
<td>192.168.101.71</td>
<td>rancher server<br>k8s-master (etcd, control)</td>
<td>master节点<br><strong><em>rancher server</em></strong></td>
</tr>
<tr>
<td>192.168.101.72</td>
<td>k8s-master (etcd, control)</td>
<td>master节点</td>
</tr>
<tr>
<td>192.168.101.73</td>
<td>k8s-master (etcd, control)</td>
<td>master节点</td>
</tr>
<tr>
<td>192.168.101.74</td>
<td>k8s-node (worker)</td>
<td>worker节点（可被调度）</td>
</tr>
<tr>
<td>192.168.101.75</td>
<td>k8s-node (worker)</td>
<td>worker节点</td>
</tr>
<tr>
<td>192.168.101.76</td>
<td>k8s-node (worker)</td>
<td>worker节点</td>
</tr>
<tr>
<td>192.168.<strong><em>101.70</em></strong></td>
<td>VIP</td>
<td>虚拟 IP</td>
</tr>
</tbody>
</table>
<p>安装步骤：</p>
<ul>
<li>初始准备</li>
</ul>
<figure class="highlight sh"><table><tr><td class="code"><pre><span class="line"><span class="comment"># /etc/hosts</span></span><br><span class="line">127.0.0.1   localhost localhost.localdomain localhost4 localhost4.localdomain4</span><br><span class="line">::1         localhost localhost.localdomain localhost6 localhost6.localdomain6</span><br><span class="line">192.168.101.71  b71-k8s-m01</span><br><span class="line">192.168.101.72  b72-k8s-m02</span><br><span class="line">192.168.101.73  b73-k8s-m03</span><br><span class="line">192.168.101.74  b74-k8s-c01</span><br><span class="line">192.168.101.75  b75-k8s-c02</span><br><span class="line">192.168.101.76  b76-k8s-c03</span><br><span class="line"></span><br><span class="line"><span class="comment"># 关闭firewalld</span></span><br><span class="line">systemctl stop firewalld.service</span><br><span class="line">systemctl <span class="built_in">disable</span> firewalld.service</span><br><span class="line"></span><br><span class="line"><span class="comment"># 无swap分区，不涉及swapoff操作</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 关闭selinux</span></span><br><span class="line">setenforce 0</span><br><span class="line">sed -i <span class="string">'/^SELINUX=/s/=.*$/=disabled/'</span> /etc/selinux/config</span><br><span class="line"></span><br><span class="line"><span class="comment"># 安装docker-ce 18.06</span></span><br><span class="line">wget -P /etc/yum.repos.d https://mirrors.aliyun.com/docker-ce/linux/centos/docker-ce.repo</span><br><span class="line">yum install docker-ce-18.06.1.ce -y</span><br><span class="line">systemctl start docker.service</span><br><span class="line">systemctl <span class="built_in">enable</span> docker.service</span><br></pre></td></tr></table></figure>
<p>haproxy + keepalived 配置：</p>
<figure class="highlight sh"><table><tr><td class="code"><pre><span class="line"><span class="comment">### 对3个master节点：添加到文件/etc/sysctl.conf</span></span><br><span class="line">cat &lt;&lt;EOF &gt;&gt;/etc/sysctl.conf</span><br><span class="line">net.ipv4.ip_forward = 1</span><br><span class="line">net.ipv4.ip_nonlocal_bind = 1</span><br><span class="line">EOF</span><br><span class="line"></span><br><span class="line"><span class="comment">### 修改keepalived.conf</span></span><br><span class="line">cat &gt; /etc/keepalived/keepalived.conf &lt;&lt; EOF</span><br><span class="line">! Configuration File <span class="keyword">for</span> keepalived</span><br><span class="line"></span><br><span class="line">global_defs &#123;</span><br><span class="line">   router_id LVS_DEVEL</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">vrrp_script check_haproxy &#123;</span><br><span class="line">	script <span class="string">"killall -0 haproxy"</span></span><br><span class="line">	interval 3</span><br><span class="line">	weight -2</span><br><span class="line">	fall 10</span><br><span class="line">	rise 2</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">vrrp_instance VI_1 &#123;</span><br><span class="line">	state MASTER <span class="comment"># 另2个分别是BACKUP、BACKUP</span></span><br><span class="line">	interface ens192</span><br><span class="line">	virtual_router_id 51</span><br><span class="line">	priority 120 <span class="comment"># 优先级，另2个可以设置为100</span></span><br><span class="line">	advert_int 1</span><br><span class="line">	authentication &#123;</span><br><span class="line">		auth_type PASS</span><br><span class="line">		auth_pass 59144e4504f2b953e7b9</span><br><span class="line">	&#125;</span><br><span class="line">	virtual_ipaddress &#123;</span><br><span class="line">		192.168.101.70</span><br><span class="line">	&#125;</span><br><span class="line">	track_script &#123;</span><br><span class="line">		check_haproxy</span><br><span class="line">	&#125;</span><br><span class="line">&#125;</span><br><span class="line">EOF</span><br><span class="line"></span><br><span class="line"><span class="comment"># 安装killall</span></span><br><span class="line">yum install psmisc -y</span><br><span class="line"></span><br><span class="line">systemctl <span class="built_in">enable</span> keepalived.service</span><br><span class="line">systemctl start keepalived.service</span><br><span class="line">[root@B72-k8s-m02 haproxy]<span class="comment"># ip address show ens192</span></span><br><span class="line">2: ens192: &lt;BROADCAST,MULTICAST,UP,LOWER_UP&gt; mtu 1500 qdisc mq state UP group default qlen 1000</span><br><span class="line">    link/ether 00:50:56:85:8a:00 brd ff:ff:ff:ff:ff:ff</span><br><span class="line">    inet 192.168.101.72/24 brd 192.168.101.255 scope global noprefixroute ens192</span><br><span class="line">       valid_lft forever preferred_lft forever</span><br><span class="line">    inet 192.168.101.70/32 scope global ens192</span><br><span class="line">       valid_lft forever preferred_lft forever</span><br><span class="line">    inet6 fe80::250:56ff:fe85:8a00/64 scope link</span><br><span class="line">       valid_lft forever preferred_lft forever</span><br><span class="line"></span><br><span class="line"><span class="comment">### 修改haproxy.cfg</span></span><br><span class="line">...</span><br><span class="line"><span class="comment"># main frontend which proxys to the backends</span></span><br><span class="line"><span class="comment">#---------------------------------------------------------------------</span></span><br><span class="line">frontend kubernetes-apiserver</span><br><span class="line">    mode                 tcp</span><br><span class="line">    <span class="built_in">bind</span>                 *:16443</span><br><span class="line">    option               tcplog</span><br><span class="line">    default_backend      kubernetes-apiserver</span><br><span class="line"></span><br><span class="line">backend kubernetes-apiserver</span><br><span class="line">    mode        tcp</span><br><span class="line">    balance     roundrobin</span><br><span class="line">    server  b71-k8s-m01 192.168.101.71:6443 check weight 1</span><br><span class="line">    server  b72-k8s-m02 192.168.101.72:6443 check weight 2</span><br><span class="line">    server  b73-k8s-m03 192.168.101.73:6443 check weight 2</span><br><span class="line"></span><br><span class="line">listen stats</span><br><span class="line">    <span class="built_in">bind</span>                 *:1080</span><br><span class="line">    stats auth           admin:password</span><br><span class="line">    stats refresh        5s</span><br><span class="line">    stats realm          HAProxy\ Statistics</span><br><span class="line">    stats uri            /admin?stats</span><br><span class="line"></span><br><span class="line"><span class="comment"># 启动haproxy</span></span><br><span class="line">systemctl <span class="built_in">enable</span> haproxy.service</span><br><span class="line">systemctl start haproxy.service</span><br></pre></td></tr></table></figure>
<p>需开放的端口见 <a href="https://rancher.com/docs/rancher/v2.x/en/installation/references/" target="_blank" rel="noopener">https://rancher.com/docs/rancher/v2.x/en/installation/references/</a>。</p>
<p>为了简便，关闭了防火墙。通过Rancher安装后，查看一下iptables规则：</p>
<figure class="highlight sh"><table><tr><td class="code"><pre><span class="line">[root@B71-k8s-m01 ~]<span class="comment"># iptables -L -n</span></span><br><span class="line">Chain INPUT (policy ACCEPT)</span><br><span class="line">target     prot opt <span class="built_in">source</span>               destination         </span><br><span class="line">KUBE-EXTERNAL-SERVICES  all  --  0.0.0.0/0            0.0.0.0/0            ctstate NEW </span><br><span class="line">KUBE-FIREWALL  all  --  0.0.0.0/0            0.0.0.0/0           </span><br><span class="line"></span><br><span class="line">Chain FORWARD (policy DROP)</span><br><span class="line">target     prot opt <span class="built_in">source</span>               destination         </span><br><span class="line">KUBE-FORWARD  all  --  0.0.0.0/0            0.0.0.0/0            </span><br><span class="line">DOCKER-USER  all  --  0.0.0.0/0            0.0.0.0/0           </span><br><span class="line">...</span><br></pre></td></tr></table></figure>
<ul>
<li><p>安装rancher server</p>
<p>在节点101.71上执行：</p>
</li>
</ul>
<figure class="highlight sh"><table><tr><td class="code"><pre><span class="line">docker run -d --restart=unless-stopped -p 80:80 -p 443:443 rancher/rancher:stable</span><br></pre></td></tr></table></figure>
<ul>
<li><p>登录Rancher Web创建集群</p>
<p>URL: <a href="https://192.168.101.71/" target="_blank" rel="noopener">https://192.168.101.71/</a></p>
</li>
</ul>
<p><img src="/assets/images2019/rancher-k8s.assets/1551953142393.png" alt="1551953142393"></p>
<p>​    添加master节点时，是按如下设置的：</p>
<p><img src="/assets/images2019/rancher-k8s.assets/1551840677589.png" alt="1551840677589"></p>
<p><img src="/assets/images2019/rancher-k8s.assets/1551840771418.png" alt="1551840771418"></p>
<p><img src="/assets/images2019/rancher-k8s.assets/1551840932234.png" alt="1551840932234"></p>
<p>​    复制命令在待添加的节点机器上执行，依次添加完3个master节点后如下，其中101.71是第二个添加的：</p>
<p><img src="/assets/images2019/rancher-k8s.assets/1551841031094.png" alt="1551841031094"></p>
<p>​    在机器数量足够的情况下，可将rancher server单独部署，此处是与K8s_master共用。经反复试验，添加master节点时，先添加101.72或101.73，<strong>不要首先添加rancher server所在节点101.71</strong>。否则，后续添加master时会出<strong>问题</strong>：</p>
<p><img src="/assets/images2019/rancher-k8s.assets/1551839742271.png" alt="1551839742271"></p>
<p>上图显示101.72一直处于Registering状态，不能添加进集群。</p>
<p>在添加节点异常时，先通过Web管理界面删除问题节点，然后在重新执行添加前，通过以下脚本清理一下待添加节点的环境：</p>
<figure class="highlight sh"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 清理安装文件目录</span></span><br><span class="line">DLIST=<span class="string">"/var/lib/etcd /etc/kubernetes /etc/cni /opt/cni /var/lib/cni /var/run/calico /opt/rke"</span></span><br><span class="line"><span class="keyword">for</span> dir <span class="keyword">in</span> <span class="variable">$DLIST</span>; <span class="keyword">do</span></span><br><span class="line">  <span class="built_in">echo</span> <span class="string">"Removing <span class="variable">$dir</span>"</span></span><br><span class="line">  rm -rf <span class="variable">$dir</span></span><br><span class="line"><span class="keyword">done</span></span><br></pre></td></tr></table></figure>
<figure class="highlight sh"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 清理docker</span></span><br><span class="line">CLIST=$(docker ps -qa)</span><br><span class="line"><span class="keyword">if</span> [ <span class="string">"x"</span><span class="variable">$CLIST</span> == <span class="string">"x"</span> ]; <span class="keyword">then</span></span><br><span class="line">  <span class="built_in">echo</span> <span class="string">"No containers exist - skipping container cleanup"</span></span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">  docker stop -f <span class="variable">$CLIST</span> &amp;&amp; docker rm -f <span class="variable">$CLIST</span></span><br><span class="line"><span class="keyword">fi</span></span><br><span class="line"></span><br><span class="line">ILIST=$(docker images -a -q)</span><br><span class="line"><span class="keyword">if</span> [ <span class="string">"x"</span><span class="variable">$ILIST</span> == <span class="string">"x"</span> ]; <span class="keyword">then</span></span><br><span class="line">  <span class="built_in">echo</span> <span class="string">"No images exist - skipping image cleanup"</span></span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">  docker rmi <span class="variable">$ILIST</span></span><br><span class="line"><span class="keyword">fi</span></span><br><span class="line"></span><br><span class="line">VLIST=$(docker volume ls -q)</span><br><span class="line"><span class="keyword">if</span> [ <span class="string">"x"</span><span class="variable">$VLIST</span> == <span class="string">"x"</span> ]; <span class="keyword">then</span></span><br><span class="line">  <span class="built_in">echo</span> <span class="string">"No volumes exist - skipping volume cleanup"</span></span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">  docker volume rm -f <span class="variable">$VLIST</span></span><br><span class="line"><span class="keyword">fi</span></span><br><span class="line"></span><br><span class="line">systemctl restart docker.service</span><br></pre></td></tr></table></figure>
<p>下图是添加完3个master和3个node后的主机界面：</p>
<p><img src="/assets/images2019/rancher-k8s.assets/1551844009517.png" alt="1551844009517"></p>
<ul>
<li>部署服务</li>
</ul>
<p><img src="/assets/images2019/rancher-k8s.assets/1551844649598.png" alt="1551844649598"></p>
<p>测试部署5个jenkins实例：</p>
<p><img src="/assets/images2019/rancher-k8s.assets/1551856322207.png" alt="1551856322207"></p>
<p><img src="/assets/images2019/rancher-k8s.assets/1551844947277.png" alt="1551844947277"></p>
<p><img src="/assets/images2019/rancher-k8s.assets/1551845031997.png" alt="1551845031997"></p>
<p><img src="/assets/images2019/rancher-k8s.assets/1551845141705.png" alt="1551845141705"></p>
<p>访问 Jenkins：</p>
<p><img src="/assets/images2019/rancher-k8s.assets/1551845268617.png" alt="1551845268617"></p>
<hr>
<ul>
<li>执行kubectl命令行</li>
</ul>
<p>通过Rancher Web界面来执行kubectl命令行：</p>
<p><img src="/assets/images2019/rancher-k8s.assets/1551845918415.png" alt="1551845918415"></p>
<p><img src="/assets/images2019/rancher-k8s.assets/1551845411567.png" alt="1551845411567"></p>
<p>如果直接登录主机，找不到kubectl命令，需进入相关的容器</p>
<p><img src="/assets/images2019/rancher-k8s.assets/1551845747894.png" alt="1551845747894"></p>
<ul>
<li>添加Dashboard</li>
</ul>
<p><img src="/assets/images2019/rancher-k8s.assets/1551846399730.png" alt="1551846399730"></p>
<p><img src="/assets/images2019/rancher-k8s.assets/1551846438286.png" alt="1551846438286"></p>
<p>找到kubernetes-dashboard，并部署（启动）</p>
<p><img src="/assets/images2019/rancher-k8s.assets/1551846551235.png" alt="1551846551235"></p>
<p><img src="/assets/images2019/rancher-k8s.assets/1551846635456.png" alt="1551846635456"></p>
<p><img src="/assets/images2019/rancher-k8s.assets/1551953637260.png" alt="1551953637260"></p>
]]></content>
      <categories>
        <category>K8s</category>
      </categories>
      <tags>
        <tag>K8s</tag>
      </tags>
  </entry>
  <entry>
    <title>通过Zabbix的自动发现（规则）自动创建监控项</title>
    <url>/pages/monitoring/zabbix/zabbix-discovery-rule/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\pages\assets\css\APlayer.min.css"><script src="\pages\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><hr>
<p>下图是一个已配置并启用的自动发现规则:</p>
<p><img src="/assets/images2019/zabbix-discovery-rule.assets/1552289524930.png" alt="1552289524930"></p>
<a id="more"></a>
<p>应用到165.194这个主机后，自动发现的监控项：</p>
<p><img src="/assets/images2019/zabbix-discovery-rule.assets/1552292766307.png" alt="1552292766307"></p>
<h3 id="服务端配置"><a href="#服务端配置" class="headerlink" title="服务端配置"></a>服务端配置</h3><hr>
<ul>
<li>创建Template</li>
</ul>
<p><img src="/assets/images2019/zabbix-discovery-rule.assets/1552289699169.png" alt="1552289699169"></p>
<p><img src="/assets/images2019/zabbix-discovery-rule.assets/1552291377011.png" alt="1552291377011"></p>
<ul>
<li>创建Discovery rule</li>
</ul>
<p><img src="/assets/images2019/zabbix-discovery-rule.assets/1552290037822.png" alt="1552290037822"></p>
<p><img src="/assets/images2019/zabbix-discovery-rule.assets/1552290165972.png" alt="1552290165972"></p>
<p><img src="/assets/images2019/zabbix-discovery-rule.assets/1552290648939.png" alt="1552290648939"></p>
<p>键值<code>readPorts</code>跟被监控端配置的参数有关，下面再提。</p>
<ul>
<li>创建监控项原型</li>
</ul>
<p><img src="/assets/images2019/zabbix-discovery-rule.assets/1552290398568.png" alt="1552290398568"></p>
<p><img src="/assets/images2019/zabbix-discovery-rule.assets/1552290435754.png" alt="1552290435754"></p>
<p><img src="/assets/images2019/zabbix-discovery-rule.assets/1552290764479.png" alt="1552290764479"></p>
<p>宏引用符号{ #SERVICE }和{ #TCP_PORT }跟被监控端返回的json数据有关。<code>net.tcp.listen[&lt;port&gt;]</code>表示监听目标机器的<code>&lt;port&gt;</code>端口状态，返回值为0或1，0表示Down，1表示Up。另外，<code>$1</code>表示键值里的第一个参数，即<code>&lt;port&gt;</code>。</p>
<p><img src="/assets/images2019/zabbix-discovery-rule.assets/1552291332721.png" alt="1552291332721"></p>
<ul>
<li>创建触发器原型</li>
</ul>
<p><img src="/assets/images2019/zabbix-discovery-rule.assets/1552291459399.png" alt="1552291459399"></p>
<p><img src="/assets/images2019/zabbix-discovery-rule.assets/1552291553384.png" alt="1552291553384"></p>
<p><img src="/assets/images2019/zabbix-discovery-rule.assets/1552291665378.png" alt="1552291665378"></p>
<p><img src="/assets/images2019/zabbix-discovery-rule.assets/1552291704285.png" alt="1552291704285"></p>
<p><img src="/assets/images2019/zabbix-discovery-rule.assets/1552291742293.png" alt="1552291742293"></p>
<p>添加完监控项和触发器原型的样子：</p>
<p><img src="/assets/images2019/zabbix-discovery-rule.assets/1552291961703.png" alt="1552291961703"></p>
<ul>
<li><p>添加主机并关联此模板</p>
<p>此略。</p>
</li>
</ul>
<hr>
<h3 id="被监控端配置"><a href="#被监控端配置" class="headerlink" title="被监控端配置"></a>被监控端配置</h3><p>首先，看一下/etc/zabbix目录下的文件。scripts目录是新加的，zabbix_agentd.conf也作了修改。</p>
<p><img src="/assets/images2019/zabbix-discovery-rule.assets/1552292968159.png" alt="1552292968159"></p>
<p>使用自动发现功能，需要返回符号zabbix要求的json数据：</p>
<p>例如：</p>
<figure class="highlight sh"><table><tr><td class="code"><pre><span class="line">&#123;</span><br><span class="line">    <span class="string">"data"</span>: [</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="string">"&#123;#SERVICE&#125;"</span>: <span class="string">"phjd_mysql"</span>,</span><br><span class="line">            <span class="string">"&#123;#TCP_PORT&#125;"</span>: <span class="string">"28001"</span></span><br><span class="line">        &#125;,</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="string">"&#123;#SERVICE&#125;"</span>: <span class="string">"philips_taxfree_tuangou_payment_management"</span>,</span><br><span class="line">            <span class="string">"&#123;#TCP_PORT&#125;"</span>: <span class="string">"16200"</span></span><br><span class="line">        &#125;</span><br><span class="line">    ]</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>其形式大致如下：</p>
<figure class="highlight sh"><table><tr><td class="code"><pre><span class="line">&#123;</span><br><span class="line">    <span class="string">"data"</span>: [</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="string">"&#123;#KEY01&#125;"</span>: <span class="string">"value01_01"</span>,</span><br><span class="line">            <span class="string">"&#123;#KEY02&#125;"</span>: <span class="string">"value01_02"</span>,</span><br><span class="line">            <span class="string">"&#123;#KEY03&#125;"</span>: <span class="string">"value01_03"</span>,</span><br><span class="line">            ...</span><br><span class="line">        &#125;,</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="string">"&#123;#KEY01&#125;"</span>: <span class="string">"value02_01"</span>,</span><br><span class="line">            <span class="string">"&#123;#KEY02&#125;"</span>: <span class="string">"value02_02"</span>,</span><br><span class="line">            <span class="string">"&#123;#KEY02&#125;"</span>: <span class="string">"value02_03"</span>,</span><br><span class="line">            ...</span><br><span class="line">        &#125;,</span><br><span class="line">        ...</span><br><span class="line">    ]</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>readPorts.sh脚本的内容很简单，就是读取已准备好的json数据文件ports.json，作为返回给zabbix server的值：</p>
<figure class="highlight sh"><table><tr><td class="code"><pre><span class="line">[root@172 scripts]<span class="comment"># cat readPorts.sh </span></span><br><span class="line"><span class="meta">#!/bin/sh</span></span><br><span class="line"></span><br><span class="line">mypath=$(<span class="built_in">cd</span> `dirname <span class="variable">$0</span>`; <span class="built_in">pwd</span>)</span><br><span class="line">cat <span class="variable">$mypath</span>/ports.json</span><br></pre></td></tr></table></figure>
<p>为了返回给server端，需要再zabbix_agentd.conf中配置：</p>
<p><img src="/assets/images2019/zabbix-discovery-rule.assets/1552293926733.png" alt="1552293926733"></p>
<p>这样，server端就可以使用<code>readPorts</code>这个键值，以获取写在ports.json中的数据。<code>readPorts</code>下面定义的<code>getPorts、getAllPorts</code>是另外两个可用的自定义键值。</p>
<p>自动发现需监控的服务/端口，难点不在于读取，而在于自动生成json数据文件。此处的ports.json是根据ports.ini转换而来的。</p>
<p>ports.ini文件需人工填写：</p>
<p><img src="/assets/images2019/zabbix-discovery-rule.assets/1552295007248.png" alt="1552295007248"></p>
<p>getPorts.py脚本如下，用于转换ports.ini为ports.json：</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="comment">#!/usr/bin/env python</span></span><br><span class="line"><span class="comment">#coding:utf-8</span></span><br><span class="line"><span class="keyword">import</span> os, json, re</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">mypath = os.path.dirname(os.path.realpath(__file__))</span><br><span class="line">port_list = []</span><br><span class="line">port_dict = &#123;<span class="string">"data"</span>:<span class="literal">None</span>&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">with</span> open(<span class="string">'%s/ports.ini'</span> % mypath, <span class="string">'r'</span>) <span class="keyword">as</span> f:</span><br><span class="line">    <span class="keyword">for</span> line <span class="keyword">in</span> f.readlines():</span><br><span class="line">        line = line.strip()</span><br><span class="line">        <span class="keyword">if</span> line:</span><br><span class="line">            <span class="keyword">try</span>:</span><br><span class="line">                port_srv = line.split(<span class="string">':'</span>)</span><br><span class="line">                port_list.append(&#123;<span class="string">"&#123;#TCP_PORT&#125;"</span>: port_srv[<span class="number">1</span>].strip(),</span><br><span class="line">                                  <span class="string">"&#123;#SERVICE&#125;"</span>: port_srv[<span class="number">0</span>].strip()&#125;)</span><br><span class="line">            <span class="keyword">except</span>:</span><br><span class="line">                <span class="keyword">pass</span></span><br><span class="line"></span><br><span class="line">port_dict[<span class="string">"data"</span>] = port_list</span><br><span class="line">json_str = json.dumps(port_dict, sort_keys=<span class="literal">True</span>, indent=<span class="number">4</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment"># json_str已是json字符串，但每行尾部有一个多余的空格，zabbix不接受，须删除行尾空格</span></span><br><span class="line">p = re.compile(<span class="string">"\s+$"</span>)</span><br><span class="line"><span class="keyword">for</span> line <span class="keyword">in</span> json_str.split(<span class="string">'\n'</span>):</span><br><span class="line">    ss = re.sub(p, <span class="string">""</span>, line)</span><br><span class="line">    <span class="keyword">print</span> ss</span><br></pre></td></tr></table></figure>
<p>转换ports.ini为json形式：</p>
<p><img src="/assets/images2019/zabbix-discovery-rule.assets/1552294366863.png" alt="1552294366863"></p>
<p>至于getAllPorts.py，它的功能是直接返回主机上实际开放的端口数据：</p>
<p><img src="/assets/images2019/zabbix-discovery-rule.assets/1552294862652.png" alt="1552294862652"></p>
]]></content>
      <categories>
        <category>监控</category>
      </categories>
      <tags>
        <tag>Zabbix</tag>
      </tags>
  </entry>
  <entry>
    <title>Alertmanager介绍</title>
    <url>/pages/monitoring/prometheus/alertmanager/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\pages\assets\css\APlayer.min.css"><script src="\pages\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><hr>
<p><img src="/assets/images2019/alertmanager.assets/prometheus-alert-artich.png" alt="img"></p>
<a id="more"></a>
<blockquote>
<p> Alertmanager作为一个独立的组件，负责接收并处理来自Prometheus Server(也可以是其它的客户端程序)的告警信息。Alertmanager可以对这些告警信息进行进一步的处理，比如当接收到大量重复告警时能够消除重复的告警信息，同时对告警信息进行分组并且路由到正确的通知方，Prometheus内置了对邮件，Slack等多种通知方式的支持，同时还支持与Webhook的集成，以支持更多定制化的场景。</p>
</blockquote>
]]></content>
      <categories>
        <category>监控</category>
      </categories>
      <tags>
        <tag>Prometheus</tag>
      </tags>
  </entry>
  <entry>
    <title>Grafana使用记录</title>
    <url>/pages/monitoring/prometheus/grafana-intro/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\pages\assets\css\APlayer.min.css"><script src="\pages\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><hr>
<blockquote>
<p>系统：CentOS 7.5</p>
<p>软件版本：通过docker安装最新版本</p>
</blockquote>
<a id="more"></a>
<h3 id="简介"><a href="#简介" class="headerlink" title="简介"></a>简介</h3><p>官网：<a href="https://grafana.com/grafana" target="_blank" rel="noopener">https://grafana.com/grafana</a></p>
<p><img src="/assets/images2019/grafana-intro.assets/1552441557000.png" alt="1552441557000"></p>
<blockquote>
<p>Grafana是一个跨平台、开源的指标度量分析和可视化工具，提供了强大和优雅的方式去创建、共享、浏览数据。Grafana非常适于和时间序列数据库结合展示数据，如<a href="http://docs.grafana.org/features/datasources/graphite/" target="_blank" rel="noopener">Graphite</a>, <a href="http://docs.grafana.org/features/datasources/influxdb/" target="_blank" rel="noopener">InfluxDB</a>, <a href="http://docs.grafana.org/features/datasources/opentsdb/" target="_blank" rel="noopener">OpenTSDB</a>, <a href="http://docs.grafana.org/features/datasources/prometheus/" target="_blank" rel="noopener">Prometheus</a>。</p>
</blockquote>
<hr>
<h3 id="快速安装"><a href="#快速安装" class="headerlink" title="快速安装"></a>快速安装</h3><figure class="highlight sh"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 拉取镜像</span></span><br><span class="line">docker pull grafana/grafana</span><br><span class="line"><span class="comment"># 运行grafana（admin登录密码为admin）</span></span><br><span class="line">docker run -d -i -p 3000:3000 \</span><br><span class="line">-e <span class="string">"GF_SERVER_ROOT_URL=http://grafana.server.name"</span> \</span><br><span class="line">-e <span class="string">"GF_SECURITY_ADMIN_PASSWORD=admin"</span> \</span><br><span class="line">--net=host \</span><br><span class="line">grafana/grafana</span><br></pre></td></tr></table></figure>
<p>在192.168.100.150上执行，通过浏览器访问：<a href="http://192.168.100.150:3000" target="_blank" rel="noopener">http://192.168.100.150:3000</a>，以admin/admin登录</p>
<p><img src="/assets/images2019/grafana-intro.assets/1552443573409.png" alt="1552443573409"></p>
<p>首页</p>
<p><img src="/assets/images2019/grafana-intro.assets/1552443615287.png" alt="1552443615287"></p>
<p>可以看到只有Install Grafana是已完成状态，待添加数据源、创建仪表盘、添加用户、安装插件等。</p>
<p><em>官网安装指导：&lt;<a href="http://docs.grafana.org/installation/docker/" target="_blank" rel="noopener">http://docs.grafana.org/installation/docker/</a></em>&gt;</p>
<hr>
<h3 id="创建一个Dashboard"><a href="#创建一个Dashboard" class="headerlink" title="创建一个Dashboard"></a>创建一个Dashboard</h3><p>先不管Add data source这一步，直接来尝试创建一个Dashboard。</p>
<p><img src="/assets/images2019/grafana-intro.assets/1552444239771.png" alt="1552444239771"></p>
<ul>
<li><p>修改数据源</p>
<p>default是grafana提供的默认数据源，作演示用没有实际意义。A系列是随机产生的数据。</p>
</li>
</ul>
<p><img src="/assets/images2019/grafana-intro.assets/1552444301113.png" alt="1552444301113"></p>
<ul>
<li><p>修改图表样式</p>
<p>可以在此页签内设置图表类型、线型、阴影、显示的系列等。</p>
</li>
</ul>
<p><img src="/assets/images2019/grafana-intro.assets/1552444564588.png" alt="1552444564588"></p>
<ul>
<li><p>修改通用设置</p>
<p>图表标题、描述信息等。</p>
</li>
</ul>
<p><img src="/assets/images2019/grafana-intro.assets/1552444799208.png" alt="1552444799208"></p>
<ul>
<li><p>保存bashboard</p>
<p>调整图表宽高，保存自定义的dashboard。</p>
</li>
</ul>
<p><img src="/assets/images2019/grafana-intro.assets/1552445155699.png" alt="1552445155699"></p>
<hr>
<h3 id="对接Zabbix"><a href="#对接Zabbix" class="headerlink" title="对接Zabbix"></a>对接Zabbix</h3><p>Grafana没有预装zabbix数据源插件。安装过程如下：</p>
<p>点击Install app &amp; plugins 会跳转到<a href="https://grafana.com/plugins" target="_blank" rel="noopener">https://grafana.com/plugins</a>，选择zabbix。</p>
<p><img src="/assets/images2019/grafana-intro.assets/1552445518931.png" alt="1552445518931"></p>
<p><img src="/assets/images2019/grafana-intro.assets/1552445618451.png" alt="1552445618451"></p>
<p>由于是通过容器运行grafana的，需进入容器执行插件安装。</p>
<figure class="highlight sh"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 列出容器</span></span><br><span class="line">docker ps -a</span><br><span class="line"><span class="comment"># 进入grafana的容器</span></span><br><span class="line">docker <span class="built_in">exec</span> -it &lt;id&gt; bash</span><br><span class="line"></span><br><span class="line"><span class="comment">## grafana容器内</span></span><br><span class="line"><span class="comment"># 安装grafana的zabbix插件</span></span><br><span class="line">grafana-cli plugins install alexanderzobnin-zabbix-app</span><br><span class="line"><span class="built_in">exit</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 重启容器，然后刷新浏览器页面</span></span><br><span class="line">docker restart &lt;id&gt;</span><br></pre></td></tr></table></figure>
<p><img src="/assets/images2019/grafana-intro.assets/1552446272259.png" alt="1552446272259"></p>
<p>重启容器后刷新浏览器，可以看到zabbix插件已安装，并启用之。</p>
<p><img src="/assets/images2019/grafana-intro.assets/1552446449534.png" alt="1552446449534"></p>
<p>添加zabbix数据源</p>
<p><img src="/assets/images2019/grafana-intro.assets/1552447021271.png" alt="1552447021271"></p>
<p>要从zabbix平台<a href="http://192.168.100.69/zabbix" target="_blank" rel="noopener">http://192.168.100.69/zabbix</a>获取数据，URL填<a href="http://192.168.100.69/zabbix/api_jsonrpc.php" target="_blank" rel="noopener">http://192.168.100.69/zabbix/api_jsonrpc.php</a>。</p>
<p><img src="/assets/images2019/grafana-intro.assets/1552447231301.png" alt="1552447231301"></p>
<p><img src="/assets/images2019/grafana-intro.assets/1552447361551.png" alt="1552447361551"></p>
<p>保存后，切换到Dashboards页签，导入相关的zabbix插件提供的dashboard。</p>
<p><img src="/assets/images2019/grafana-intro.assets/1552447689701.png" alt="1552447689701"></p>
<p>回到Home，查看已有的dashboard。</p>
<p><img src="/assets/images2019/grafana-intro.assets/1552447734573.png" alt="1552447734573"></p>
<p>查看zabbix监控数据在grafana上的展示效果。</p>
<p><img src="/assets/images2019/grafana-intro.assets/1552447856369.png" alt="1552447856369"></p>
<p><img src="/assets/images2019/grafana-intro.assets/1552447922398.png" alt="1552447922398"></p>
<hr>
<p>(End)</p>
]]></content>
      <categories>
        <category>监控</category>
      </categories>
      <tags>
        <tag>Prometheus</tag>
        <tag>Grafana</tag>
      </tags>
  </entry>
  <entry>
    <title>Prometheus + Grafana + Alertmanager监控</title>
    <url>/pages/monitoring/prometheus/prometheus-intro/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\pages\assets\css\APlayer.min.css"><script src="\pages\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><hr>
<blockquote>
<p> 环境：CentOS Linux release 7.5.1804 (Core)、5.5.60-MariaDB</p>
<p>运行方式：Prometheus，Grafana和Alertmanager通过docker安装运行，MySQL和exporter直接运行在VM上</p>
</blockquote>
<a id="more"></a>
<p><img src="/assets/images2019/prometheus-intro.assets/1552636875890.png" alt="1552636875890"></p>
<h3 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h3><figure class="highlight sh"><table><tr><td class="code"><pre><span class="line">docker pull prom/prometheus</span><br><span class="line">docker pull grafana/grafana</span><br><span class="line">docker pull prom/alertmanager</span><br><span class="line">[root@VM_0_2_centos config]<span class="comment"># docker images</span></span><br><span class="line">REPOSITORY             TAG                 IMAGE ID            CREATED             SIZE</span><br><span class="line">prom/prometheus        latest              f57ed0abd85c        2 days ago          109MB</span><br><span class="line">grafana/grafana        latest              ffd9c905f698        8 days ago          241MB</span><br><span class="line">prom/alertmanager      latest              02e0d8e930da        6 weeks ago         42.5MB</span><br></pre></td></tr></table></figure>
<p>执行prometheus前，先配置好以下文件。</p>
<figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="string">[root@zabbix02</span> <span class="string">~]#</span> <span class="string">tree</span> <span class="string">config/</span></span><br><span class="line"><span class="string">config/</span></span><br><span class="line"><span class="string">├──</span> <span class="string">alertmanager</span></span><br><span class="line"><span class="string">│</span>   <span class="string">├──</span> <span class="string">alertmanager.yml</span></span><br><span class="line"><span class="string">│</span>   <span class="string">└──</span> <span class="string">template</span></span><br><span class="line"><span class="string">│</span>       <span class="string">└──</span> <span class="string">test.tmpl</span></span><br><span class="line"><span class="string">└──</span> <span class="string">prometheus</span></span><br><span class="line">    <span class="string">├──</span> <span class="string">prometheus.yml</span></span><br><span class="line">    <span class="string">└──</span> <span class="string">rules.yml</span></span><br></pre></td></tr></table></figure>
<ul>
<li>prometheus.yml</li>
</ul>
<figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="attr">global:</span></span><br><span class="line">  <span class="attr">scrape_interval:</span> <span class="string">15s</span></span><br><span class="line">  <span class="attr">evaluation_interval:</span> <span class="string">15s</span></span><br><span class="line">  <span class="attr">scrape_timeout:</span> <span class="string">15s</span></span><br><span class="line">  <span class="attr">external_labels:</span></span><br><span class="line">    <span class="attr">monitor:</span> <span class="string">'codelab_monitor'</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 报警服务，alertmanager默认运行在9093端口</span></span><br><span class="line"><span class="attr">alerting:</span></span><br><span class="line">  <span class="attr">alertmanagers:</span></span><br><span class="line">  <span class="bullet">-</span> <span class="attr">static_configs:</span></span><br><span class="line">    <span class="bullet">-</span> <span class="attr">targets:</span> <span class="string">["localhost:9093"]</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 报警规则</span></span><br><span class="line"><span class="attr">rule_files:</span></span><br><span class="line">  <span class="bullet">-</span> <span class="string">"rules.yml"</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 以下定义了可采集的指标数据源</span></span><br><span class="line"><span class="attr">scrape_configs:</span></span><br><span class="line"><span class="comment"># 安装node-exporter并运行后，默认在端口9100对外暴露相关metrics</span></span><br><span class="line">  <span class="bullet">-</span> <span class="attr">job_name:</span> <span class="string">'node'</span></span><br><span class="line">    <span class="attr">scrape_interval:</span> <span class="string">5s</span></span><br><span class="line">    <span class="attr">static_configs:</span></span><br><span class="line">    <span class="bullet">-</span> <span class="attr">targets:</span> <span class="string">['localhost:9100']</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># prometheus运行时自身也会提供一些metrics</span></span><br><span class="line">  <span class="bullet">-</span> <span class="attr">job_name:</span> <span class="string">'prometheus'</span></span><br><span class="line">    <span class="attr">scrape_interval:</span> <span class="string">5s</span></span><br><span class="line">    <span class="attr">static_configs:</span></span><br><span class="line">    <span class="bullet">-</span> <span class="attr">targets:</span> <span class="string">['localhost:9090']</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># mysql指标由mysqld-exporter导出，默认9104端口</span></span><br><span class="line">  <span class="bullet">-</span> <span class="attr">job_name:</span> <span class="string">'mysqld'</span></span><br><span class="line">    <span class="attr">scrape_interval:</span> <span class="string">5s</span></span><br><span class="line">    <span class="attr">static_configs:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="attr">targets:</span> <span class="string">['localhost:9104']</span></span><br></pre></td></tr></table></figure>
<ul>
<li>rules.yml</li>
</ul>
<figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="attr">groups:</span></span><br><span class="line"><span class="comment"># 测试规则，当CPU使用率（5分钟）超过20%时，达到报警条件</span></span><br><span class="line">  <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">test-rules</span></span><br><span class="line">    <span class="attr">rules:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="attr">alert:</span> <span class="string">hostCpuUsageAlert</span></span><br><span class="line">        <span class="attr">expr:</span> <span class="string">sum(avg</span> <span class="string">without</span> <span class="string">(cpu)(irate(node_cpu_seconds_total&#123;mode!='idle'&#125;[5m])))</span> <span class="string">by</span> <span class="string">(instance)</span> <span class="string">*</span> <span class="number">100</span> <span class="string">&gt;</span> <span class="number">20</span></span><br><span class="line">        <span class="attr">for:</span> <span class="string">1s</span></span><br><span class="line">        <span class="attr">labels:</span></span><br><span class="line">          <span class="attr">severity:</span> <span class="string">page</span></span><br><span class="line">        <span class="attr">annotations:</span></span><br><span class="line">          <span class="attr">summary:</span> <span class="string">"Instance <span class="template-variable">&#123;&#123; $labels.instance &#125;&#125;</span> CPU usgae high"</span></span><br><span class="line">          <span class="attr">description:</span> <span class="string">"<span class="template-variable">&#123;&#123; $labels.instance &#125;&#125;</span> CPU usage above 20% (current value: <span class="template-variable">&#123;&#123; $value &#125;&#125;</span>)"</span></span><br></pre></td></tr></table></figure>
<ul>
<li>alertmanager.yml</li>
</ul>
<figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="attr">global:</span></span><br><span class="line">  <span class="attr">resolve_timeout:</span> <span class="string">5m</span> <span class="comment">#处理超时时间，默认为5min</span></span><br><span class="line">  <span class="attr">smtp_smarthost:</span> <span class="string">'smtp.163.com:465'</span> <span class="comment"># 邮箱smtp服务器代理</span></span><br><span class="line">  <span class="attr">smtp_from:</span> <span class="string">'xxx@163.com'</span> <span class="comment"># 发送邮箱名称</span></span><br><span class="line">  <span class="attr">smtp_auth_username:</span> <span class="string">'xxx@163.com'</span> <span class="comment"># 邮箱名称</span></span><br><span class="line">  <span class="attr">smtp_auth_password:</span> <span class="string">'xxxxxxxx'</span> <span class="comment"># 邮箱密码或授权码</span></span><br><span class="line">  <span class="attr">wechat_api_url:</span> <span class="string">'https://qyapi.weixin.qq.com/cgi-bin/'</span> <span class="comment"># 企业微信地址</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 模板</span></span><br><span class="line"><span class="attr">templates:</span></span><br><span class="line">  <span class="bullet">-</span> <span class="string">'template/*.tmpl'</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 路由</span></span><br><span class="line"><span class="attr">route:</span></span><br><span class="line">  <span class="attr">group_by:</span> <span class="string">['alertname']</span> <span class="comment"># 报警分组依据</span></span><br><span class="line">  <span class="attr">group_wait:</span> <span class="string">10s</span> <span class="comment"># 第一次等待多久时间发送一组警报的通知</span></span><br><span class="line">  <span class="attr">group_interval:</span> <span class="string">10s</span> <span class="comment"># 在发送新警报前的等待时间</span></span><br><span class="line">  <span class="attr">repeat_interval:</span> <span class="string">1m</span> <span class="comment"># 发送重复警报的周期 对于email此项不可以设置过低</span></span><br><span class="line">  <span class="attr">receiver:</span> <span class="string">'web.hook'</span> <span class="comment"># 使用receivers中name为web.hook的报警方式</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 常用的报警通知方式有3种，webhook、email和企业微信</span></span><br><span class="line"><span class="attr">receivers:</span></span><br><span class="line"><span class="comment"># webhook方式</span></span><br><span class="line">  <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">'web.hook'</span></span><br><span class="line">    <span class="attr">webhook_configs:</span></span><br><span class="line">    <span class="comment"># 本地webhook打印报警信息。webhook方式可用于测试，或执行某些动作。</span></span><br><span class="line">    <span class="bullet">-</span> <span class="attr">url:</span> <span class="string">'http://127.0.0.1:5001/'</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 邮件方式</span></span><br><span class="line">  <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">'email'</span></span><br><span class="line">    <span class="attr">email_configs:</span></span><br><span class="line">    <span class="bullet">-</span> <span class="attr">to:</span> <span class="string">'xxx@yyy.com'</span> <span class="comment"># 收件人</span></span><br><span class="line">      <span class="attr">html:</span> <span class="string">'<span class="template-variable">&#123;&#123; template "test.html" . &#125;&#125;</span>'</span> <span class="comment"># 邮箱内容html模板</span></span><br><span class="line">      <span class="attr">headers:</span> <span class="string">&#123;</span> <span class="attr">Subject:</span> <span class="string">"[WARN] 报警邮件"</span><span class="string">&#125;</span> <span class="comment"># 邮件主题</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 企业微信方式</span></span><br><span class="line">  <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">'qywx'</span></span><br><span class="line">    <span class="attr">webhook_configs:</span></span><br><span class="line">    <span class="bullet">-</span> <span class="attr">send_resolved:</span> <span class="literal">true</span></span><br><span class="line">      <span class="attr">to_party:</span> <span class="string">'1'</span> <span class="comment"># 接收组的id</span></span><br><span class="line">      <span class="attr">agent_id:</span> <span class="string">'xxxxxx'</span> <span class="comment"># 企业微信--&gt;自定应用--&gt;AgentId</span></span><br><span class="line">      <span class="attr">corp_id:</span> <span class="string">'xxxxxx'</span> <span class="comment"># 我的企业--&gt;CorpId[在底部]</span></span><br><span class="line">      <span class="attr">api_secret:</span> <span class="string">'xxxxxx'</span> <span class="comment"># 企业微信--&gt;自定应用--&gt;Secret</span></span><br><span class="line">      <span class="attr">message:</span> <span class="string">'<span class="template-variable">&#123;&#123; template "test.html" . &#125;&#125;</span>'</span> <span class="comment"># 模板设定</span></span><br></pre></td></tr></table></figure>
<p>这里不使用docker方式运行exporter，通过下载安装包安装node_exporter和mysqld_exporter。</p>
<ul>
<li>安装、启动node_exporter</li>
</ul>
<figure class="highlight sh"><table><tr><td class="code"><pre><span class="line">wget https://github.com/prometheus/node_exporter/releases/download/v0.17.0/node_exporter-0.17.0.linux-amd64.tar.gz</span><br><span class="line">tar -xf node_exporter-0.17.0.linux-amd64.tar.gz</span><br><span class="line"><span class="built_in">cd</span> node_exporter-0.17.0.linux-amd64/</span><br><span class="line"><span class="comment"># 运行node_exporter</span></span><br><span class="line">nohup ./node_exporter &amp;</span><br><span class="line"></span><br><span class="line"><span class="comment"># 查看node_exporter监听的端口</span></span><br><span class="line">[root@zabbix02 node_exporter-0.17.0.linux-amd64]<span class="comment"># netstat -alntp |grep node_expo</span></span><br><span class="line">tcp6       0      0 :::9100                 :::*                    LISTEN      21164/./node_export </span><br><span class="line">tcp6       0      0 ::1:9100                ::1:57580               ESTABLISHED 21164/./node_export</span><br></pre></td></tr></table></figure>
<ul>
<li>安装、启动mysqld_exporter</li>
</ul>
<figure class="highlight sh"><table><tr><td class="code"><pre><span class="line">wget https://github.com/prometheus/mysqld_exporter/releases/download/v0.11.0/mysqld_exporter-0.11.0.linux-amd64.tar.gz</span><br><span class="line">tar -xf mysqld_exporter-0.11.0.linux-amd64.tar.gz</span><br><span class="line"><span class="built_in">cd</span> exporter/mysqld_exporter-0.11.0.linux-amd64/</span><br><span class="line"><span class="comment"># 本文中，被监控的mysql与prometheus server在同一个机器上</span></span><br><span class="line"><span class="comment"># 将使用mysql中创建的名为exporter的用户查询mysql指标</span></span><br><span class="line">cat &lt;&lt;EOF &gt;.my.cnf</span><br><span class="line">[client]</span><br><span class="line">user=exporter</span><br><span class="line">password=exporter</span><br><span class="line">EOF</span><br><span class="line"></span><br><span class="line"><span class="comment"># 需创建mysql exporter用户</span></span><br><span class="line">CREATE USER <span class="string">'exporter'</span>@<span class="string">'localhost'</span> IDENTIFIED BY <span class="string">'exporter'</span>;</span><br><span class="line">GRANT PROCESS, REPLICATION CLIENT, SELECT ON *.* TO <span class="string">'exporter'</span>@<span class="string">'localhost'</span>;</span><br><span class="line"><span class="comment"># flush privileges;</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 运行mysqld_exporter</span></span><br><span class="line">nohup ./mysqld_exporter --config.my-cnf=<span class="string">"./.my.cnf"</span> &amp;</span><br></pre></td></tr></table></figure>
<ul>
<li>运行prometheus</li>
</ul>
<figure class="highlight sh"><table><tr><td class="code"><pre><span class="line">docker run -d -p 9090:9090 --name prometheus --net=host \</span><br><span class="line">-v /root/config/prometheus/prometheus.yml:/etc/prometheus/prometheus.yml \</span><br><span class="line">-v /root/config/prometheus/rules.yml:/etc/prometheus/rules.yml prom/prometheus</span><br></pre></td></tr></table></figure>
<ul>
<li>运行alertmanager</li>
</ul>
<figure class="highlight sh"><table><tr><td class="code"><pre><span class="line">docker run -d -p 9093:9093 --net=host \</span><br><span class="line">-v /root/config/alertmanager/alertmanager.yml:/etc/alertmanager/config.yml \</span><br><span class="line">--name alertmanager prom/alertmanager</span><br></pre></td></tr></table></figure>
<ul>
<li>安装及配置grafana</li>
</ul>
<p>要通过grafana展示监控数据，见<a href="https://github.com/zlzgithub/docs/blob/master/grafana/grafana-intro.md" target="_blank" rel="noopener">https://github.com/zlzgithub/docs/blob/master/grafana/grafana-intro.md</a></p>
<hr>
<p>以上步骤就绪后，通过浏览器访问看看</p>
<ul>
<li>Prometheus首页</li>
</ul>
<p><a href="http://192.168.100.150:9090/graph" target="_blank" rel="noopener">http://192.168.100.150:9090/graph</a></p>
<p><img src="/assets/images2019/prometheus-intro.assets/1552624310656.png" alt="1552624310656"></p>
<ul>
<li>Alerts页面</li>
</ul>
<p><a href="http://192.168.100.150:9090/alerts" target="_blank" rel="noopener">http://192.168.100.150:9090/alerts</a>，显示了一条报警规则，说明此前的prometheus rules配置正常。</p>
<p><img src="/assets/images2019/prometheus-intro.assets/1552624418930.png" alt="1552624418930"></p>
<ul>
<li>Targets页面</li>
</ul>
<p><a href="http://192.168.100.150:9090/targets" target="_blank" rel="noopener">http://192.168.100.150:9090/targets</a>，显示了已在线的metrics。</p>
<p><img src="/assets/images2019/prometheus-intro.assets/1552624868689.png" alt="1552624868689"></p>
<ul>
<li>Alertmanager</li>
</ul>
<p><a href="http://192.168.100.150:9093/#/alerts" target="_blank" rel="noopener">http://192.168.100.150:9093/#/alerts</a></p>
<p><img src="/assets/images2019/prometheus-intro.assets/1552624949727.png" alt="1552624949727"></p>
<ul>
<li>metrics</li>
</ul>
<ol>
<li>prometheus的metrics</li>
</ol>
<p><a href="http://192.168.100.150:9090/metrics" target="_blank" rel="noopener">http://192.168.100.150:9090/metrics</a></p>
<p><img src="/assets/images2019/prometheus-intro.assets/1552625214005.png" alt="1552625214005"></p>
<ol start="2">
<li>mysql的metrics</li>
</ol>
<p><a href="http://192.168.100.150:9104/metrics" target="_blank" rel="noopener">http://192.168.100.150:9104/metrics</a></p>
<p><img src="/assets/images2019/prometheus-intro.assets/1552625272026.png" alt="1552625272026"></p>
<h3 id="功能测试"><a href="#功能测试" class="headerlink" title="功能测试"></a>功能测试</h3><hr>
<p>在Grafana中，导入Prometheus 2.0 Status仪表板，显示如下：</p>
<p><img src="/assets/images2019/prometheus-intro.assets/1552640104574.png" alt="1552640104574"></p>
<p>导入Mysql-Overview模板的显示效果：</p>
<p><img src="/assets/images2019/prometheus-intro.assets/1552642425792.png" alt="1552642425792"></p>
<p>报警测试：</p>
<figure class="highlight sh"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 先运行一个webhook，前提已安装golang</span></span><br><span class="line">go get github.com/prometheus/alertmanager/examples/webhook</span><br><span class="line">webhook</span><br><span class="line"></span><br><span class="line"><span class="comment"># 另开一个窗口，人为拉高CPU使用率，观察webhook打印的日志</span></span><br><span class="line">cat /dev/zero &gt;/dev/null</span><br><span class="line"></span><br><span class="line"><span class="comment"># 测试完之后，[ctrl]+[c]终止</span></span><br></pre></td></tr></table></figure>
<p>alertmanager webhook在控制台输出的日志：</p>
<figure class="highlight tex"><table><tr><td class="code"><pre><span class="line">[root@VM_0_2_centos alertmanager]# webhook</span><br><span class="line">2019/03/15 10:49:32 &#123;</span><br><span class="line"> &gt;  "receiver": "web<span class="tag">\<span class="name">\</span></span>.hook",</span><br><span class="line"> &gt;  "status": "firing",</span><br><span class="line"> &gt;  "alerts": [</span><br><span class="line"> &gt;    &#123;</span><br><span class="line"> &gt;      "status": "firing",</span><br><span class="line"> &gt;      "labels": &#123;</span><br><span class="line"> &gt;        "alertname": "hostCpuUsageAlert",</span><br><span class="line"> &gt;        "instance": "cvm001",</span><br><span class="line"> &gt;        "monitor": "codelab_monitor",</span><br><span class="line"> &gt;        "severity": "page"</span><br><span class="line"> &gt;      &#125;,</span><br><span class="line"> &gt;      "annotations": &#123;</span><br><span class="line"> &gt;        "description": "cvm001 CPU usage above 20<span class="comment">% (current value: 99.80000000001382)",</span></span><br><span class="line"> &gt;        "summary": "Instance cvm001 CPU usgae high"</span><br><span class="line"> &gt;      &#125;,</span><br><span class="line"> &gt;      "startsAt": "2019-03-15T02:49:22.839636267Z",</span><br><span class="line"> &gt;      "endsAt": "0001-01-01T00:00:00Z",</span><br><span class="line"> &gt;      "generatorURL": "http://VM_0_2_centos:9090/graph?g0.expr=sum+by<span class="comment">%28instance%29+%28avg+without%28cpu%29+%28irate%28node_cpu_seconds_total%7Bmode%21%3D%22idle%22%7D%5B5m%5D%29%29%29+%2A+100+%3E+20\u0026g0.tab=1"</span></span><br><span class="line"> &gt;    &#125;</span><br><span class="line"> &gt;  ],</span><br><span class="line"> &gt;  "groupLabels": &#123;</span><br><span class="line"> &gt;    "alertname": "hostCpuUsageAlert"</span><br><span class="line"> &gt;  &#125;,</span><br><span class="line"> &gt;  "commonLabels": &#123;</span><br><span class="line"> &gt;    "alertname": "hostCpuUsageAlert",</span><br><span class="line"> &gt;    "instance": "cvm001",</span><br><span class="line"> &gt;    "monitor": "codelab_monitor",</span><br><span class="line"> &gt;    "severity": "page"</span><br><span class="line"> &gt;  &#125;,</span><br><span class="line"> &gt;  "commonAnnotations": &#123;</span><br><span class="line"> &gt;    "description": "cvm001 CPU usage above 20<span class="comment">% (current value: 99.80000000001382)",</span></span><br><span class="line"> &gt;    "summary": "Instance cvm001 CPU usgae high"</span><br><span class="line"> &gt;  &#125;,</span><br><span class="line"> &gt;  "externalURL": "http://VM_0_2_centos:9093",</span><br><span class="line"> &gt;  "version": "4",</span><br><span class="line"> &gt;  "groupKey": "&#123;&#125;:&#123;alertname=<span class="tag">\<span class="name">"</span></span>hostCpuUsageAlert<span class="tag">\<span class="name">"</span></span>&#125;"</span><br><span class="line"> &gt;&#125;</span><br><span class="line"></span><br><span class="line">2019/03/15 10:52:52 &#123;</span><br><span class="line"> &gt;  "receiver": "web<span class="tag">\<span class="name">\</span></span>.hook",</span><br><span class="line"> &gt;  "status": "resolved",</span><br><span class="line"> &gt;  "alerts": [</span><br><span class="line"> &gt;    &#123;</span><br><span class="line"> &gt;      "status": "resolved",</span><br><span class="line"> &gt;      "labels": &#123;</span><br><span class="line"> &gt;        "alertname": "hostCpuUsageAlert",</span><br><span class="line"> &gt;        "instance": "cvm001",</span><br><span class="line"> &gt;        "monitor": "codelab_monitor",</span><br><span class="line"> &gt;        "severity": "page"</span><br><span class="line"> &gt;      &#125;,</span><br><span class="line"> &gt;      "annotations": &#123;</span><br><span class="line"> &gt;        "description": "cvm001 CPU usage above 20<span class="comment">% (current value: 99.79999999999563)",</span></span><br><span class="line"> &gt;        "summary": "Instance cvm001 CPU usgae high"</span><br><span class="line"> &gt;      &#125;,</span><br><span class="line"> &gt;      "startsAt": "2019-03-15T02:49:22.839636267Z",</span><br><span class="line"> &gt;      "endsAt": "2019-03-15T02:52:52.839636267Z",</span><br><span class="line"> &gt;      "generatorURL": "http://VM_0_2_centos:9090/graph?g0.expr=sum+by<span class="comment">%28instance%29+%28avg+without%28cpu%29+%28irate%28node_cpu_seconds_total%7Bmode%21%3D%22idle%22%7D%5B5m%5D%29%29%29+%2A+100+%3E+20\u0026g0.tab=1"</span></span><br><span class="line"> &gt;    &#125;</span><br><span class="line"> &gt;  ],</span><br><span class="line"> &gt;  "groupLabels": &#123;</span><br><span class="line"> &gt;    "alertname": "hostCpuUsageAlert"</span><br><span class="line"> &gt;  &#125;,</span><br><span class="line"> &gt;  "commonLabels": &#123;</span><br><span class="line"> &gt;    "alertname": "hostCpuUsageAlert",</span><br><span class="line"> &gt;    "instance": "cvm001",</span><br><span class="line"> &gt;    "monitor": "codelab_monitor",</span><br><span class="line"> &gt;    "severity": "page"</span><br><span class="line"> &gt;  &#125;,</span><br><span class="line"> &gt;  "commonAnnotations": &#123;</span><br><span class="line"> &gt;    "description": "cvm001 CPU usage above 20<span class="comment">% (current value: 99.79999999999563)",</span></span><br><span class="line"> &gt;    "summary": "Instance cvm001 CPU usgae high"</span><br><span class="line"> &gt;  &#125;,</span><br><span class="line"> &gt;  "externalURL": "http://VM_0_2_centos:9093",</span><br><span class="line"> &gt;  "version": "4",</span><br><span class="line"> &gt;  "groupKey": "&#123;&#125;:&#123;alertname=<span class="tag">\<span class="name">"</span></span>hostCpuUsageAlert<span class="tag">\<span class="name">"</span></span>&#125;"</span><br><span class="line"> &gt;&#125;</span><br></pre></td></tr></table></figure>
<p>当CPU使用率高于20%时，Prometheus Alerts页面的报警状态先后变化顺序：in active -&gt; pending -&gt; firing；恢复后，日志显示resolved。</p>
<p>在报警项resolved之前，Alertmanager页面：</p>
<p><img src="/assets/images2019/prometheus-intro.assets/1552620299332.png" alt="1552620299332"></p>
<p>通过测试可以看出，webhook方式发出通知是正常的。未测试email和企业微信。</p>
<hr>
<p>(End)</p>
]]></content>
      <categories>
        <category>监控</category>
      </categories>
      <tags>
        <tag>Prometheus</tag>
      </tags>
  </entry>
  <entry>
    <title>Prometheus自动发现配置</title>
    <url>/pages/monitoring/prometheus/prometheus-discovery/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\pages\assets\css\APlayer.min.css"><script src="\pages\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><hr>
<blockquote>
<p>Prometheus支持基于Consul自动发现</p>
</blockquote>
<a id="more"></a>
<p>prometheus.yml:</p>
<figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="attr">global:</span></span><br><span class="line">  <span class="attr">scrape_interval:</span>     <span class="string">1s</span></span><br><span class="line">  <span class="attr">scrape_timeout:</span>      <span class="string">1s</span></span><br><span class="line">  <span class="attr">evaluation_interval:</span> <span class="string">5s</span></span><br><span class="line"></span><br><span class="line"><span class="attr">alerting:</span></span><br><span class="line">  <span class="attr">alertmanagers:</span></span><br><span class="line">  <span class="bullet">-</span> <span class="attr">static_configs:</span></span><br><span class="line">    <span class="bullet">-</span> <span class="attr">targets:</span> <span class="string">['10.1.7.211:9093']</span></span><br><span class="line"></span><br><span class="line"><span class="attr">rule_files:</span></span><br><span class="line">  <span class="bullet">-</span> <span class="string">'rules/*.yml'</span></span><br><span class="line"> </span><br><span class="line"><span class="attr">scrape_configs:</span></span><br><span class="line">  <span class="bullet">-</span> <span class="attr">job_name:</span> <span class="string">prometheus</span></span><br><span class="line">    <span class="attr">metrics_path:</span> <span class="string">/metrics</span></span><br><span class="line">    <span class="attr">static_configs:</span></span><br><span class="line">    <span class="bullet">-</span> <span class="attr">targets:</span> <span class="string">['localhost:9090']</span></span><br><span class="line">      <span class="attr">labels:</span></span><br><span class="line">        <span class="attr">instance:</span> <span class="string">prometheus</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">  <span class="bullet">-</span> <span class="attr">job_name:</span> <span class="string">consul_sd</span></span><br><span class="line">    <span class="attr">consul_sd_configs:</span></span><br><span class="line">    <span class="bullet">-</span> <span class="attr">server:</span> <span class="string">'192.168.100.140:8500'</span></span><br><span class="line">      <span class="attr">datacenter:</span> <span class="string">dc01</span></span><br><span class="line">      <span class="attr">services:</span> <span class="string">[]</span></span><br><span class="line"></span><br><span class="line">    <span class="attr">relabel_configs:</span></span><br><span class="line">    <span class="bullet">-</span> <span class="attr">source_labels:</span> <span class="string">[__meta_consul_tags]</span></span><br><span class="line">      <span class="attr">regex:</span> <span class="string">'.*,prometheus-target,.*'</span></span><br><span class="line">      <span class="attr">action:</span> <span class="string">keep</span></span><br><span class="line"></span><br><span class="line">    <span class="bullet">-</span> <span class="attr">source_labels:</span> <span class="string">[__meta_consul_service]</span></span><br><span class="line">      <span class="attr">target_label:</span> <span class="string">sn</span></span><br><span class="line"></span><br><span class="line">  <span class="bullet">-</span> <span class="attr">job_name:</span> <span class="string">consul_sd_dev</span></span><br><span class="line">    <span class="attr">consul_sd_configs:</span></span><br><span class="line">    <span class="bullet">-</span> <span class="attr">server:</span> <span class="string">'10.1.7.211:8500'</span></span><br><span class="line">      <span class="attr">datacenter:</span> <span class="string">dc1</span></span><br><span class="line">      <span class="attr">services:</span> <span class="string">[]</span></span><br><span class="line"></span><br><span class="line">    <span class="attr">relabel_configs:</span></span><br><span class="line">    <span class="bullet">-</span> <span class="attr">source_labels:</span> <span class="string">[__meta_consul_tags]</span></span><br><span class="line">      <span class="attr">regex:</span> <span class="string">'.*prometheus-target.*'</span></span><br><span class="line">      <span class="attr">action:</span> <span class="string">keep</span></span><br><span class="line"></span><br><span class="line">    <span class="bullet">-</span> <span class="attr">source_labels:</span> <span class="string">['__address__']</span></span><br><span class="line"><span class="comment">#      regex: '.*:(.*)'</span></span><br><span class="line">      <span class="attr">regex:</span> <span class="string">'127.0.0.1:(.*)'</span></span><br><span class="line">      <span class="attr">target_label:</span> <span class="string">'__address__'</span></span><br><span class="line">      <span class="attr">replacement:</span> <span class="string">'10.1.7.211:$1'</span></span><br></pre></td></tr></table></figure>
]]></content>
      <categories>
        <category>监控</category>
      </categories>
      <tags>
        <tag>Prometheus</tag>
      </tags>
  </entry>
  <entry>
    <title>Prometheus</title>
    <url>/pages/monitoring/prometheus/prometheus/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\pages\assets\css\APlayer.min.css"><script src="\pages\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><hr>
<blockquote>
<p>在Docker中运行Prometheus监控组件，包括prometheus, alertmanager, grafana, 及相关exporter，实现基本的业务监控。</p>
</blockquote>
<a id="more"></a>
<p>下图是官方网站上的Prometheus完整架构图：</p>
<p><img src="https://prometheus.io/assets/architecture.png" alt="Prometheus完整架构图"></p>
<hr>
<h2 id="Prometheus配置"><a href="#Prometheus配置" class="headerlink" title="Prometheus配置"></a>Prometheus配置</h2><p>配置文件目录：</p>
<figure class="highlight sh"><table><tr><td class="code"><pre><span class="line">[root@docker-dev docker-svc]<span class="comment"># tree -C -L 4 prometheus/</span></span><br><span class="line">prometheus/</span><br><span class="line">├── config</span><br><span class="line">│   ├── alertmanager</span><br><span class="line">│   │   ├── alertmanager.yml</span><br><span class="line">│   │   └── template</span><br><span class="line">│   │       └── test.tmpl</span><br><span class="line">│   └── prometheus</span><br><span class="line">│       ├── prometheus.yml</span><br><span class="line">│       └── rules</span><br><span class="line">│           └── default.yml</span><br><span class="line">└── docker-compose.yml</span><br></pre></td></tr></table></figure>
<p>docker-compose.yml:</p>
<figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="attr">version:</span> <span class="string">'3.0'</span></span><br><span class="line"></span><br><span class="line"><span class="attr">services:</span></span><br><span class="line">  <span class="attr">alertmanager:</span></span><br><span class="line">    <span class="attr">image:</span> <span class="string">prom/alertmanager</span></span><br><span class="line">    <span class="attr">volumes:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">./config/alertmanager:/etc/alertmanager</span></span><br><span class="line">    <span class="attr">ports:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">"9093:9093"</span></span><br><span class="line">    <span class="attr">environment:</span></span><br><span class="line">      <span class="attr">SERVICE_NAME:</span> <span class="string">alertmanager</span></span><br><span class="line">      <span class="attr">SERVICE_TAGS:</span> <span class="string">"alertmanager,http"</span></span><br><span class="line"></span><br><span class="line">  <span class="attr">prometheus:</span></span><br><span class="line">    <span class="attr">image:</span> <span class="string">prom/prometheus</span></span><br><span class="line">    <span class="attr">volumes:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">./config/prometheus/prometheus.yml:/etc/prometheus/prometheus.yml</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">./config/prometheus/rules:/etc/prometheus/rules</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">/etc/localtime:/etc/localtime</span></span><br><span class="line">    <span class="attr">environment:</span></span><br><span class="line">      <span class="attr">SERVICE_NAME:</span> <span class="string">prometheus</span></span><br><span class="line">      <span class="attr">SERVICE_TAGS:</span> <span class="string">"prometheus-target,prometheus,http"</span></span><br><span class="line">    <span class="attr">ports:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="number">9090</span><span class="string">:9090</span></span><br><span class="line"></span><br><span class="line">  <span class="attr">grafana:</span></span><br><span class="line">    <span class="attr">image:</span> <span class="string">grafana/grafana</span></span><br><span class="line">    <span class="attr">volumes:</span></span><br><span class="line"><span class="comment">#      - grafana-storage:/var/lib/grafana</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">/data/grafana:/var/lib/grafana</span></span><br><span class="line">    </span><br><span class="line">    <span class="attr">environment:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">"GF_SERVER_ROOT_URL=http://grafana.server.name"</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">"GF_SECURITY_ADMIN_PASSWORD=xxxxxx"</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">"SERVICE_NAME=grafana"</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">"SERVICE_TAGS=prometheus-target,grafana,http"</span></span><br><span class="line">    <span class="attr">ports:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="number">3000</span><span class="string">:3000</span></span><br><span class="line"></span><br><span class="line">  <span class="attr">node-exporter:</span></span><br><span class="line">    <span class="attr">image:</span> <span class="string">prom/node-exporter</span></span><br><span class="line">    <span class="attr">volumes:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">/proc:/host/proc:ro</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">/sys:/host/sys:ro</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">/:/rootfs:ro</span></span><br><span class="line">    <span class="attr">network_mode:</span> <span class="string">host</span></span><br><span class="line">    <span class="attr">ports:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="number">9100</span><span class="string">:9100</span></span><br><span class="line">    <span class="attr">environment:</span></span><br><span class="line">      <span class="attr">SERVICE_TAGS:</span> <span class="string">"prometheus-target"</span></span><br><span class="line">    <span class="attr">command:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">'--path.procfs=/host/proc'</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">'--path.sysfs=/host/sys'</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">'--collector.filesystem.ignored-mount-points="^(/rootfs|/host|)/(sys|proc|dev|host|etc)($$|/)"'</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">'--collector.filesystem.ignored-fs-types="^(sys|proc|auto|cgroup|devpts|ns|au|fuse\.lxc|mqueue)(fs|)$$"'</span></span><br></pre></td></tr></table></figure>
]]></content>
      <categories>
        <category>监控</category>
      </categories>
      <tags>
        <tag>Prometheus</tag>
      </tags>
  </entry>
  <entry>
    <title>Prometheus联邦</title>
    <url>/pages/monitoring/prometheus/prometheus_federate/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\pages\assets\css\APlayer.min.css"><script src="\pages\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><hr>
<blockquote>
<p>Prometheus联邦</p>
</blockquote>
<a id="more"></a>
<p>prometheus.yml示例：</p>
<figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="attr">global:</span></span><br><span class="line">  <span class="attr">scrape_interval:</span> <span class="string">15s</span></span><br><span class="line">  <span class="attr">scrape_timeout:</span> <span class="string">10s</span></span><br><span class="line">  <span class="attr">evaluation_interval:</span> <span class="string">1m</span></span><br><span class="line"><span class="attr">alerting:</span></span><br><span class="line">  <span class="attr">alertmanagers:</span></span><br><span class="line">  <span class="bullet">-</span> <span class="attr">static_configs:</span></span><br><span class="line">    <span class="bullet">-</span> <span class="attr">targets:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">x.xx.xxx.xxx:9093</span></span><br><span class="line">    <span class="attr">scheme:</span> <span class="string">http</span></span><br><span class="line">    <span class="attr">timeout:</span> <span class="string">10s</span></span><br><span class="line"><span class="attr">rule_files:</span></span><br><span class="line"><span class="bullet">-</span> <span class="string">/etc/prometheus/rules/*.yml</span></span><br><span class="line"></span><br><span class="line"><span class="attr">scrape_configs:</span></span><br><span class="line"><span class="bullet">-</span> <span class="attr">job_name:</span> <span class="string">federate</span></span><br><span class="line">  <span class="attr">honor_labels:</span> <span class="literal">true</span></span><br><span class="line">  <span class="attr">params:</span></span><br><span class="line">    <span class="string">match[]:</span></span><br><span class="line">    <span class="bullet">-</span> <span class="string">'&#123;job=~"\\w.*"&#125;'</span></span><br><span class="line">    <span class="comment">#- '&#123;job=~"[a-zA-Z_].*"&#125;'</span></span><br><span class="line">  <span class="attr">metrics_path:</span> <span class="string">/federate</span></span><br><span class="line">  <span class="attr">scheme:</span> <span class="string">http</span></span><br><span class="line">  <span class="attr">static_configs:</span></span><br><span class="line">  <span class="bullet">-</span> <span class="attr">targets:</span></span><br><span class="line">    <span class="bullet">-</span> <span class="string">x.xx.xxx.xxx:9090</span></span><br><span class="line">	</span><br><span class="line"><span class="bullet">-</span> <span class="attr">job_name:</span> <span class="string">federate2</span></span><br><span class="line">  <span class="attr">honor_labels:</span> <span class="literal">true</span></span><br><span class="line">  <span class="attr">params:</span></span><br><span class="line">    <span class="string">match[]:</span></span><br><span class="line">    <span class="bullet">-</span> <span class="string">'&#123;job=~"\\w.*"&#125;'</span></span><br><span class="line">  <span class="attr">scrape_interval:</span> <span class="string">30s</span></span><br><span class="line">  <span class="attr">scrape_timeout:</span> <span class="string">30s</span></span><br><span class="line">  <span class="attr">metrics_path:</span> <span class="string">/federate</span></span><br><span class="line">  <span class="attr">scheme:</span> <span class="string">http</span></span><br><span class="line">  <span class="attr">static_configs:</span></span><br><span class="line">  <span class="bullet">-</span> <span class="attr">targets:</span></span><br><span class="line">    <span class="bullet">-</span> <span class="string">x.xx.xxx.xxx:xxxx</span></span><br><span class="line"></span><br><span class="line"><span class="bullet">-</span> <span class="attr">job_name:</span> <span class="string">federate_pmm_server</span></span><br><span class="line">  <span class="attr">scrape_interval:</span> <span class="string">30s</span></span><br><span class="line">  <span class="attr">scrape_timeout:</span>  <span class="string">30s</span></span><br><span class="line">  <span class="attr">honor_labels:</span> <span class="literal">true</span></span><br><span class="line">  <span class="attr">metrics_path:</span> <span class="string">/prometheus/federate</span></span><br><span class="line">  <span class="attr">basic_auth:</span></span><br><span class="line">    <span class="attr">username:</span> <span class="string">"xxx"</span></span><br><span class="line">    <span class="attr">password:</span> <span class="string">"xxx"</span></span><br><span class="line">  <span class="attr">params:</span></span><br><span class="line">    <span class="string">match[]:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">'&#123;job=~"\\w.*"&#125;'</span></span><br><span class="line">  <span class="attr">static_configs:</span></span><br><span class="line">    <span class="bullet">-</span> <span class="attr">targets:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">x.xx.xxx.xxx:xxxx</span></span><br></pre></td></tr></table></figure>]]></content>
      <categories>
        <category>监控</category>
      </categories>
      <tags>
        <tag>Prometheus</tag>
      </tags>
  </entry>
  <entry>
    <title>Ansible使用小结</title>
    <url>/pages/config-management/ansible-intro/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\pages\assets\css\APlayer.min.css"><script src="\pages\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><hr>
<h3 id="概述"><a href="#概述" class="headerlink" title="概述"></a>概述</h3><p><img src="/assets/images2019/ansible-intro.assets/1550564146145.png" alt="Ansible官网"></p>
<p>​    正如<a href="https://www.ansible.com/" target="_blank" rel="noopener">Ansible官网</a>的标题“Ansible is Simple IT Automation”含义，Ansible简化了IT自动化的实现，是高效运维的一个重要工具。</p>
<p>​    Ansible的设计初衷就是在若干服务器上从零开始执行所有必需的配置与操作。例如，在启动Web 服务器之前先启动数据库，或者为了实现零停机升级，将Web 服务器逐一从负载均衡上摘除并升级。Ansible通过极简的模型来控制各种操作按照所需顺序执行。其它同类工具有：Chef、Puppet 及Saltstack。</p>
<a id="more"></a>
<h4 id="Ansible的主要特点"><a href="#Ansible的主要特点" class="headerlink" title="Ansible的主要特点"></a>Ansible的主要特点</h4><ul>
<li>基于Python语言实现，由Paramiko（Python的一个可并发连接ssh主机功能库），PyYAML和Jinja2（模板化）三个关键模块实现</li>
<li>模块化设计，ansible自身是一个核心组件，调用特定的模块来完成特定任务</li>
<li>基于SSH协议工作，免客户端，有两种认证方式：密码、公钥</li>
<li>使用yaml语言编排剧本，连续任务按先后设置顺序完成</li>
<li>是一个<strong>声明式</strong>的管理工具，在编写脚本时使用的是声明式语言</li>
</ul>
<figure class="highlight tex"><table><tr><td class="code"><pre><span class="line">声明式语言表示“期望目标是什么状态”，如果已经是则返回"ok"，否则改变目标状态并返回"changed"。</span><br></pre></td></tr></table></figure>
<ul>
<li>具有<strong>幂等性</strong>的特点，执行一次或多次，安装出来的环境是一样的</li>
</ul>
<figure class="highlight tex"><table><tr><td class="code"><pre><span class="line">HTTP/1.1中对“幂等性”的定义是：一次和多次请求某一个资源对于资源本身应该具有同样的结果（网络超时等问题除外）。</span><br><span class="line">也就是说，其任意多次执行对资源本身所产生的影响均与一次执行的影响相同。</span><br></pre></td></tr></table></figure>
<h4 id="Ansible架构图"><a href="#Ansible架构图" class="headerlink" title="Ansible架构图"></a>Ansible架构图</h4><p><img src="/assets/images2019/ansible-intro.assets/201621695411869.png" alt="Ansible架构图"></p>
<table>
<thead>
<tr>
<th style="text-align:left">组件</th>
<th>功能</th>
</tr>
</thead>
<tbody>
<tr>
<td style="text-align:left">ansible core</td>
<td>ansible自身核心模块</td>
</tr>
<tr>
<td style="text-align:left">host inventory</td>
<td>主机清单，定义可管控的主机列表</td>
</tr>
<tr>
<td style="text-align:left">connection plugins</td>
<td>连接插件，一般默认基于ssh协议连接</td>
</tr>
<tr>
<td style="text-align:left">modules</td>
<td>core modules（自带的核心模块）、custom modules（自定义模块）</td>
</tr>
<tr>
<td style="text-align:left">playbooks</td>
<td>剧本，按照所设定编排的顺序执行命令</td>
</tr>
</tbody>
</table>
<h4 id="适用场景"><a href="#适用场景" class="headerlink" title="适用场景"></a>适用场景</h4><p>​    在自动化运维方面，关于Ansible适用场景，，可以从与同类工具Saltstack对比的角度来理解。</p>
<p><strong>共同点</strong>：</p>
<ul>
<li><p>Ansible和SaltStack都是的目前最流行的自动化运维工具，能满足企业IT系统的自动化运维管理。这两个工具都是用python开发的，可以部署到不同的系统环境中和具有良好的二次开发特性。</p>
</li>
<li><p>在执行的命令的时候，Ansible和SaltStack都支持Ad-hoc操作模式，也可以支持将命令写入yaml格式文件中再批量执行。</p>
</li>
<li><p>在处理返回结果方面，Ansible和SaltStack的返回结果格式都是JSON格式，比较易懂和方便解析。</p>
</li>
</ul>
<p><strong>差异</strong>：</p>
<ul>
<li><p>响应速度：SaltStack更快，在文件传输方面快一个量级，但在批量脚本执行、多机器部署方面相近</p>
<p>  SaltStack的master和minion主机是通过ZeroMQ传输数据，而Ansible是通过标准SSH进行数据传输，SaltStack的响应速度要比Ansible快很多。标准SSH连接的时候比较耗费时间，ZeroMQ传输的速度会快很多，所以单单从响应速度方面考虑SaltStack会是更好的选择。但是在一般的运维场景下Ansible的响应速度也可以满足需求。<br>  有测试数据表明，在执行命令、分发文件、读取文件方面，SaltStack的响应速度是Ansible的10倍左右。但在批量脚本执行、多机器部署方面，二者速度相当。</p>
</li>
<li><p>安全性：Ansible更安全</p>
<p>  Ansible使用标准SSH连接传输数据，不需要在远程主机上启动守护进程，并且标准SSH数据传输本身就是加密传输，这样远程主机不容易被攻击。</p>
</li>
<li><p>自身运维：Ansible更友好</p>
<p>  Ansible和远端主机之间的通过标准SSH通信，远程主机上只需要运行SSH进程就可以进行运维操作，而SSH是机房主机中一般都安装和启动的进程，所以Ansible对机房运维不会增加过多的运维成本。</p>
</li>
</ul>
<p>​    综合以上，可以认为1000台以内的服务器自动化运维，使用Ansible做配置管理、应用部署、批量脚本执行等工作无需顾虑太多。</p>
<hr>
<h3 id="基本知识"><a href="#基本知识" class="headerlink" title="基本知识"></a>基本知识</h3><h4 id="常用模块"><a href="#常用模块" class="headerlink" title="常用模块"></a>常用模块</h4><p>​    Ansible的常用模块主要有以下十来个：</p>
<table>
<thead>
<tr>
<th>模块名称</th>
<th>功能</th>
</tr>
</thead>
<tbody>
<tr>
<td>ping</td>
<td>尝试连接主机，如果测试成功会返回”pong”</td>
</tr>
<tr>
<td>command</td>
<td>在远程节点执行命令</td>
</tr>
<tr>
<td>yum</td>
<td>使用yum软件包管理工具管理软件包</td>
</tr>
<tr>
<td>shell</td>
<td>和command模块类似，执行命令，支持变量等符号</td>
</tr>
<tr>
<td>cron</td>
<td>管理定时任务</td>
</tr>
<tr>
<td>service</td>
<td>管理程序服务</td>
</tr>
<tr>
<td>file</td>
<td>设置文件属性</td>
</tr>
<tr>
<td>copy</td>
<td>复制本地文件到远程主机</td>
</tr>
<tr>
<td>script</td>
<td>传送本地的一个脚本并在远程主机上执行</td>
</tr>
<tr>
<td>setup</td>
<td>获取远程主机的参数信息</td>
</tr>
<tr>
<td>user</td>
<td>管理用户账户</td>
</tr>
<tr>
<td>group</td>
<td>添加或者删除用户组</td>
</tr>
<tr>
<td>…</td>
<td>…</td>
</tr>
</tbody>
</table>
<h4 id="配置文件"><a href="#配置文件" class="headerlink" title="配置文件"></a>配置文件</h4><p>​    Ansible配置是以ini格式存储数据的，在Ansible中，几乎所有配置都可以通过Playbook或环境变量来重新赋值。加载配置文件的优先顺序如下：</p>
<ul>
<li><p>ANSIBLE_CONFIG：优先查找环境变量ANSIBLE_CONFIG指向的配置文件</p>
</li>
<li><p>./ansible.cfg：当前目录下的ansible.cfg配置文件</p>
</li>
<li><p>~/.ansible.cfg：当前用户home目录下的.ansible.cfg配置文件</p>
</li>
<li><p>/etc/ansible/ansible.cfg：安装ansible生成的默认配置文件</p>
<p>Ansible按顺序查找并应用最先找到的ansible配置。ansible.cfg中的配置可被playbook中的自定义配置覆盖</p>
</li>
</ul>
<p>常用的配置参数：</p>
<table>
<thead>
<tr>
<th>配置项</th>
<th>含义</th>
</tr>
</thead>
<tbody>
<tr>
<td>inventory</td>
<td>资源清单文件，就是一些Ansible需要连接管理的主机列表</td>
</tr>
<tr>
<td>library</td>
<td>Ansible模块的安装目录</td>
</tr>
<tr>
<td>forks</td>
<td>默认并发进程数5，可根据控制主机的性能和被管理节点的数量调整</td>
</tr>
<tr>
<td>sudo_user</td>
<td>执行命令的用户，可在playbook中重新设置</td>
</tr>
<tr>
<td>remote_port</td>
<td>SSH连接端口一般是22，如有个别特殊的，可在inventory中单独指定</td>
</tr>
<tr>
<td>host_key_checking</td>
<td>是否检查公钥，一般设置为false</td>
</tr>
<tr>
<td>timeout</td>
<td>SSH连接的超时间隔，默认20s</td>
</tr>
<tr>
<td>log_path</td>
<td>ansible日志路径</td>
</tr>
<tr>
<td>…</td>
<td>…</td>
</tr>
</tbody>
</table>
<h4 id="执行过程"><a href="#执行过程" class="headerlink" title="执行过程"></a>执行过程</h4><ul>
<li>加载自己的配置文件，默认<code>/etc/ansible/ansible.cfg</code></li>
<li>查找对应的主机配置文件，找到要执行的主机或者组</li>
<li>加载自己对应的模块文件，如 command</li>
<li>通过ansible将模块或命令生成对应的临时py文件(python脚本)， 并将该文件传输至远程服务器</li>
<li>对应执行用户的家目录的<code>.ansible/tmp/XXX/XXX.PY</code>文件</li>
<li>给文件 +x 执行权限</li>
<li>执行并返回结果</li>
<li>删除临时py文件，<code>sleep 0</code>退出</li>
</ul>
<h4 id="剧本（Playbook）"><a href="#剧本（Playbook）" class="headerlink" title="剧本（Playbook）"></a>剧本（Playbook）</h4><p><strong>playbook的构成</strong>：</p>
<ul>
<li>Target section：定义将要执行 playbook 的远程主机组</li>
<li>Variable section：定义 playbook 运行时需要使用的变量</li>
<li>Task section：定义将要在远程主机上执行的任务列表</li>
<li>Handler section：定义 task 执行完成以后需要调用的任务</li>
</ul>
<p>一般所需的<strong>目录层</strong>：</p>
<ul>
<li>vars：变量层</li>
<li>tasks：任务层</li>
<li>handlers：触发条件</li>
<li>files：文件</li>
<li>template：模板</li>
</ul>
<h3 id="安装方法"><a href="#安装方法" class="headerlink" title="安装方法"></a>安装方法</h3><p>​    以root用户安装ansible为例，方式如下：</p>
<h4 id="1-从Github获取源码安装"><a href="#1-从Github获取源码安装" class="headerlink" title="1. 从Github获取源码安装"></a>1. 从Github获取源码安装</h4><p>​    需预先安装好Python2.5以上版本。另外，对于Ansible，Windows系统不可以做控制主机。如果控制主机没有预装Python，从<a href="https://www.python.org/download/releases/" target="_blank" rel="noopener">Python官网</a>选择<a href="https://www.python.org/ftp/python/2.7.15/Python-2.7.15.tgz" target="_blank" rel="noopener">2.7.15版本的源码包</a>，解压到控制主机执行安装即可。</p>
<p>安装过Python环境之后，更新以下模块：</p>
<figure class="highlight sh"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 安装python的包管理工具pip</span></span><br><span class="line">[root@VM_0_6_centos ~]<span class="comment"># easy_install pip</span></span><br><span class="line"><span class="comment"># 通过pip安装ansible必需的若干python模块</span></span><br><span class="line">[root@VM_0_6_centos ~]<span class="comment"># pip install paramiko PyYAML Jinja2 httplib2 six</span></span><br></pre></td></tr></table></figure>
<p>下载、安装ansible</p>
<figure class="highlight sh"><table><tr><td class="code"><pre><span class="line">git <span class="built_in">clone</span> git://github.com/ansible/ansible.git --recursive</span><br><span class="line"><span class="built_in">cd</span> ./ansible</span><br><span class="line"><span class="comment"># Bash命令</span></span><br><span class="line"><span class="built_in">source</span> ./hacking/env-setup</span><br></pre></td></tr></table></figure>
<h4 id="2-Yum安装"><a href="#2-Yum安装" class="headerlink" title="2. Yum安装"></a>2. Yum安装</h4><p>Fedora 用户可直接安装Ansible，但RHEL或CentOS用户，需要 <a href="http://fedoraproject.org/wiki/EPEL" target="_blank" rel="noopener">配置 EPEL</a>。</p>
<p>更新EPEL源</p>
<figure class="highlight sh"><table><tr><td class="code"><pre><span class="line"><span class="comment"># rpm方式安装EPEL源</span></span><br><span class="line">rpm -Uvh https://dl.fedoraproject.org/pub/epel/epel-release-latest-7.noarch.rpm</span><br><span class="line"><span class="comment"># 或者从阿里镜像源获取</span></span><br><span class="line">wget -O /etc/yum.repos.d/epel.repo http://mirrors.aliyun.com/repo/epel-7.repo</span><br></pre></td></tr></table></figure>
<p>然后更新一下缓存</p>
<figure class="highlight sh"><table><tr><td class="code"><pre><span class="line">[root@VM_0_6_centos ~]<span class="comment"># yum clean all</span></span><br><span class="line">[root@VM_0_6_centos ~]<span class="comment"># yum makecache</span></span><br></pre></td></tr></table></figure>
<p>安装ansible</p>
<figure class="highlight sh"><table><tr><td class="code"><pre><span class="line">[root@VM_0_6_centos ~]<span class="comment"># yum install ansible -y</span></span><br></pre></td></tr></table></figure>
<h4 id="3-其它系统安装Ansible"><a href="#3-其它系统安装Ansible" class="headerlink" title="3. 其它系统安装Ansible"></a>3. 其它系统安装Ansible</h4><p>​    其它操作系统，详见<a href="http://www.ansible.com.cn/docs/intro_installation.html" target="_blank" rel="noopener">Ansible安装方法</a>。</p>
<h3 id="操作示例"><a href="#操作示例" class="headerlink" title="操作示例"></a>操作示例</h3><p>​    我们主要使用ansible和ansible-playbook这两个命令。批量执行简单命令时，使用ansible；执行更复杂的批量安装部署时用ansible-playbook。以下是我在云主机上使用ansible的三个示例：</p>
<p>个人云主机主机环境如下：</p>
<figure class="highlight sh"><table><tr><td class="code"><pre><span class="line">[root@VM_0_7_centos ~]<span class="comment"># cat /etc/redhat-release                                </span></span><br><span class="line">CentOS Linux release 7.3.1611 (Core) </span><br><span class="line">[root@VM_0_7_centos ~]<span class="comment"># df -h</span></span><br><span class="line">Filesystem      Size  Used Avail Use% Mounted on</span><br><span class="line">/dev/vda1        50G  6.8G   40G  15% /</span><br><span class="line">devtmpfs        911M     0  911M   0% /dev</span><br><span class="line">tmpfs           920M   24K  920M   1% /dev/shm</span><br><span class="line">tmpfs           920M  436K  920M   1% /run</span><br><span class="line">tmpfs           920M     0  920M   0% /sys/fs/cgroup</span><br><span class="line">tmpfs           184M     0  184M   0% /run/user/0</span><br><span class="line">tmpfs           184M     0  184M   0% /run/user/1000</span><br></pre></td></tr></table></figure>
<h4 id="使用ansible"><a href="#使用ansible" class="headerlink" title="使用ansible"></a>使用ansible</h4><h5 id="1-执行简单命令"><a href="#1-执行简单命令" class="headerlink" title="1. 执行简单命令"></a>1. 执行简单命令</h5><p>​    安装好ansible之后，在当前目录编写一个hosts文件，定义一个主机群组vm，配置好待部署机器的主机别名、IP地址等信息，格式可以如下:</p>
<figure class="highlight sh"><table><tr><td class="code"><pre><span class="line">cat myhosts</span><br><span class="line">[vm]</span><br><span class="line">vm01 ansible_host=192.168.xxx.xx1 <span class="comment"># ansible2.0之前的版本应该使用ansible_ssh_host</span></span><br><span class="line">vm02 ansible_host=192.168.xxx.xx2</span><br></pre></td></tr></table></figure>
<p>​    然后，通过指定<code>-i</code>参数指定自定义hosts文件执行一个简单的命令，如查询系统（redhat系列）版本：<code>cat /etc/redhat-release</code></p>
<p><strong>1) 仅查询vm01</strong></p>
<figure class="highlight sh"><table><tr><td class="code"><pre><span class="line">[root@VM_0_7_centos ~]<span class="comment"># ansible -i myhosts vm01 -m shell -a "cat /etc/redhat-release"</span></span><br><span class="line">vm01 | CHANGED | rc=0 &gt;&gt;</span><br><span class="line">CentOS Linux release 7.3.1611 (Core)</span><br></pre></td></tr></table></figure>
<p><strong>2) 查询主机群组vm中的所有主机</strong></p>
<figure class="highlight sh"><table><tr><td class="code"><pre><span class="line">[root@VM_0_7_centos ~]<span class="comment"># ansible -i myhosts vm -m shell -a "cat /etc/redhat-release"</span></span><br><span class="line">vm02 | CHANGED | rc=0 &gt;&gt;</span><br><span class="line">CentOS Linux release 7.3.1611 (Core) </span><br><span class="line"></span><br><span class="line">vm01 | CHANGED | rc=0 &gt;&gt;</span><br><span class="line">CentOS Linux release 7.3.1611 (Core)</span><br></pre></td></tr></table></figure>
<p><strong>3) 查询hosts文件中的所有主机</strong></p>
<figure class="highlight sh"><table><tr><td class="code"><pre><span class="line">[root@VM_0_7_centos ~]<span class="comment"># ansible -i myhosts all -m shell -a "cat /etc/redhat-release"</span></span><br><span class="line">vm02 | CHANGED | rc=0 &gt;&gt;</span><br><span class="line">CentOS Linux release 7.3.1611 (Core) </span><br><span class="line"></span><br><span class="line">vm01 | CHANGED | rc=0 &gt;&gt;</span><br><span class="line">CentOS Linux release 7.3.1611 (Core)</span><br></pre></td></tr></table></figure>
<p><strong>！注意：<code>command</code>模块不支持管道</strong></p>
<p>例如，企图通过<code>&quot;df -h |sed -n 2p&quot;</code>获取第一个列出的文件系统的数据时，报错如下：</p>
<figure class="highlight sh"><table><tr><td class="code"><pre><span class="line">[root@VM_0_7_centos ~]<span class="comment"># ansible -i myhosts vm01 -m command -a "df -h |sed -n 2p"</span></span><br><span class="line">vm01 | FAILED | rc=1 &gt;&gt;</span><br><span class="line">df: invalid option -- <span class="string">'n'</span></span><br><span class="line">Try <span class="string">'df --help'</span> <span class="keyword">for</span> more information.non-zero <span class="built_in">return</span> code</span><br></pre></td></tr></table></figure>
<p>此时，可以使用<strong><code>shell</code>模块</strong>替代，如下：</p>
<figure class="highlight sh"><table><tr><td class="code"><pre><span class="line">[root@VM_0_7_centos ~]<span class="comment"># ansible -i myhosts vm01 -m shell -a "df -h | sed -n 2p"</span></span><br><span class="line">vm01 | CHANGED | rc=0 &gt;&gt;</span><br><span class="line">/dev/vda1        50G  3.5G   44G   8% /</span><br></pre></td></tr></table></figure>
<h5 id="2-执行控制主机上的脚本"><a href="#2-执行控制主机上的脚本" class="headerlink" title="2. 执行控制主机上的脚本"></a>2. 执行控制主机上的脚本</h5><p>​    如果需要执行多条shell命令，而又不想编写playbook，可以将包含这些命令的shell脚本放在控制主机上，通过script模块执行。</p>
<figure class="highlight sh"><table><tr><td class="code"><pre><span class="line">cat &lt;&lt;EOF &gt; /root/test.sh</span><br><span class="line"><span class="meta">#!/bin/sh</span></span><br><span class="line">yum install httpd -y</span><br><span class="line">systemctl start httpd</span><br><span class="line">systemctl status httpd</span><br><span class="line">EOF</span><br><span class="line"></span><br><span class="line"><span class="comment"># 在vm01上安装httpd并启动</span></span><br><span class="line">[root@VM_0_7_centos ~]<span class="comment"># ansible -i myhosts vm01 -m script -a "/root/test.sh"</span></span><br><span class="line">vm01 | CHANGED =&gt; &#123;</span><br><span class="line">    <span class="string">"changed"</span>: <span class="literal">true</span>, </span><br><span class="line">    <span class="string">"rc"</span>: 0, </span><br><span class="line">...</span><br></pre></td></tr></table></figure>
<hr>
<h4 id="使用ansible-playbook"><a href="#使用ansible-playbook" class="headerlink" title="使用ansible-playbook"></a>使用ansible-playbook</h4><h5 id="3-使用ansible-playbook部署一个tomcat集群"><a href="#3-使用ansible-playbook部署一个tomcat集群" class="headerlink" title="3. 使用ansible-playbook部署一个tomcat集群"></a>3. 使用ansible-playbook部署一个tomcat集群</h5><p>​    此例演示如何将一个Web应用部署到由 <code>一个NginX节点 + 两个tomcat节点</code>集群，然后模拟升级、回退过程：</p>
<p>1+2集群设定：</p>
<table>
<thead>
<tr>
<th>主机</th>
<th>应用</th>
<th>监听端口</th>
<th>版本</th>
</tr>
</thead>
<tbody>
<tr>
<td>vm_nginx</td>
<td>NginX</td>
<td>80</td>
<td>1.12</td>
</tr>
<tr>
<td>vm_tomcat_1</td>
<td>tomcat</td>
<td>8080</td>
<td>8.5.38</td>
</tr>
<tr>
<td>vm_tomcat_2</td>
<td>tomcat</td>
<td>8080</td>
<td>8.5.38</td>
</tr>
<tr>
<td></td>
<td></td>
<td></td>
</tr>
</tbody>
</table>
<p>为了模拟升级、回退操作，准备两个Web应用：</p>
<table>
<thead>
<tr>
<th>Web应用</th>
<th>版本</th>
<th>说明</th>
</tr>
</thead>
<tbody>
<tr>
<td>examples.war</td>
<td>1.0</td>
<td>旧版本，回退用</td>
</tr>
<tr>
<td>examples.war</td>
<td>2.0</td>
<td>新版本，升级用</td>
</tr>
</tbody>
</table>
<p>接下来，编写playbook。</p>
<p>在不是特别清楚每个步骤该如何编写的情况下，先一条一条以文字形式罗列出来：</p>
<ol>
<li>更新所有节点的yum源</li>
<li>在NginX节点通过yum安装NginX 1.12</li>
<li>在tomcat节点通过yum安装Java 8</li>
<li>解压tomcat安装包到tomcat节点的安装目录</li>
<li>配置tomcat（添加环境变量、开机自启、开放8080端口等）</li>
<li>将examples.war v1.0发布到tomcat并启动tomcat（因初始已有examples，改为替换首页）</li>
<li>配置NginX并启动</li>
<li>停止vm_tomcat_1上的tomcat，将examples.war v2.0发布到tomcat并启动</li>
<li>等待vm_tomcat_1的tomcat启动正常</li>
<li>停止vm_tomcat_2上的tomcat，将examples.war v2.0发布到tomcat并启动</li>
<li>等待vm_tomcat_2的tomcat启动正常</li>
<li>重复步骤8~11，但改用examples.war v1.0，模拟回退过程</li>
</ol>
<hr>
<p>据此，可作以下规划。</p>
<p>角色设定：</p>
<table>
<thead>
<tr>
<th>role</th>
<th>说明</th>
<th>包含步骤</th>
</tr>
</thead>
<tbody>
<tr>
<td>tomcat</td>
<td>安装Java 8，tomcat 8，并替换examples首页</td>
<td>1，3 ~ 6</td>
</tr>
<tr>
<td>nginx</td>
<td>安装NginX 1.12</td>
<td>1，2，7</td>
</tr>
<tr>
<td>upgrade</td>
<td>升级到examples.war v2.0</td>
<td>8 ~ 11</td>
</tr>
<tr>
<td>rollback</td>
<td>回退到examples.war v1.0</td>
<td>12</td>
</tr>
</tbody>
</table>
<p>主机组划分：</p>
<table>
<thead>
<tr>
<th>group</th>
<th>hosts</th>
<th>roles</th>
</tr>
</thead>
<tbody>
<tr>
<td>lb</td>
<td>vm_nginx</td>
<td>nginx</td>
</tr>
<tr>
<td>web</td>
<td>vm_tomcat_1<br>vm_tomcat_2</td>
<td>tomcat<br>upgrade<br>rollback</td>
</tr>
</tbody>
</table>
<p>入口playbook划分：</p>
<table>
<thead>
<tr>
<th>name</th>
<th>roles</th>
</tr>
</thead>
<tbody>
<tr>
<td>start.yml</td>
<td>tomcat<br>nginx</td>
</tr>
<tr>
<td>upgrade.yml</td>
<td>upgrade</td>
</tr>
<tr>
<td>rollback.yml</td>
<td>rollback</td>
</tr>
</tbody>
</table>
<p><strong>完整的playbook目录结构如下:</strong></p>
<figure class="highlight sh"><table><tr><td class="code"><pre><span class="line">[root@VM_0_7_centos <span class="built_in">test</span>]<span class="comment"># tree ansible_tomcat_cluster/</span></span><br><span class="line">ansible_tomcat_cluster/</span><br><span class="line">|-- ansible.cfg</span><br><span class="line">|-- group_vars</span><br><span class="line">|   `-- web</span><br><span class="line">|       `-- main.yaml <span class="comment"># 对web组可见的变量（参数）</span></span><br><span class="line">|-- hosts</span><br><span class="line">`-- roles</span><br><span class="line">    |-- nginx</span><br><span class="line">    |   |-- files</span><br><span class="line">    |   |   `-- nginx.conf <span class="comment"># 用于替换/etc/nginx/nginx.conf，已作好负载均衡配置</span></span><br><span class="line">    |   `-- tasks</span><br><span class="line">    |       `-- main.yml <span class="comment"># 每个tasks下的main.yml（或main.yaml)是对应role的主流程</span></span><br><span class="line">    |-- rollback</span><br><span class="line">    |   |-- files</span><br><span class="line">    |   |   `-- examples.war <span class="comment"># 此为1.0版本，真实环境中，一般会从远程版本库获取，此处是预先准备好</span></span><br><span class="line">    |   |-- handlers</span><br><span class="line">    |   |   `-- main.yml</span><br><span class="line">    |   `-- tasks</span><br><span class="line">    |       `-- main.yml</span><br><span class="line">    |-- rollback.yml</span><br><span class="line">    |-- start.yml <span class="comment"># 执行此playbook，会对lb和web组分别执行nginx和tomcat role的主流程</span></span><br><span class="line">    |-- tomcat</span><br><span class="line">    |   |-- files</span><br><span class="line">    |   |   `-- apache-tomcat-8.5.38.tar.gz <span class="comment"># 预置的tomcat8解压安装包</span></span><br><span class="line">    |   |-- tasks</span><br><span class="line">    |   |   `-- main.yaml</span><br><span class="line">    |   |-- templates</span><br><span class="line">    |   |   `-- index.html <span class="comment"># 首页模板，用于替换examples的首页。此处演示模板的变量注入</span></span><br><span class="line">    |   `-- vars</span><br><span class="line">    |       `-- main.yaml <span class="comment"># 仅对role tomcat可见的变量（参数）</span></span><br><span class="line">    |-- upgrade</span><br><span class="line">    |   |-- files</span><br><span class="line">    |   |   `-- examples.war <span class="comment"># 此为2.0版本</span></span><br><span class="line">    |   |-- handlers</span><br><span class="line">    |   |   `-- main.yml <span class="comment"># 此处演示处理器的用法，由notify触发（见upgrade/tasks/main.yml）</span></span><br><span class="line">    |   `-- tasks</span><br><span class="line">    |       `-- main.yml</span><br><span class="line">    `-- upgrade.yml</span><br></pre></td></tr></table></figure>
<ul>
<li>inventory（即hosts文件）：</li>
</ul>
<figure class="highlight sh"><table><tr><td class="code"><pre><span class="line">[root@VM_0_7_centos <span class="built_in">test</span>]<span class="comment"># cat ansible_tomcat/hosts</span></span><br><span class="line">[web]</span><br><span class="line">vm_tomcat_1 ansible_host=118.24.217.91 mytitle=<span class="string">"this is vm01"</span></span><br><span class="line">vm_tomcat_2 ansible_host=188.131.133.107 mytitle=<span class="string">"this is vm02"</span></span><br><span class="line"></span><br><span class="line">[lb]</span><br><span class="line">vm_nginx ansible_host=188.131.133.107</span><br></pre></td></tr></table></figure>
<ul>
<li>role nginx的任务编排：</li>
</ul>
<figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="meta">---</span></span><br><span class="line"><span class="bullet">-</span> <span class="attr">name:</span> <span class="string">安装NginX</span> <span class="string">"<span class="template-variable">&#123;&#123; nginx_version &#125;&#125;</span>"</span></span><br><span class="line">  <span class="attr">yum:</span> <span class="string">name=&#123;&#123;</span> <span class="string">item</span> <span class="string">&#125;&#125;</span> <span class="string">state=present</span></span><br><span class="line">  <span class="attr">with_items:</span></span><br><span class="line">     <span class="bullet">-</span> <span class="string">yum-utils</span></span><br><span class="line">     <span class="bullet">-</span> <span class="string">"nginx-<span class="template-variable">&#123;&#123; nginx_version &#125;&#125;</span>"</span></span><br><span class="line"></span><br><span class="line"><span class="bullet">-</span> <span class="attr">name:</span> <span class="string">配置NginX</span></span><br><span class="line">  <span class="attr">copy:</span> <span class="string">src=nginx.conf</span> <span class="string">dest=/etc/nginx/</span></span><br><span class="line"></span><br><span class="line"><span class="bullet">-</span> <span class="attr">name:</span> <span class="string">启动NginX</span></span><br><span class="line">  <span class="attr">service:</span> <span class="string">name=nginx</span> <span class="string">state=started</span> <span class="string">enabled=yes</span></span><br><span class="line"></span><br><span class="line"><span class="bullet">-</span> <span class="attr">name:</span> <span class="string">启用防火墙</span></span><br><span class="line">  <span class="attr">service:</span> <span class="string">name=firewalld</span> <span class="string">state=started</span> <span class="string">enabled=yes</span></span><br><span class="line"></span><br><span class="line"><span class="bullet">-</span> <span class="attr">name:</span> <span class="string">开启80端口（临时）</span></span><br><span class="line">  <span class="attr">shell:</span> <span class="string">firewall-cmd</span> <span class="string">--zone=public</span> <span class="string">--add-port=80/tcp</span></span><br><span class="line"></span><br><span class="line"><span class="bullet">-</span> <span class="attr">name:</span> <span class="string">等待80端口启动</span></span><br><span class="line">  <span class="attr">wait_for:</span></span><br><span class="line">    <span class="attr">port:</span> <span class="number">80</span></span><br><span class="line">    <span class="attr">state:</span> <span class="string">started</span></span><br></pre></td></tr></table></figure>
<ul>
<li>role tomcat的任务编排：</li>
</ul>
<figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="string">[root@VM_0_7_centos</span> <span class="string">test]#</span> <span class="string">cat</span> <span class="string">ansible_tomcat/roles/install/tasks/main.yaml</span> </span><br><span class="line"><span class="meta">---</span></span><br><span class="line"><span class="bullet">-</span> <span class="attr">name:</span> <span class="string">安装Java8</span></span><br><span class="line">  <span class="attr">yum:</span> <span class="string">name=&#123;&#123;</span> <span class="string">item</span> <span class="string">&#125;&#125;</span> <span class="string">state=present</span></span><br><span class="line">  <span class="attr">with_items:</span></span><br><span class="line">    <span class="bullet">-</span> <span class="string">yum-utils</span></span><br><span class="line">    <span class="bullet">-</span> <span class="string">java-1.8.0</span></span><br><span class="line"></span><br><span class="line"><span class="bullet">-</span> <span class="attr">name:</span> <span class="string">将tomcat8解压缩到安装目录下</span></span><br><span class="line">  <span class="attr">unarchive:</span></span><br><span class="line">    <span class="attr">src:</span> <span class="string">"<span class="template-variable">&#123;&#123; app_name &#125;&#125;</span>.tar.gz"</span></span><br><span class="line">    <span class="attr">dest:</span> <span class="string">"<span class="template-variable">&#123;&#123; install_path &#125;&#125;</span>"</span></span><br><span class="line"></span><br><span class="line"><span class="bullet">-</span> <span class="attr">name:</span> <span class="string">注册tomcat环境变量</span></span><br><span class="line">  <span class="attr">lineinfile:</span></span><br><span class="line">    <span class="attr">dest:</span> <span class="string">/etc/profile</span></span><br><span class="line">    <span class="attr">state:</span> <span class="string">present</span></span><br><span class="line">    <span class="attr">line:</span> <span class="string">"<span class="template-variable">&#123;&#123; item &#125;&#125;</span>"</span></span><br><span class="line">  <span class="attr">with_items:</span></span><br><span class="line">    <span class="bullet">-</span> <span class="string">"export CATALINA_HOME=/usr/local/apache-tomcat-8.5.38/"</span></span><br><span class="line">    <span class="bullet">-</span> <span class="string">"export PATH=$CATALINA_HOME/bin:$PATH"</span></span><br><span class="line"></span><br><span class="line"><span class="bullet">-</span> <span class="attr">name:</span> <span class="string">检测tomcat安装目录是否存在</span></span><br><span class="line">  <span class="attr">stat:</span> <span class="string">path=&#123;&#123;</span> <span class="string">tomcat_home</span> <span class="string">&#125;&#125;</span></span><br><span class="line">  <span class="comment"># 此处演示register用法，可在后面的步骤中打印&#123;&#123; check_tomcat_result &#125;&#125;以观察其值</span></span><br><span class="line">  <span class="attr">register:</span> <span class="string">check_tomcat_result</span></span><br><span class="line">  <span class="attr">failed_when:</span> <span class="string">not</span> <span class="string">check_tomcat_result.stat.exists</span></span><br><span class="line"></span><br><span class="line">  <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">替换examples首页</span></span><br><span class="line">  <span class="attr">template:</span> <span class="string">src=index.html</span>  <span class="string">dest="&#123;&#123;</span> <span class="string">tomcat_home</span> <span class="string">&#125;&#125;/webapps/examples/index.html"</span></span><br><span class="line"></span><br><span class="line"><span class="bullet">-</span> <span class="attr">name:</span> <span class="string">启动tomcat</span></span><br><span class="line">  <span class="attr">shell:</span> <span class="string">nohup</span> <span class="string">"<span class="template-variable">&#123;&#123; tomcat_home &#125;&#125;</span>/bin/startup.sh"</span> <span class="string">&amp;</span></span><br><span class="line"></span><br><span class="line"><span class="bullet">-</span> <span class="attr">name:</span> <span class="string">启用防火墙</span></span><br><span class="line">  <span class="attr">service:</span> <span class="string">name=firewalld</span> <span class="string">state=started</span> <span class="string">enabled=yes</span></span><br><span class="line"></span><br><span class="line"><span class="bullet">-</span> <span class="attr">name:</span> <span class="string">开启8080端口（临时）</span></span><br><span class="line">  <span class="attr">shell:</span> <span class="string">firewall-cmd</span> <span class="string">--zone=public</span> <span class="string">--add-port=8080/tcp</span></span><br><span class="line"></span><br><span class="line"><span class="bullet">-</span> <span class="attr">name:</span> <span class="string">等待8080端口启动</span></span><br><span class="line">  <span class="attr">wait_for:</span></span><br><span class="line">    <span class="attr">port:</span> <span class="number">8080</span></span><br><span class="line">    <span class="attr">state:</span> <span class="string">started</span></span><br><span class="line"></span><br><span class="line"><span class="bullet">-</span> <span class="attr">name:</span> <span class="string">配置tomcat开机自启动</span></span><br><span class="line">  <span class="attr">lineinfile:</span></span><br><span class="line">    <span class="attr">dest:</span> <span class="string">/etc/profile</span></span><br><span class="line">    <span class="attr">state:</span> <span class="string">present</span></span><br><span class="line">    <span class="attr">line:</span> <span class="string">"<span class="template-variable">&#123;&#123; item &#125;&#125;</span>"</span></span><br><span class="line">  <span class="attr">with_items:</span></span><br><span class="line">    <span class="bullet">-</span> <span class="string">"<span class="template-variable">&#123;&#123; tomcat_home &#125;&#125;</span>/bin/startup.sh &amp;"</span></span><br></pre></td></tr></table></figure>
<p><strong>执行nginx和tomcat的安装部署：</strong></p>
<figure class="highlight sh"><table><tr><td class="code"><pre><span class="line">[root@VM_0_7_centos <span class="built_in">test</span>]<span class="comment"># ansible-playbook roles/start.yml</span></span><br></pre></td></tr></table></figure>
<p>结果如下图：</p>
<p><img src="/assets/images2019/ansible-intro.assets/1551012654701.png" alt="1551012654701"></p>
<p>检验环境变量是否已写入<code>/etc/profile</code>：</p>
<p><img src="/assets/images2019/ansible-intro.assets/1551012868529.png" alt="1551012868529"></p>
<p>检验tomcat开机自启动是否已写入<code>/etc/rc.local</code>：</p>
<p><img src="/assets/images2019/ansible-intro.assets/1551014113584.png" alt="1551014113584"></p>
<p>检验index.html模板是否注入成功：</p>
<p>​    预置的index.html模板：</p>
<p><img src="/assets/images2019/ansible-intro.assets/1550722583627.png" alt="1550722583627"></p>
<p>​    注入变量后，h3标签值变成了”this is vm01”（另一个节点是”this is vm02”）：</p>
<p><img src="/assets/images2019/ansible-intro.assets/1551014256905.png" alt="1551014256905"></p>
<p>检验NginX负载均衡是否生效：</p>
<p><img src="/assets/images2019/ansible-intro.assets/1551015508452.png" alt="1551015508452"></p>
<p><strong>执行逐个节点升级：</strong></p>
<p>upgrade.yml：</p>
<figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="bullet">-</span> <span class="attr">hosts:</span> <span class="string">web</span></span><br><span class="line">  <span class="attr">serial:</span> <span class="number">1</span> <span class="comment"># serial值为1，表示一个一个节点地执行</span></span><br><span class="line">  <span class="attr">roles:</span></span><br><span class="line">  <span class="bullet">-</span> <span class="string">&#123;</span> <span class="attr">role:</span> <span class="string">upgrade</span> <span class="string">&#125;</span></span><br></pre></td></tr></table></figure>
<p>upgrade/tasks/main.yml：</p>
<figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="bullet">-</span> <span class="attr">name:</span> <span class="string">升级</span> <span class="string">|关闭tomcat</span></span><br><span class="line">  <span class="attr">command:</span> <span class="string">sh</span> <span class="string">"<span class="template-variable">&#123;&#123; tomcat_home &#125;&#125;</span>/bin/shutdown.sh"</span></span><br><span class="line"></span><br><span class="line"><span class="bullet">-</span> <span class="attr">name:</span> <span class="string">等待8080端口关闭</span></span><br><span class="line">  <span class="attr">wait_for:</span></span><br><span class="line">    <span class="attr">port:</span> <span class="number">8080</span></span><br><span class="line">    <span class="attr">state:</span> <span class="string">stopped</span></span><br><span class="line">  <span class="attr">notify:</span> <span class="string">clean</span> <span class="string">tomcat</span> <span class="string">cache</span> <span class="comment"># 通知handler "clean tomcat cache" 处理</span></span><br><span class="line"><span class="string">（剩余略）</span></span><br></pre></td></tr></table></figure>
<p>handlers/main.yml：</p>
<figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="bullet">-</span> <span class="attr">name:</span> <span class="string">clean</span> <span class="string">tomcat</span> <span class="string">cache</span></span><br><span class="line">  <span class="attr">file:</span> <span class="string">path="&#123;&#123;</span> <span class="string">tomcat_home</span> <span class="string">&#125;&#125;/work/Catalina"</span> <span class="string">state=absent</span></span><br><span class="line">  <span class="attr">ignore_errors:</span> <span class="literal">yes</span></span><br></pre></td></tr></table></figure>
<p>模拟应用升级的过程过程如下：</p>
<figure class="highlight sh"><table><tr><td class="code"><pre><span class="line">[root@VM_0_7_centos ansible_tomcat_cluster]<span class="comment"># ansible-playbook roles/upgrade.yml</span></span><br></pre></td></tr></table></figure>
<p>​    先对vm_tomat_1：</p>
<p><img src="/assets/images2019/ansible-intro.assets/1551016061521.png" alt="1551016061521"></p>
<p>​    再对vm_tomcat_2：</p>
<p><img src="/assets/images2019/ansible-intro.assets/1551016281860.png" alt="1551016281860"></p>
<p>升级后，从浏览器访问变成了2.0版本（两个节点的页面一致，未作区分）：</p>
<p><img src="/assets/images2019/ansible-intro.assets/1551016392519.png" alt="1551016392519"></p>
<p><strong>执行逐个节点回退：</strong></p>
<p>rollback剧本内容与upgrade相似，从略。</p>
<figure class="highlight sh"><table><tr><td class="code"><pre><span class="line">[root@VM_0_7_centos ansible_tomcat_cluster]<span class="comment"># ansible-playbook roles/rollback.yml</span></span><br></pre></td></tr></table></figure>
<p>回退过程类似升级过程，结果如下：</p>
<p><img src="/assets/images2019/ansible-intro.assets/1551016579264.png" alt="1551016579264"></p>
<p>回退后，从浏览器访问变成了1.0版本：</p>
<p><img src="/assets/images2019/ansible-intro.assets/1551016791550.png" alt="1551016791550"></p>
<p>一切符合预期。</p>
<p>至此，NginX <em> 1 + Tomcat </em> 2方式部署war包，然后模拟升级、回退的过程演示完毕。完整的playbook见<a href="https://github.com/zlzgithub/ansible_zlz/tree/master/tomcat_cluster" target="_blank" rel="noopener">gitlab仓库</a></p>
<hr>
<p><em>P.s. 以上操作不是使用密码，需事先作SSH免密认证。</em></p>
<figure class="highlight sh"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 控制主机生成ssh密钥对，简单点，直接ssh-keygen不带任何参数</span></span><br><span class="line">ssh-keygen</span><br><span class="line"><span class="comment"># 发送给被控主机</span></span><br><span class="line">ssh-copy-id root@localhost	<span class="comment"># 如果要在控制主机执行部署，需发送公钥给自己</span></span><br><span class="line">ssh-copy-id root@&lt;目标主机IP&gt;</span><br></pre></td></tr></table></figure>
<p><em>其它模块的用法，及高级特性，请结合实际需求，阅读官方文档《Ansible User Guide》。</em></p>
<h3 id="Ansible参考"><a href="#Ansible参考" class="headerlink" title="Ansible参考"></a>Ansible参考</h3><ol>
<li><p><a href="https://docs.ansible.com/ansible/latest/user_guide/" target="_blank" rel="noopener">Ansible User Guide</a></p>
</li>
<li><p><a href="http://www.ansible.com.cn/" target="_blank" rel="noopener">Ansible中文权威指南</a></p>
</li>
<li><p><a href="https://blog.csdn.net/a105421548/article/details/53558598" target="_blank" rel="noopener">Ansible和SaltStack的比较和选型</a></p>
</li>
</ol>
<hr>
<p>（End）</p>
]]></content>
      <categories>
        <category>CMDB</category>
      </categories>
      <tags>
        <tag>Ansible</tag>
        <tag>CMDB</tag>
      </tags>
  </entry>
  <entry>
    <title>Zabbix的安装与使用</title>
    <url>/pages/monitoring/zabbix/zabbix-intro/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\pages\assets\css\APlayer.min.css"><script src="\pages\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><hr>
<blockquote>
<p>Linux环境：CentOS Linux release 7.5.1804 (Core)</p>
</blockquote>
<h3 id="1-安装MySQL"><a href="#1-安装MySQL" class="headerlink" title="1. 安装MySQL"></a>1. 安装MySQL</h3><ul>
<li>安装mariadb</li>
</ul>
<figure class="highlight sh"><table><tr><td class="code"><pre><span class="line">yum -y install mariadb mariadb-server mariadb-devel</span><br><span class="line">systemctl start mariadb</span><br><span class="line">systemctl <span class="built_in">enable</span> mariadb</span><br><span class="line">mysql_secure_installation <span class="comment"># 通过mysql配置向导完成某些设置，也可通过修改表的方式完成设置</span></span><br></pre></td></tr></table></figure>
<a id="more"></a>
<ul>
<li>配置字符集</li>
</ul>
<p>在/etc/my.cnf的[mysqld]下添加：</p>
<figure class="highlight"><table><tr><td class="code"><pre><span class="line"><span class="attr">init_connect</span>=<span class="string">'SET collation_connection = utf8_unicode_ci'</span></span><br><span class="line"><span class="attr">init_connect</span>=<span class="string">'SET NAMES utf8'</span></span><br><span class="line"><span class="attr">character-set-server</span>=utf8</span><br><span class="line"><span class="attr">collation-server</span>=utf8_unicode_ci</span><br><span class="line">skip-character-set-client-handshake</span><br></pre></td></tr></table></figure>
<p>在/etc/my.cnf.d/client.cnf的[client]中添加：</p>
<figure class="highlight ini"><table><tr><td class="code"><pre><span class="line"><span class="attr">default-character-set</span>=utf8</span><br></pre></td></tr></table></figure>
<p>在/etc/my.cnf.d/<a href="https://www.centos.bz/tag/mysql-2/" target="_blank" rel="noopener">mysql</a>-clients.cnf的[mysql]中添加：</p>
<figure class="highlight ini"><table><tr><td class="code"><pre><span class="line"><span class="attr">default-character-set</span>=utf8</span><br></pre></td></tr></table></figure>
<p>重启使生效：</p>
<figure class="highlight sh"><table><tr><td class="code"><pre><span class="line">systemctl restart mariadb</span><br></pre></td></tr></table></figure>
<p>查看字符集：</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">MariaDB [(none)]&gt; show variables like &quot;%character%&quot;;</span><br><span class="line">+--------------------------+----------------------------+</span><br><span class="line">| Variable_name            | Value                      |</span><br><span class="line">+--------------------------+----------------------------+</span><br><span class="line">| character_set_client     | utf8                       |</span><br><span class="line">| character_set_connection | utf8                       |</span><br><span class="line">| character_set_database   | utf8                       |</span><br><span class="line">| character_set_filesystem | binary                     |</span><br><span class="line">| character_set_results    | utf8                       |</span><br><span class="line">| character_set_server     | utf8                       |</span><br><span class="line">| character_set_system     | utf8                       |</span><br><span class="line">| character_sets_dir       | /usr/share/mysql/charsets/ |</span><br><span class="line">+--------------------------+----------------------------+</span><br><span class="line">8 rows in set (0.00 sec)</span><br><span class="line"></span><br><span class="line">MariaDB [(none)]&gt; show variables like &quot;%collation%&quot;;</span><br><span class="line">+----------------------+-----------------+</span><br><span class="line">| Variable_name        | Value           |</span><br><span class="line">+----------------------+-----------------+</span><br><span class="line">| collation_connection | utf8_general_ci |</span><br><span class="line">| collation_database   | utf8_general_ci |</span><br><span class="line">| collation_server     | utf8_general_ci |</span><br><span class="line">+----------------------+-----------------+</span><br><span class="line">3 rows in set (0.00 sec)</span><br></pre></td></tr></table></figure>
<p>MySQL的安装及配置完成。</p>
<hr>
<h3 id="2-安装Zabbix"><a href="#2-安装Zabbix" class="headerlink" title="2. 安装Zabbix"></a>2. 安装Zabbix</h3><p>Zabbix安装步骤见：<a href="https://www.zabbix.com/download?zabbix=3.0&amp;os_distribution=centos&amp;os_version=7&amp;db=mysql" target="_blank" rel="noopener">CentOS 7安装zabbix 3.0</a>，基于RPM方式安装Zabbix 3.0.25。</p>
<p><em>如果想通过编译源码安装，可参考<a href="https://github.com/zlzgithub/docs/blob/master/zabbix/make-install-zabbix.md" target="_blank" rel="noopener">Zabbix源码安装过程记录</a>。</em></p>
<p>另外，安装zabbix_get以便测试：</p>
<figure class="highlight sh"><table><tr><td class="code"><pre><span class="line">[root@VM_0_6_centos ~]<span class="comment"># yum install zabbix-get</span></span><br><span class="line"><span class="comment"># 添加监控项时，可在zabbix_server上通过zabbix_get测试命令是否有效</span></span><br><span class="line">[root@VM_0_6_centos ~]<span class="comment"># zabbix_get -s 188.131.133.107 -k vfs.fs.size[/,pused]</span></span><br><span class="line">17.268719</span><br></pre></td></tr></table></figure>
<p>在安装完zabbix之后，需在MySQL中创建zabbix数据库并导入初始数据表。</p>
<p>安装配置完成并启动所有服务后，以<code>http://&lt;zabbix_server_ip&gt;/zabbix</code>访问zabbix控制面板，初始用户名/密码为：Admin/zabbix。</p>
<hr>
<h3 id="3-Zabbix监控"><a href="#3-Zabbix监控" class="headerlink" title="3. Zabbix监控"></a>3. Zabbix监控</h3><p>以下添加一个<strong>被监控主机</strong>cvm001，监控其cpu、磁盘、80端口等。</p>
<table>
<thead>
<tr>
<th>主机</th>
<th>监控项</th>
</tr>
</thead>
<tbody>
<tr>
<td>cvm001</td>
<td>cpu 平均负载、cpu 上下文切换频率</td>
</tr>
<tr>
<td>cvm001</td>
<td>根分区剩余空间百分比</td>
</tr>
<tr>
<td>cvm001</td>
<td>80端口状态（httpd服务）</td>
</tr>
<tr>
<td>cvm001</td>
<td>mysql进程数</td>
</tr>
</tbody>
</table>
<h4 id="3-1-添加主机"><a href="#3-1-添加主机" class="headerlink" title="3.1 添加主机"></a>3.1 添加主机</h4><p>【配置】&gt;【主机】&gt;【创建主机】：</p>
<p><img src="/assets/images2019/zabbix-intro.assets/1551234474023.png" alt="1551234474023"></p>
<h4 id="3-2-添加监控项"><a href="#3-2-添加监控项" class="headerlink" title="3.2 添加监控项"></a>3.2 添加监控项</h4><p>【配置】&gt;【主机】，在刚刚新加的主机所在行，【监控项】&gt;【创建监控项】：</p>
<p>1）CPU负载</p>
<p><img src="/assets/images2019/zabbix-intro.assets/1551235105076.png" alt="1551235105076"></p>
<p>设置历史数据保留7天，并为cpu相关的监控定义了一个名为cpu的应用集。</p>
<p><img src="/assets/images2019/zabbix-intro.assets/1551235235750.png" alt="1551235235750"></p>
<p>2）CPU上下文切换次数</p>
<p><img src="/assets/images2019/zabbix-intro.assets/1551235576710.png" alt="1551235576710"></p>
<p>储存值选择“差量（每秒速率）”：</p>
<p><img src="/assets/images2019/zabbix-intro.assets/1551260458874.png" alt="1551260458874"></p>
<p>3）根分区使用率</p>
<p><img src="/assets/images2019/zabbix-intro.assets/1551235817902.png" alt="1551235817902"></p>
<p>“pused”表示已使用空间所占百分比。</p>
<p>4）mysql的进程</p>
<p>通过<code>proc.num[mysqld,mysql]</code>获取用户mysql的进程mysqld的数目：</p>
<p><img src="/assets/images2019/zabbix-intro.assets/1551236027506.png" alt="1551236027506"></p>
<p>5）80端口状态</p>
<p><img src="/assets/images2019/zabbix-intro.assets/1551236331993.png" alt="1551236331993"></p>
<p>查看值选择的是Service state，正常状态值是”Up”：</p>
<p><img src="/assets/images2019/zabbix-intro.assets/1551236436165.png" alt="1551236436165"></p>
<p>如下图，已添加完上面的5个监控项：</p>
<p><img src="/assets/images2019/zabbix-intro.assets/1551236245002.png" alt="1551236245002"></p>
<p>查看最新监控数据如下：</p>
<p><img src="/assets/images2019/zabbix-intro.assets/1551236816850.png" alt="1551236816850"></p>
<p>查看cpu上下文切换次数的【图形】：</p>
<p><img src="/assets/images2019/zabbix-intro.assets/1551237146452.png" alt="1551237146452"></p>
<p><em>图表标题中文字符显示不出来，是字体的原因，可自行替换，此处从略。</em></p>
<h4 id="3-3-创建触发器"><a href="#3-3-创建触发器" class="headerlink" title="3.3 创建触发器"></a>3.3 创建触发器</h4><p>【配置】&gt;【主机】，主机所在行的【触发器】&gt;【创建触发器】：</p>
<p><img src="/assets/images2019/zabbix-intro.assets/1551260715724.png" alt="1551260715724"></p>
<p><img src="/assets/images2019/zabbix-intro.assets/1551249076606.png" alt="1551249076606"></p>
<h4 id="3-4-自定义报警媒介"><a href="#3-4-自定义报警媒介" class="headerlink" title="3.4 自定义报警媒介"></a>3.4 自定义报警媒介</h4><p><img src="/assets/images2019/zabbix-intro.assets/1551248906136.png" alt="1551248906136"></p>
<p>写一个模拟报警脚本如下，放置在<code>/usr/lib/zabbix/alertscripts/myAlert.sh</code>:</p>
<figure class="highlight sh"><table><tr><td class="code"><pre><span class="line"><span class="meta">#!/bin/sh</span></span><br><span class="line"></span><br><span class="line">alert_path=/var/www/html/myalert</span><br><span class="line">mkdir -p <span class="variable">$alert_path</span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="title">gen_html</span></span>() &#123;</span><br><span class="line">    <span class="built_in">echo</span> <span class="string">""</span><span class="string">"&lt;html&gt;</span></span><br><span class="line"><span class="string">    &lt;head&gt;&lt;/head&gt;</span></span><br><span class="line"><span class="string">    &lt;body&gt;</span></span><br><span class="line"><span class="string">    &lt;h1&gt;Alert&lt;/h1&gt;</span></span><br><span class="line"><span class="string">    &lt;pre&gt;</span></span><br><span class="line"><span class="string">    "</span><span class="string">""</span></span><br><span class="line">    <span class="built_in">echo</span> <span class="string">"SENDTO:<span class="variable">$1</span>"</span></span><br><span class="line">    <span class="built_in">echo</span> <span class="string">"SUBJECT:<span class="variable">$2</span>"</span></span><br><span class="line">    <span class="built_in">echo</span> <span class="string">"MESSAGE:<span class="variable">$3</span>"</span></span><br><span class="line">    <span class="built_in">echo</span> <span class="string">""</span><span class="string">"</span></span><br><span class="line"><span class="string">    &lt;/pre&gt;</span></span><br><span class="line"><span class="string">    &lt;/body&gt;</span></span><br><span class="line"><span class="string">    &lt;/html&gt;"</span><span class="string">""</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">gen_html <span class="variable">$@</span> &gt; <span class="variable">$alert_path</span>/1.html</span><br><span class="line">chmod -R 755 <span class="variable">$alert_path</span></span><br></pre></td></tr></table></figure>
<p>并修改/etc/zabbix/zabbix_server.conf配置：</p>
<figure class="highlight ini"><table><tr><td class="code"><pre><span class="line"><span class="attr">AllowRoot</span>=<span class="number">1</span></span><br><span class="line"><span class="attr">User</span>=root</span><br></pre></td></tr></table></figure>
<h4 id="3-5-用户-告警绑定"><a href="#3-5-用户-告警绑定" class="headerlink" title="3.5 用户-告警绑定"></a>3.5 用户-告警绑定</h4><p><img src="/assets/images2019/zabbix-intro.assets/1551249389835.png" alt="1551249389835"></p>
<p><img src="/assets/images2019/zabbix-intro.assets/1551255673570.png" alt="1551255673570"></p>
<h4 id="3-6-创建动作"><a href="#3-6-创建动作" class="headerlink" title="3.6 创建动作"></a>3.6 创建动作</h4><p><img src="/assets/images2019/zabbix-intro.assets/1551249482028.png" alt="1551249482028"></p>
<p><img src="/assets/images2019/zabbix-intro.assets/1551249617900.png" alt="1551249617900"></p>
<p><img src="/assets/images2019/zabbix-intro.assets/1551249780128.png" alt="1551249780128"></p>
<h4 id="3-7-模拟报警"><a href="#3-7-模拟报警" class="headerlink" title="3.7 模拟报警"></a>3.7 模拟报警</h4><p>模拟报警条件：</p>
<figure class="highlight sh"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 假设当前占用率19%，写一个大小约1GB的文件，使根分区占用率 &gt; 20% 达到触发报警</span></span><br><span class="line">[root@VM_0_7_centos ~]<span class="comment"># dd if=/dev/zero bs=1024 count=1000000 of=/root/1Gb.file</span></span><br></pre></td></tr></table></figure>
<p>查看监控图形（设定的阈值是16%）：</p>
<p><img src="/assets/images2019/zabbix-intro.assets/1551241908732.png" alt="1551241908732"></p>
<p>查看触发器状态：</p>
<p><img src="/assets/images2019/zabbix-intro.assets/1551241947776.png" alt="1551241947776"></p>
<p>查看事件记录：</p>
<p><img src="/assets/images2019/zabbix-intro.assets/1551250126172.png" alt="1551250126172"></p>
<p>查看报警通知结果：</p>
<p><img src="/assets/images2019/zabbix-intro.assets/1551252223032.png" alt="1551252223032"></p>
<p>当报警解除后：</p>
<p><img src="/assets/images2019/zabbix-intro.assets/1551253201767.png" alt="1551253201767"></p>
<p>经测试，报警机制正常。正式环境中，配置内置的Email或SMS报警媒介，或使用自定义的邮件、微信、短信告警脚本等替代。</p>
<hr>
<h3 id="参考资料"><a href="#参考资料" class="headerlink" title="参考资料"></a>参考资料</h3><p><a href="https://www.zabbix.com/documentation/3.0/manual/quickstart" target="_blank" rel="noopener">zabbix 3.0 quickstart</a></p>
<hr>
<p>（End)</p>
]]></content>
      <categories>
        <category>监控</category>
      </categories>
      <tags>
        <tag>Zabbix</tag>
      </tags>
  </entry>
  <entry>
    <title>Git多账号配置</title>
    <url>/pages/config-management/multi-git-account-configure/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\pages\assets\css\APlayer.min.css"><script src="\pages\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><hr>
<p>假设有2个github账号，mygithub（default）和mygithub2，要在同一个git客户端下使用，可按以下配置。</p>
<h3 id="生成SSH-Key"><a href="#生成SSH-Key" class="headerlink" title="生成SSH Key"></a>生成SSH Key</h3><p><code>mygithub</code>的ssh key已按默认生成，对应id_rsa。再生成<code>mygithub2</code>账号的ssh key，假设取名为mygithub2：</p>
<figure class="highlight sh"><table><tr><td class="code"><pre><span class="line"><span class="built_in">cd</span> ~/.ssh</span><br><span class="line"><span class="comment"># ssh-keygen -t rsa -b 4096 -C &lt;email&gt; -f mygithub2</span></span><br><span class="line">ssh-keygen -f mygithub2</span><br></pre></td></tr></table></figure>
<a id="more"></a>
<p>生成ssh密钥对之后，登录github，将公钥记录到mygithub2账户中。</p>
<h3 id="添加多账号配置文件"><a href="#添加多账号配置文件" class="headerlink" title="添加多账号配置文件"></a>添加多账号配置文件</h3><p>创建文件<code>~/.ssh/config</code></p>
<figure class="highlight sh"><table><tr><td class="code"><pre><span class="line"><span class="built_in">cd</span> ~/.ssh</span><br><span class="line">cat &lt;&lt;EOF &gt; config</span><br><span class="line"><span class="comment"># default</span></span><br><span class="line">Host github.com</span><br><span class="line">HostName github.com</span><br><span class="line">User mygithub</span><br><span class="line">IdentityFile ~/.ssh/id_rsa</span><br><span class="line"></span><br><span class="line"><span class="comment"># mygithub2</span></span><br><span class="line">Host mygithub2</span><br><span class="line">HostName github.com</span><br><span class="line">User mygithub2</span><br><span class="line">IdentityFile ~/.ssh/mygithub2</span><br><span class="line">EOF</span><br></pre></td></tr></table></figure>
<p>注意Host、HostName的差异。如果有其它代码托管平台的账号，如<code>gitlab、gitee</code>，重新按以上步骤追加，填写相应的HostName、User和ssh key文件，并以不同的Host值区分。</p>
<h3 id="使用多账号"><a href="#使用多账号" class="headerlink" title="使用多账号"></a>使用多账号</h3><p>使用时，对于默认账号<code>mygithub</code>，用法不变：</p>
<figure class="highlight sh"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 默认账号mygithub用法不变</span></span><br><span class="line">git <span class="built_in">clone</span> git@github.com:mygithub/helloWorld.git</span><br></pre></td></tr></table></figure>
<p>对于<code>mygithub2</code>，@github.com变成@mygithub2，因<code>mygithub2</code>对应的Host是mygithub2。</p>
<figure class="highlight sh"><table><tr><td class="code"><pre><span class="line">git <span class="built_in">clone</span> git@mygithub2:mygithub2/helloWorld.git</span><br></pre></td></tr></table></figure>
<p>如下图，<code>lzzeng</code>是我使用的第二github账号：</p>
<p><img src="/assets/images2019/1550116067833.png" alt="1550116067833"></p>
<p>如果事先已clone下来，可修改远程仓库地址为 @mygithub2格式：</p>
<figure class="highlight sh"><table><tr><td class="code"><pre><span class="line"><span class="built_in">cd</span> helloWorld</span><br><span class="line">git remote rm origin</span><br><span class="line">git remote add origin git@mygithub2:mygithub2/helloWorld.git</span><br></pre></td></tr></table></figure>
<p>此外，因全局默认用户是<code>mygithub</code>，如果想切换到<code>mygithub2</code>用户的话：</p>
<figure class="highlight sh"><table><tr><td class="code"><pre><span class="line"><span class="built_in">cd</span> helloWorld</span><br><span class="line">git config --<span class="built_in">local</span> user.name mygithub2</span><br><span class="line">git config --<span class="built_in">local</span> user.email &lt;email&gt;</span><br></pre></td></tr></table></figure>
<h3 id="补充"><a href="#补充" class="headerlink" title="补充"></a>补充</h3><p>根据上述内容，可以完成git多账号配置并使用。另外，网上资料有提到<code>ssh-agent</code>和<code>ssh-add</code>，ssh-agent是一个密钥管理器，运行ssh-agent以后，使用ssh-add将私钥交给ssh-agent保管。</p>
<figure class="highlight sh"><table><tr><td class="code"><pre><span class="line">ssh-agent bash	<span class="comment"># 启用ssh-agent shell</span></span><br><span class="line">ssh-add -l	<span class="comment"># 显示ssh-agent中的密钥</span></span><br><span class="line">ssh-add -D	<span class="comment"># 删除所有缓存的密钥</span></span><br><span class="line">ssh-add  ~/.ssh/id_rsa	<span class="comment"># 把私钥添加到ssh-agent中</span></span><br><span class="line">ssh-copy-id -i ~/.ssh/id_rsa.pub root@vm2	<span class="comment"># 将公钥发送给root@vm2，之后可免密登录root@vm2</span></span><br></pre></td></tr></table></figure>
<hr>
<p>(End)</p>
]]></content>
      <categories>
        <category>Git</category>
      </categories>
      <tags>
        <tag>Git</tag>
      </tags>
  </entry>
  <entry>
    <title>使用PyCharm远程调试</title>
    <url>/pages/how-to-use-remote-interpreter-in-pycharm-md/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\pages\assets\css\APlayer.min.css"><script src="\pages\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><hr>
<p>软件：PyCharm Professional Edition 2018.3</p>
<p>如果想在Windows系统中使用PyCharm进行Python代码开发，而在Linux机器上部署运行，那么可以使用PyCharm的远程调试功能。这样可以避免因使用不同系统下的Python环境，在Windows上正常运行，而在Linux上报错，需要再次修改代码才能运行。</p>
<a id="more"></a>
<p>仍以之前的mysite2这个django demo为例，步骤如下：</p>
<h3 id="配置Deployment"><a href="#配置Deployment" class="headerlink" title="配置Deployment"></a>配置Deployment</h3><p>【Tools】&gt;&gt; 【Deployment】&gt;&gt;【Configuration…】，新建一个Deployment。配置连接、目录映射，并排除不作同步的目录。</p>
<p><img src="/assets/images2019/pycharm/1550042018420.png" alt="1550042018420"></p>
<p><img src="/assets/images2019/pycharm/1550045540775.png" alt="1550045540775"></p>
<p><img src="/assets/images2019/pycharm/1550045568720.png" alt="1550045568720"></p>
<p>配置完成后，手动点击【Tools】&gt;&gt; 【Deployment】 &gt;&gt; 【Upload to…】，将项目代码同步到所设置的Linux主机上。</p>
<p>然后，登录Linux主机，创建虚拟环境：</p>
<figure class="highlight sh"><table><tr><td class="code"><pre><span class="line"><span class="built_in">cd</span> /srv</span><br><span class="line">virtualenv venv</span><br><span class="line"><span class="built_in">source</span> venv/bin/activate</span><br><span class="line"><span class="comment"># 安装django和MySQL-python</span></span><br><span class="line">pip install django==1.11</span><br><span class="line">pip install MySQL-python</span><br></pre></td></tr></table></figure>
<p>测试一下，从浏览器访问正常即可。</p>
<figure class="highlight sh"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 已activate虚拟环境</span></span><br><span class="line">python /srv/mysite2/manage.py runserver 0.0.0.0:8000</span><br></pre></td></tr></table></figure>
<h3 id="配置Interpreter"><a href="#配置Interpreter" class="headerlink" title="配置Interpreter"></a>配置Interpreter</h3><p>根据上面配置好的部署来配置远程解释器，并选择在Linux主机上创建的虚拟环境venv作远程解释器。</p>
<p><img src="/assets/images2019/pycharm/1550043819067.png" alt="1550043819067"></p>
<p><img src="/assets/images2019/pycharm/1550044379484.png" alt="1550044379484"></p>
<h3 id="配置Run-Debug"><a href="#配置Run-Debug" class="headerlink" title="配置Run/Debug"></a>配置Run/Debug</h3><p><img src="/assets/images2019/pycharm/1550044673006.png" alt="1550044673006"></p>
<p>至此，Deployment、Remote Interpreter和Run三处配置均完成，可以直接从PyCharm运行调试了：</p>
<p><img src="/assets/images2019/pycharm/1550044955274.png" alt="1550044955274"></p>
<hr>
<p>(End)</p>
]]></content>
      <categories>
        <category>其它</category>
      </categories>
      <tags>
        <tag>else</tag>
      </tags>
  </entry>
  <entry>
    <title>使用Docker部署一个Django Demo</title>
    <url>/pages/test-docker-01/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\pages\assets\css\APlayer.min.css"><script src="\pages\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><hr>
<blockquote>
<p>系统：CentOS 7.2</p>
</blockquote>
<p>准备一个Django Demo，运行后效果如下：</p>
<p><img src="/assets/images2019/1547641817316.png" alt="1547641817316"></p>
<a id="more"></a>
<p>这是Django官网上的一个简单的投票demo，是使用NginX + supervisord + gunicorn + venv来部署的。现在要做的是把它制作成docker镜像，然后以容器的方式运行它。</p>
<hr>
<p><strong>步骤如下：</strong></p>
<h3 id="安装docker"><a href="#安装docker" class="headerlink" title="安装docker"></a>安装docker</h3><p>我使用的是云主机，已配置yum源，可以直接</p>
<figure class="highlight sh"><table><tr><td class="code"><pre><span class="line">yum install docker</span><br></pre></td></tr></table></figure>
<p>因已安装docker，提示更新如下（更新后原有镜像被删除了）：</p>
<p><img src="/assets/images2019/1547633107189.png" alt="1547633107189"></p>
<p>yum源配置如下：</p>
<p>/etc/yum.repos.d/CentOS-Base.repo文件：</p>
<figure class="highlight ini"><table><tr><td class="code"><pre><span class="line"><span class="section">[extras]</span></span><br><span class="line"><span class="attr">gpgcheck</span>=<span class="number">1</span></span><br><span class="line"><span class="attr">gpgkey</span>=http://mirrors.tencentyun.com/centos/RPM-GPG-KEY-CentOS-<span class="number">7</span></span><br><span class="line"><span class="attr">enabled</span>=<span class="number">1</span></span><br><span class="line"><span class="attr">baseurl</span>=http://mirrors.tencentyun.com/centos/<span class="variable">$releasever</span>/extras/<span class="variable">$basearch</span>/</span><br><span class="line"><span class="attr">name</span>=Qcloud centos extras - <span class="variable">$basearch</span></span><br><span class="line"><span class="section">[os]</span></span><br><span class="line"><span class="attr">gpgcheck</span>=<span class="number">1</span></span><br><span class="line"><span class="attr">gpgkey</span>=http://mirrors.tencentyun.com/centos/RPM-GPG-KEY-CentOS-<span class="number">7</span></span><br><span class="line"><span class="attr">enabled</span>=<span class="number">1</span></span><br><span class="line"><span class="attr">baseurl</span>=http://mirrors.tencentyun.com/centos/<span class="variable">$releasever</span>/os/<span class="variable">$basearch</span>/</span><br><span class="line"><span class="attr">name</span>=Qcloud centos os - <span class="variable">$basearch</span></span><br><span class="line"><span class="section">[updates]</span></span><br><span class="line"><span class="attr">gpgcheck</span>=<span class="number">1</span></span><br><span class="line"><span class="attr">gpgkey</span>=http://mirrors.tencentyun.com/centos/RPM-GPG-KEY-CentOS-<span class="number">7</span></span><br><span class="line"><span class="attr">enabled</span>=<span class="number">1</span></span><br><span class="line"><span class="attr">baseurl</span>=http://mirrors.tencentyun.com/centos/<span class="variable">$releasever</span>/updates/<span class="variable">$basearch</span>/</span><br><span class="line"><span class="attr">name</span>=Qcloud centos updates - <span class="variable">$basearch</span></span><br></pre></td></tr></table></figure>
<p>/etc/yum.repos.d/CentOS-Epel.repo文件：</p>
<figure class="highlight ini"><table><tr><td class="code"><pre><span class="line"><span class="section">[epel]</span></span><br><span class="line"><span class="attr">name</span>=EPEL for redhat/centos <span class="variable">$releasever</span> - <span class="variable">$basearch</span></span><br><span class="line"><span class="attr">failovermethod</span>=priority</span><br><span class="line"><span class="attr">gpgcheck</span>=<span class="number">1</span></span><br><span class="line"><span class="attr">gpgkey</span>=http://mirrors.tencentyun.com/epel/RPM-GPG-KEY-EPEL-<span class="number">7</span></span><br><span class="line"><span class="attr">enabled</span>=<span class="number">1</span></span><br><span class="line"><span class="attr">baseurl</span>=http://mirrors.tencentyun.com/epel/<span class="variable">$releasever</span>/<span class="variable">$basearch</span>/</span><br></pre></td></tr></table></figure>
<hr>
<p>示例应用根目录是<code>mysite2</code>，如下：</p>
<figure class="highlight sh"><table><tr><td class="code"><pre><span class="line">|   |-- mysite2</span><br><span class="line">|   |   |-- fixtures</span><br><span class="line">|   |   |-- manage.py</span><br><span class="line">|   |   |-- mysite2</span><br><span class="line">|   |   |-- polls</span><br><span class="line">|   |   `-- templates</span><br></pre></td></tr></table></figure>
<p>为了方便制作docker镜像，重新组织成了下面的样子：</p>
<figure class="highlight sh"><table><tr><td class="code"><pre><span class="line">[root@lzzeng docker_demo]<span class="comment"># tree -L 3 .</span></span><br><span class="line">.</span><br><span class="line">|-- application</span><br><span class="line">|   |-- docker-compose.yml</span><br><span class="line">|   |-- Dockerfile</span><br><span class="line">|   |-- mysite2</span><br><span class="line">|   |   |-- fixtures</span><br><span class="line">|   |   |-- manage.py</span><br><span class="line">|   |   |-- mysite2</span><br><span class="line">|   |   |-- polls</span><br><span class="line">|   |   `-- templates</span><br><span class="line">|   |-- mysite2_nginx.conf</span><br><span class="line">|   |-- mysite2_supervisord.ini</span><br><span class="line">|   |-- requirements.txt</span><br><span class="line">|   |-- start_script</span><br><span class="line">|   `-- <span class="built_in">wait</span>-for-it.sh</span><br><span class="line">`-- readMe.md</span><br></pre></td></tr></table></figure>
<p><code>application</code>目录下的文件<code>docker-compose.yml</code>、<code>Dockerfile</code>等7个文件是新增的。作用如下：</p>
<p><strong>docker-compose.yml</strong>：通过docker-compose启动容器的配置，定义了多个容器的启动参数，及容器关联等<br><strong>Dockerfile</strong>：制作Docker镜像的脚本编排，类似于Makefile、SPEC文件等<br><strong>mysite2_nginx.conf</strong>：事先写好的NginX配置文件<br><strong>mysite2_supervisord.ini</strong>：事先写好的Supervisord配置文件<br><strong>requirements.txt</strong>：记录制作docker镜像需要安装的依赖，Dockerfile中用到<br><strong>start_script</strong>： 容器启动入口，Dockerfile中定义了此脚本为启动入口<br><strong>wait-for-it.sh</strong>：等待其它容器（服务）启动完毕的脚本</p>
<hr>
<h3 id="编写Dockerfile"><a href="#编写Dockerfile" class="headerlink" title="编写Dockerfile"></a>编写Dockerfile</h3><figure class="highlight sh"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 基于centos:7</span></span><br><span class="line">FROM centos:7</span><br><span class="line">MAINTAINER zeng &lt;zeng@abc.com&gt;</span><br><span class="line">ENV TZ <span class="string">"Asia/Shanghai"</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 设置若干环境变量</span></span><br><span class="line"><span class="comment"># Local directory with project source</span></span><br><span class="line">ENV DOCKER_SRC=mysite2</span><br><span class="line"><span class="comment"># Directory in container for all project files</span></span><br><span class="line">ENV DOCKER_HOME=/srv</span><br><span class="line"><span class="comment"># Directory in container for project source files</span></span><br><span class="line">ENV DOCKER_PROJECT=/srv/webapp  <span class="comment"># mysite2下面的文件</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 安装基础镜像中缺失的软件</span></span><br><span class="line"><span class="comment"># Install required packages and remove the apt packages cache when done.</span></span><br><span class="line">RUN yum -y install epel-release &amp;&amp; \</span><br><span class="line">    yum -y install <span class="built_in">which</span> &amp;&amp; \</span><br><span class="line">    yum -y install python-pip &amp;&amp; \</span><br><span class="line">    yum -y install supervisor-3.1.4 &amp;&amp; \</span><br><span class="line">    yum -y install git nginx gcc gcc-c++ python-devel &amp;&amp; \</span><br><span class="line">    yum -y install mysql &amp;&amp; \</span><br><span class="line">    yum -y install mysql-devel &amp;&amp; \</span><br><span class="line">    yum -y install nc &amp;&amp; \</span><br><span class="line">    yum clean all &amp;&amp; \</span><br><span class="line">    pip install -U pip</span><br><span class="line"></span><br><span class="line"><span class="comment"># cd $DOCKER_PROJECT</span></span><br><span class="line">WORKDIR <span class="variable">$DOCKER_PROJECT</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># COPY指令将从构建上下文目录中 &lt;源路径&gt; 的文件/目录复制到新的一层的镜像内的 &lt;目标路径&gt; 位置</span></span><br><span class="line"><span class="comment"># 即Dockerfile所在目录下的文件复制到$DOCKER_PROJECT</span></span><br><span class="line">COPY ./ ./</span><br><span class="line"></span><br><span class="line"><span class="comment"># Create application subdirectories</span></span><br><span class="line">WORKDIR <span class="variable">$DOCKER_PROJECT</span></span><br><span class="line">RUN mkdir static <span class="built_in">log</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 在 Dockerfile 中，可以事先指定某些目录挂载为匿名卷，这样在运行时如果用户不指定挂载，其应用也可以正常运行，不会向容器存储层写入大量数据</span></span><br><span class="line">VOLUME [<span class="string">"<span class="variable">$DOCKER_HOME</span>/media/"</span>]</span><br><span class="line"></span><br><span class="line"><span class="comment"># RUN pip install -r requirements.txt</span></span><br><span class="line">RUN pip install -i https://pypi.tuna.tsinghua.edu.cn/simple -r requirements.txt</span><br><span class="line"></span><br><span class="line"><span class="comment"># 暴露某些端口</span></span><br><span class="line">EXPOSE 8000</span><br><span class="line"></span><br><span class="line"><span class="comment"># 指定容器启动入口</span></span><br><span class="line">RUN chmod u+x start_script</span><br><span class="line">ENTRYPOINT [<span class="string">"./start_script"</span>]</span><br></pre></td></tr></table></figure>
<p>构建镜像：</p>
<p><img src="/assets/images2019/1547635956715.png" alt="1547635956715"></p>
<p>构建成功：</p>
<p><img src="/assets/images2019/1547636296801.png" alt="1547636296801"></p>
<p>测试容器：</p>
<p><code>mysite2</code>应用中用到了数据库，需要先启动mysql容器：</p>
<figure class="highlight sh"><table><tr><td class="code"><pre><span class="line">docker run --name db -d -e MYSQL_ROOT_PASSWORD=qwerasdf -e MYSQL_DATABASE=mysite2_db -v /root/mysite2_db:/var/lib/mysql mysql:5.7</span><br></pre></td></tr></table></figure>
<p>通过<code>mysql:5.7</code>镜像创建mysql容器时，会自动创建名为<code>mysite2_db</code>的数据库，并设置数据库密码为<code>qwerasdf</code>,以备连接。容器中的<code>/var/lib/mysql</code>目录会同步到数据卷<code>/root/mysite2_db</code>。</p>
<p>执行后如下：</p>
<p><img src="/assets/images2019/1547637360611.png" alt="1547637360611"></p>
<p>然后，通过已制作好的镜像<code>zeng/docker_demo_gunicorn:0.3</code>来启动<code>mysite2</code>：</p>
<p><img src="/assets/images2019/1547637610068.png" alt="1547637610068"></p>
<p>启动成功：</p>
<p><img src="/assets/images2019/1547637646260.png" alt="1547637646260"></p>
<p>浏览器访问：</p>
<p><img src="/assets/images2019/1547637779496.png" alt="1547637779496"></p>
<p>因为<code>mysite2</code>没有处理这个请求路径，改为：</p>
<p><img src="/assets/images2019/1547637911779.png" alt="1547637911779"></p>
<p>对接mysql时，用户名、密码是在django settings里有如下配置：</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">DATABASES = &#123;</span><br><span class="line">    <span class="string">'default'</span>:&#123;</span><br><span class="line">        <span class="string">'ENGINE'</span>: <span class="string">'django.db.backends.mysql'</span>,</span><br><span class="line">        <span class="string">'NAME'</span>:<span class="string">'mysite2_db'</span>,</span><br><span class="line">        <span class="string">'USER'</span>:<span class="string">'root'</span>,</span><br><span class="line">        <span class="string">'PASSWORD'</span>: os.environ.get(<span class="string">'DB_ENV_MYSQL_ROOT_PASSWORD'</span>),</span><br><span class="line">        <span class="string">'HOST'</span>:os.environ.get(<span class="string">'DB_PORT_3306_TCP_ADDR'</span>),</span><br><span class="line">        <span class="string">'PORT'</span>:<span class="number">3306</span>,</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p><code>start_script</code>：</p>
<figure class="highlight sh"><table><tr><td class="code"><pre><span class="line"><span class="meta">#!/bin/bash</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># nginx settings</span></span><br><span class="line">sed -i <span class="string">'/user/&#123;s/nginx/root/&#125;'</span> /etc/nginx/nginx.conf</span><br><span class="line">ln -s /srv/webapp/mysite2_nginx.conf /etc/nginx/conf.d/</span><br><span class="line">nginx</span><br><span class="line"></span><br><span class="line">chmod u+x <span class="built_in">wait</span>-for-it.sh</span><br><span class="line">./<span class="built_in">wait</span>-for-it.sh <span class="variable">$DB_PORT_3306_TCP_ADDR</span>:<span class="variable">$DB_PORT_3306_TCP_PORT</span> &amp;</span><br><span class="line"><span class="built_in">wait</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># application settings</span></span><br><span class="line"><span class="built_in">export</span> DJANGO_SETTINGS_MODULE=mysite2.settings.server</span><br><span class="line"><span class="built_in">cd</span> mysite2</span><br><span class="line">./manage.py migrate --noinput</span><br><span class="line">./manage.py loaddata ./fixtures/superuser.json  <span class="comment"># 加载root用户信息，见下</span></span><br><span class="line">./manage.py collectstatic --noinput</span><br><span class="line"></span><br><span class="line"><span class="comment"># 容器中启动mysite2</span></span><br><span class="line">ln -s /srv/webapp/mysite2_supervisord.ini /etc/supervisord.d/</span><br><span class="line">supervisord -c /etc/supervisord.conf</span><br></pre></td></tr></table></figure>
<p>mysite2/fixtures/superuser.json：</p>
<figure class="highlight json"><table><tr><td class="code"><pre><span class="line">[</span><br><span class="line">    &#123; <span class="attr">"model"</span>: <span class="string">"auth.user"</span>,</span><br><span class="line">        <span class="attr">"pk"</span>: <span class="number">1</span>,</span><br><span class="line">        <span class="attr">"fields"</span>: &#123;</span><br><span class="line">            <span class="attr">"username"</span>: <span class="string">"root"</span>,</span><br><span class="line">            <span class="attr">"password"</span>: <span class="string">"pbkdf2_sha256$36000$jEzTV4h887Ze$zQQMAMraWN9suHPapbb7LOP6pZ3ADc7KxCUv2oR8Px4="</span>,</span><br><span class="line">            <span class="attr">"is_superuser"</span>: <span class="literal">true</span>,</span><br><span class="line">            <span class="attr">"is_staff"</span>: <span class="literal">true</span>,</span><br><span class="line">            <span class="attr">"is_active"</span>: <span class="literal">true</span></span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">]</span><br></pre></td></tr></table></figure>
<p>其中的password生成方式如下：</p>
<figure class="highlight sh"><table><tr><td class="code"><pre><span class="line">[root@lzzeng mysite2]<span class="comment"># export DJANGO_SETTINGS_MODULE=mysite2.settings.server</span></span><br><span class="line">[root@lzzeng mysite2]<span class="comment"># python</span></span><br><span class="line">Python 2.7.5 (default, Oct 30 2018, 23:45:53) </span><br><span class="line">[GCC 4.8.5 20150623 (Red Hat 4.8.5-36)] on linux2</span><br><span class="line">Type <span class="string">"help"</span>, <span class="string">"copyright"</span>, <span class="string">"credits"</span> or <span class="string">"license"</span> <span class="keyword">for</span> more information.</span><br><span class="line">&gt;&gt;&gt; from django.contrib.auth.hashers import make_password</span><br><span class="line">&gt;&gt;&gt; make_password(<span class="string">'qwerasdf'</span>)</span><br><span class="line">u<span class="string">'pbkdf2_sha256$36000$jEzTV4h887Ze$zQQMAMraWN9suHPapbb7LOP6pZ3ADc7KxCUv2oR8Px4='</span></span><br><span class="line">&gt;&gt;&gt;</span><br></pre></td></tr></table></figure>
<p>以<code>root:qwerasdf</code>登录admin页面添加polls记录后，效果如下：</p>
<p><img src="/assets/images2019/1547639904076.png" alt="1547639904076"></p>
<p>以上完成了docker镜像制作（未上传到远程镜像库），然后使用镜像运行mysite2的过程。</p>
<hr>
<h3 id="使用docker-compose"><a href="#使用docker-compose" class="headerlink" title="使用docker-compose"></a>使用docker-compose</h3><p>上面启动了两个容器，比较麻烦。可以使用docker-compose来编排容器，实现微服务架构部署方式。</p>
<p>编写<code>docker-compose.yml</code>：</p>
<figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="attr">web:</span></span><br><span class="line">    <span class="attr">image:</span> <span class="string">zeng/docker_demo_gunicorn:0.3</span></span><br><span class="line">    <span class="attr">links:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">"db"</span></span><br><span class="line">    <span class="attr">ports:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">"8100:8000"</span></span><br><span class="line"><span class="comment">#    volumes:</span></span><br><span class="line"><span class="comment">#      - "$&#123;DOCKER_VOLUME_PATH&#125;/docker_demo/media:/root/media"</span></span><br><span class="line">    <span class="attr">restart:</span> <span class="string">always</span></span><br><span class="line"></span><br><span class="line"><span class="attr">db:</span></span><br><span class="line">    <span class="attr">image:</span> <span class="string">mysql:5.7</span></span><br><span class="line">    <span class="attr">environment:</span></span><br><span class="line">      <span class="attr">TZ:</span> <span class="string">'Asia/Shanghai'</span></span><br><span class="line">      <span class="attr">MYSQL_ROOT_PASSWORD:</span> <span class="string">qwerasdf</span></span><br><span class="line">      <span class="attr">MYSQL_DATABASE:</span> <span class="string">mysite2_db</span></span><br><span class="line">    <span class="attr">restart:</span> <span class="string">always</span></span><br><span class="line">    <span class="attr">command:</span> <span class="string">['mysqld',</span> <span class="string">'--character-set-server=utf8'</span><span class="string">]</span></span><br><span class="line">    <span class="attr">volumes:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">"$&#123;DOCKER_VOLUME_PATH&#125;/docker_demo/db:/var/lib/mysql"</span></span><br></pre></td></tr></table></figure>
<p>先停止、删除正在运行的容器：</p>
<p><img src="/assets/images2019/1547640333927.png" alt="1547640333927"></p>
<p><code>docker-compose up</code>：</p>
<p><img src="/assets/images2019/1547640687934.png" alt="1547640687934"></p>
<p>启动成功：</p>
<p><img src="/assets/images2019/1547640743179.png" alt="1547640743179"></p>
<p>停止：<code>docker-compose stop</code></p>
<hr>
<h3 id="参考文档"><a href="#参考文档" class="headerlink" title="参考文档"></a>参考文档</h3><ul>
<li><a href="https://yeasy.gitbooks.io/docker_practice/" target="_blank" rel="noopener">Docker — 从入门到实践</a></li>
</ul>
<p>(End)</p>
]]></content>
      <categories>
        <category>Docker</category>
      </categories>
      <tags>
        <tag>Docker</tag>
      </tags>
  </entry>
  <entry>
    <title>单例模式-实验</title>
    <url>/pages/singleton-test/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\pages\assets\css\APlayer.min.css"><script src="\pages\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><hr>
<h3 id="饿汉式"><a href="#饿汉式" class="headerlink" title="饿汉式"></a>饿汉式</h3><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 饿汉式</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">SingletonType1</span> </span>&#123;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> SingletonType1 singletonType1 = <span class="keyword">new</span> SingletonType1();</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">private</span> <span class="title">SingletonType1</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> SingletonType1 <span class="title">getInstance</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> singletonType1;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<a id="more"></a>
<p>测试代码：</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> java.util.ArrayList;</span><br><span class="line"><span class="keyword">import</span> java.util.HashSet;</span><br><span class="line"><span class="keyword">import</span> java.util.List;</span><br><span class="line"><span class="keyword">import</span> java.util.Set;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">SingletonTest</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">        List&lt;Thread&gt; threadList = <span class="keyword">new</span> ArrayList&lt;&gt;();</span><br><span class="line">        Set&lt;Singleton&gt; singletonSet = <span class="keyword">new</span> HashSet&lt;&gt;();</span><br><span class="line">        <span class="keyword">final</span> <span class="keyword">int</span> SET_MAXSIZE = <span class="number">100</span>;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; SET_MAXSIZE; i++) &#123;</span><br><span class="line">            Thread th = <span class="keyword">new</span> Thread(<span class="keyword">new</span> Runnable() &#123;</span><br><span class="line">                <span class="meta">@Override</span></span><br><span class="line">                <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">run</span><span class="params">()</span> </span>&#123;</span><br><span class="line">                    SingletonType1 singleton = SingletonType1.getInstance();</span><br><span class="line">                    singletonSet.add(singleton);</span><br><span class="line">                    System.out.println(Thread.currentThread().getName() + <span class="string">":"</span> + singleton);</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;);</span><br><span class="line">            threadList.add(th);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">for</span> (Thread thread : threadList) &#123;</span><br><span class="line">            thread.start();</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            Thread.sleep(<span class="number">500</span>);</span><br><span class="line">        &#125; <span class="keyword">catch</span> (InterruptedException e) &#123;</span><br><span class="line">            e.printStackTrace();</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        System.out.println(singletonSet.size());</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>某次运行结果：</p>
<figure class="highlight tex"><table><tr><td class="code"><pre><span class="line">...</span><br><span class="line">Thread-59:cn.lzzeng.home.singleton.SingletonType1@e0614d</span><br><span class="line">Thread-61:cn.lzzeng.home.singleton.SingletonType1@e0614d</span><br><span class="line">Thread-62:cn.lzzeng.home.singleton.SingletonType1@e0614d</span><br><span class="line">Thread-63:cn.lzzeng.home.singleton.SingletonType1@e0614d</span><br><span class="line">3</span><br></pre></td></tr></table></figure>
<p>最后一行打印出来的size是3，难道<strong>饿汉式</strong>单例模式非线程安全？再查看前面100行打印的显示对象地址，均相同。其实，size计数不正确是<code>HashSet</code>导致的。<code>HashSet</code>不是线程安全的，可以用<code>ConcurrentHashMap</code>来替代相关代码：</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="comment">// Set&lt;Singleton&gt; singletonSet = new HashSet&lt;&gt;();</span></span><br><span class="line">Map&lt;String, String&gt; singletonMap = <span class="keyword">new</span> ConcurrentHashMap&lt;&gt;();</span><br><span class="line"><span class="comment">// singletonSet.add(singleton);</span></span><br><span class="line">singletonMap.put(singleton.toString(), <span class="string">""</span>);</span><br></pre></td></tr></table></figure>
<h3 id="懒汉式"><a href="#懒汉式" class="headerlink" title="懒汉式"></a>懒汉式</h3><ol>
<li><strong>懒汉式-非线程同步</strong></li>
</ol>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 懒汉式-非线程同步</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">SingletonType2</span> </span>&#123;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> SingletonType2 singtonType2;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">private</span> <span class="title">SingletonType2</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> SingletonType2 <span class="title">getInstance</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">if</span> (<span class="keyword">null</span> == singtonType2) &#123;</span><br><span class="line">            singtonType2 = <span class="keyword">new</span> SingletonType2();</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> singtonType2;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>再修改测试代码的这一行后再测试：</p>
   <figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="comment">// SingletonType1 singleton = SingletonType1.getInstance();</span></span><br><span class="line">SingletonType2 singleton = SingletonType2.getInstance();</span><br></pre></td></tr></table></figure>
<p>某次结果如下：</p>
   <figure class="highlight tex"><table><tr><td class="code"><pre><span class="line">Thread-2:cn.lzzeng.home.singleton.SingletonType2@11f7d35</span><br><span class="line">Thread-5:cn.lzzeng.home.singleton.SingletonType2@1e9b76c</span><br><span class="line">...</span><br><span class="line">Thread-0:cn.lzzeng.home.singleton.SingletonType2@1e9b76c</span><br><span class="line">2</span><br></pre></td></tr></table></figure>
<p>从打印的前2行来看，确实出现了获取实例不唯一的现象，可见是非线程安全的。</p>
<ol start="2">
<li><strong>懒汉式-线程同步</strong></li>
</ol>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 懒汉式-线程同步</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">SingletonType3</span> </span>&#123;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> SingletonType3 singtonType3;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">private</span> <span class="title">SingletonType3</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">synchronized</span> SingletonType3 <span class="title">getInstance</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">if</span> (<span class="keyword">null</span> == singtonType3) &#123;</span><br><span class="line">            singtonType3 = <span class="keyword">new</span> SingletonType3();</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> singtonType3;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>此法使用<code>synchronized</code>修饰static方法<code>getInstance</code>，实测未见异常。</p>
<p>如果改用类的class对象作为同步监视器对象，即如下：</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * synchronized类名.class</span></span><br><span class="line"><span class="comment"> * synchronized中不加if (null == singtonType3)，测试</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> SingletonType3 <span class="title">getInstance</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    <span class="keyword">if</span> (<span class="keyword">null</span> == singtonType3) &#123;</span><br><span class="line">        <span class="keyword">synchronized</span> (SingletonType3<span class="class">.<span class="keyword">class</span>) </span>&#123;</span><br><span class="line">            singtonType3 = <span class="keyword">new</span> SingletonType3();</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> singtonType3;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>这样看起来似乎没问题，但实测出现如下结果：</p>
<p><img src="/assets/images2019/1546591780472.png" alt="1546591780472"></p>
<p>这是为什么？上一种synchronized修饰方法的方式中，加锁后，进入方法执行时，首先会判断一次是否已存在单类的实例，而后一种方式synchronized后没有这个判断步骤。也就是说，要想只创建一个实例，<strong>加锁的区域必须包含判断是否已实例化的步骤</strong>。否则，仅仅是保证了多个线程通过new创建实例的过程在时序上不会发生重叠。</p>
<p>正确的写法：</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> SingletonType3 <span class="title">getInstance</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    <span class="keyword">if</span> (<span class="keyword">null</span> == singtonType3) &#123;</span><br><span class="line">        <span class="keyword">synchronized</span> (SingletonType3<span class="class">.<span class="keyword">class</span>) </span>&#123;</span><br><span class="line">            <span class="keyword">if</span> (<span class="keyword">null</span> == singtonType3) &#123;</span><br><span class="line">                singtonType3 = <span class="keyword">new</span> SingletonType3();</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> singtonType3;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h3 id="双重校验锁"><a href="#双重校验锁" class="headerlink" title="双重校验锁"></a>双重校验锁</h3><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 双重校验锁</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">SingletonType5</span> </span>&#123;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">volatile</span> <span class="keyword">static</span> SingletonType5 SingletonType5;</span><br><span class="line">    <span class="function"><span class="keyword">private</span> <span class="title">SingletonType5</span> <span class="params">()</span></span>&#123;&#125;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> SingletonType5 <span class="title">getInstance</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">if</span> (SingletonType5 == <span class="keyword">null</span>) &#123;</span><br><span class="line">            <span class="keyword">synchronized</span> (SingletonType5<span class="class">.<span class="keyword">class</span>) </span>&#123;</span><br><span class="line">                <span class="keyword">if</span> (SingletonType5 == <span class="keyword">null</span>) &#123;</span><br><span class="line">                    SingletonType5 = <span class="keyword">new</span> SingletonType5();</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> SingletonType5;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>双重校验锁方式采用双锁机制，安全且在多线程情况下能保持高性能。与第二种懒汉式的区别只在于多了一个<code>volatile</code>。</p>
<h3 id="静态内部类式"><a href="#静态内部类式" class="headerlink" title="静态内部类式"></a>静态内部类式</h3><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 静态内部类式</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">SingletonType4</span> </span>&#123;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> <span class="class"><span class="keyword">class</span> <span class="title">SingletonHolder</span> </span>&#123;</span><br><span class="line">        <span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">final</span> SingletonType4 INSTANCE = <span class="keyword">new</span> SingletonType4();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">private</span> <span class="title">SingletonType4</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">final</span> SingletonType4 <span class="title">getInstance</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> SingletonHolder.INSTANCE;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>这种方式同样利用了类加载机制来保证初始化实例时只有一个线程，它跟<strong>饿汉式</strong>不同的是：饿汉式只要 Singleton类（即<code>SingletonType1</code>）被加载了，就会实例化<code>instance</code>，没有达到懒加载的效果。而这种方式是Singleton类被加载后，只有显式地调用<code>getInstance</code>方法时，才会加载<code>SingletonHolder</code>类，从而实例化<code>instance</code>。</p>
<h3 id="枚举式"><a href="#枚举式" class="headerlink" title="枚举式"></a>枚举式</h3><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 传说中的最完美的单例模式</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">MySingleton</span> </span>&#123;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">enum</span> MyEnumSingle &#123;</span><br><span class="line">        INSTANCE;</span><br><span class="line">        <span class="keyword">private</span> MySingleton singleOne;</span><br><span class="line"></span><br><span class="line">        <span class="function"><span class="keyword">private</span> <span class="title">MyEnumSingle</span><span class="params">()</span> </span>&#123;</span><br><span class="line">            singleOne = <span class="keyword">new</span> MySingleton();</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="function"><span class="keyword">public</span> MySingleton <span class="title">getInstance</span><span class="params">()</span> </span>&#123;</span><br><span class="line">            <span class="keyword">return</span> singleOne;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">private</span> <span class="title">MySingleton</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> MySingleton <span class="title">getInstance</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> MyEnumSingle.INSTANCE.getInstance();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>枚举方式是Effective Java作者Josh Bloch提倡的方式。特点：</p>
<ul>
<li>避免了多线程同步问题，线程安全</li>
<li>支持序列化机制，防止反序列化重新创建新的对象，绝对防止多次实例化</li>
<li>可以防止利用反射强行构建单例对象</li>
<li>利用内部类实现懒加载</li>
</ul>
<hr>
<p>（End)</p>
]]></content>
      <categories>
        <category>其它</category>
      </categories>
      <tags>
        <tag>else</tag>
      </tags>
  </entry>
  <entry>
    <title>一个用Excel实现的万年历</title>
    <url>/pages/a-perpetual-calendar-implemented-by-excel/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\pages\assets\css\APlayer.min.css"><script src="\pages\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><hr>
<p>Excel版本：V2007以上，不使用VBA</p>
<h3 id="效果图"><a href="#效果图" class="headerlink" title="效果图"></a>效果图</h3><p><strong>2019年</strong></p>
<p><img src="/assets/images2019/1546527646465.png" alt="1546527646465"></p>
<a id="more"></a>
<p><strong>南宋末期公元1234年，蒙古灭金，次年麾兵南下，入侵南宋 …</strong></p>
<p><img src="/assets/images2019/1546527761384.png" alt="1546527761384"></p>
<p><strong>“地球年：18903729</strong><br><strong>程心把最后一个数字的位数数了三遍，然后默默转身走出穿梭机 ……” —— 《三体 - 死神永生》</strong></p>
<p><img src="/assets/images2019/1546527786540.png" alt="1546527786540"></p>
<h3 id="实现方法"><a href="#实现方法" class="headerlink" title="实现方法"></a>实现方法</h3><p><img src="/assets/images2019/1546527883211.png" alt="1546527883211"></p>
<p><strong>一共使用了17个自定义名称，不依赖一行VBA代码。</strong></p>
<p>这17个名称中，有2个相当于接收输入的参数：_y对应年，_m对应月。_unit0是单元格B5的别名。其余14个名称（公式）基于输入的年月，相互关联地完成了自动计算值的过程。</p>
<p><a href="/assets/files/calendar.xlsx">附件：calendar.xlsx</a></p>
<hr>
<p>（End)</p>
]]></content>
      <categories>
        <category>其它</category>
      </categories>
      <tags>
        <tag>else</tag>
      </tags>
  </entry>
  <entry>
    <title>Git命令备忘</title>
    <url>/pages/config-management/git-memo/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\pages\assets\css\APlayer.min.css"><script src="\pages\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><hr>
<h3 id="创建远程仓库"><a href="#创建远程仓库" class="headerlink" title="创建远程仓库"></a>创建远程仓库</h3><h4 id="init-remote"><a href="#init-remote" class="headerlink" title="init, remote"></a>init, remote</h4><figure class="highlight sh"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 以github为例，先在github上新建远程仓库git_repo</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 创建本地仓库</span></span><br><span class="line">mkdir git_repo</span><br><span class="line"><span class="built_in">cd</span> git_repo</span><br><span class="line">git init</span><br><span class="line"></span><br><span class="line"><span class="comment"># github上创建的新仓库是默认的远程版本库名称是origin，默认分支master</span></span><br><span class="line"><span class="comment"># 添加远程版本库设置</span></span><br><span class="line"><span class="comment"># git remote add origin https://github.com/&lt;github_user&gt;/git_repo.git</span></span><br><span class="line">git remote add origin git@github.com:&lt;github_user&gt;/git_repo.git</span><br><span class="line"></span><br><span class="line"><span class="comment"># 查看远程版本库设置</span></span><br><span class="line">git remote -v</span><br><span class="line"></span><br><span class="line"><span class="comment"># 删除远程版本库设置(origin用户)</span></span><br><span class="line">git remote remove origin</span><br><span class="line"></span><br><span class="line"><span class="comment"># 也可尝试直接编辑.git里的相应文件来修改设置</span></span><br></pre></td></tr></table></figure>
<a id="more"></a>
<p><img src="/assets/images2019/1546331161329.png" alt="1546331161329"></p>
<h4 id="add-commit-push"><a href="#add-commit-push" class="headerlink" title="add, commit, push"></a>add, commit, push</h4><figure class="highlight sh"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 添加文件</span></span><br><span class="line"><span class="comment"># ...</span></span><br><span class="line">git status</span><br><span class="line">git add .</span><br><span class="line">git commit -m <span class="string">"..."</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 修改文件</span></span><br><span class="line"><span class="comment"># ...</span></span><br><span class="line">git add .</span><br><span class="line">git status	<span class="comment"># 查看状态</span></span><br><span class="line">git commit -m <span class="string">"..."</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 删除文件</span></span><br><span class="line"><span class="comment"># ...</span></span><br><span class="line">git add -A</span><br><span class="line">git commit -m <span class="string">"..."</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 继续修改</span></span><br><span class="line"><span class="comment"># ...</span></span><br><span class="line"><span class="comment"># add &amp; commit</span></span><br><span class="line">git commit -a -m <span class="string">"..."</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># push</span></span><br><span class="line">git push -u origin master</span><br></pre></td></tr></table></figure>
<h3 id="基于远程仓库修改"><a href="#基于远程仓库修改" class="headerlink" title="基于远程仓库修改"></a>基于远程仓库修改</h3><h4 id="pull、clone"><a href="#pull、clone" class="headerlink" title="pull、clone"></a>pull、clone</h4><figure class="highlight sh"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 与远端同步</span></span><br><span class="line"><span class="built_in">cd</span> git_repo</span><br><span class="line">git pull</span><br><span class="line"></span><br><span class="line"><span class="comment"># 不使用本地git_repo</span></span><br><span class="line">git <span class="built_in">clone</span> https://github.com/username/git_repo.git</span><br><span class="line"><span class="built_in">cd</span> git_repo</span><br><span class="line"></span><br><span class="line"><span class="comment"># 修改 ...</span></span><br><span class="line"><span class="comment"># ...</span></span><br><span class="line">git commit -a -m <span class="string">"..."</span></span><br><span class="line">git push</span><br></pre></td></tr></table></figure>
<h3 id="新建、切换分支"><a href="#新建、切换分支" class="headerlink" title="新建、切换分支"></a>新建、切换分支</h3><h4 id="checkout"><a href="#checkout" class="headerlink" title="checkout"></a>checkout</h4><figure class="highlight sh"><table><tr><td class="code"><pre><span class="line"><span class="built_in">cd</span> git_repo</span><br><span class="line"><span class="comment"># 基于默认分支master，新建名为test的分支，并切换至test分支</span></span><br><span class="line">git checkout -b <span class="built_in">test</span></span><br><span class="line">git push -u origin <span class="built_in">test</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 已经存在test分支时，不加"-b"切换</span></span><br><span class="line">git checkout <span class="built_in">test</span></span><br></pre></td></tr></table></figure>
<h3 id="修改历史提交"><a href="#修改历史提交" class="headerlink" title="修改历史提交"></a>修改历史提交</h3><h4 id="revert"><a href="#revert" class="headerlink" title="revert"></a>revert</h4><figure class="highlight sh"><table><tr><td class="code"><pre><span class="line"><span class="built_in">cd</span> git_repo</span><br><span class="line">git pull</span><br><span class="line">git <span class="built_in">log</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 撤销上次提交，会产生一次新的提交，与上上次内容的相同</span></span><br><span class="line">git revert HEAD</span><br></pre></td></tr></table></figure>
<h4 id="reset"><a href="#reset" class="headerlink" title="reset"></a>reset</h4><figure class="highlight sh"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 重置到上上次提交</span></span><br><span class="line">git reset --hard HEAD^</span><br><span class="line"></span><br><span class="line"><span class="comment"># 重置到指定commit</span></span><br><span class="line">git reset --hard &lt;commit_id&gt;</span><br><span class="line"></span><br><span class="line"><span class="comment"># 重置后，滞后于远程版本库，需强制push</span></span><br><span class="line">git push origin master -f</span><br></pre></td></tr></table></figure>
<h4 id="rebase"><a href="#rebase" class="headerlink" title="rebase"></a>rebase</h4><figure class="highlight sh"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 改变基线</span></span><br><span class="line">git rebase -i &lt;commit_id&gt;</span><br><span class="line"><span class="comment"># 修改</span></span><br><span class="line"><span class="comment"># ...</span></span><br><span class="line">git add .</span><br><span class="line">git commit --amend</span><br><span class="line">git rebase --<span class="built_in">continue</span></span><br><span class="line"><span class="comment"># ...</span></span><br><span class="line">git push origin master -f</span><br></pre></td></tr></table></figure>
<p>rebase前：</p>
<p><img src="/assets/images2019/1546334928965.png" alt="1546334928965"></p>
<p>rebase到5c9af：</p>
<p>执行git rebase -i &lt;commit_id&gt;后，会自动打开一个文件，pick表示选取某些提交，edit表示选取并编辑某些提交：</p>
<p><img src="/assets/images2019/1546335631435.png" alt="1546335631435"></p>
<p><img src="/assets/images2019/1546335712261.png" alt="1546335712261"></p>
<p><img src="/assets/images2019/1546335005491.png" alt="1546335005491"></p>
<p>因上面修改了2行为edit，edit第二次：</p>
<p><img src="/assets/images2019/1546335118983.png" alt="1546335118983"></p>
<hr>
<p>(End)</p>
]]></content>
      <categories>
        <category>Git</category>
      </categories>
      <tags>
        <tag>Git</tag>
      </tags>
  </entry>
  <entry>
    <title>Jenkins API 使用示例——shell篇(2/2)</title>
    <url>/pages/cicd/how-to-use-jenkins-api-in-shell-part2/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\pages\assets\css\APlayer.min.css"><script src="\pages\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><hr>
<p>环境：Jenkins V2.150.1</p>
<h3 id="获取所有job名称"><a href="#获取所有job名称" class="headerlink" title="获取所有job名称"></a>获取所有job名称</h3><p>命令：</p>
<figure class="highlight sh"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 获取crumb</span></span><br><span class="line">crumb=$(curl -u <span class="string">"<span class="variable">$jenkins_user</span>:<span class="variable">$jenkins_password</span>"</span> <span class="variable">$jenkins_url</span>/crumbIssuer/api/xml?xpath=concat\(//crumbRequestField,%22:%22,//crumb\))</span><br><span class="line"></span><br><span class="line"><span class="comment"># 获取job列表</span></span><br><span class="line">curl -sX GET <span class="string">"<span class="variable">$jenkins_url</span>/api/json?pretty=true"</span> -H <span class="string">"<span class="variable">$crumb</span>"</span> -u <span class="string">"<span class="variable">$jenkins_user</span>:<span class="variable">$jenkins_password</span>"</span> |grep <span class="string">'"url"'</span> |grep <span class="string">'/job/'</span> |sed -e <span class="string">'s@^.*job/\(.*\)/.*$@\1@'</span></span><br></pre></td></tr></table></figure>
<a id="more"></a>
<p>示例：</p>
<figure class="highlight tex"><table><tr><td class="code"><pre><span class="line">[root@lzzeng opt]#curl -sX GET 'http://188.131.xxx.xxx:8088/jenkins/api/json?pretty=true' -H Jenkins-Crumb:a1b3b82a61bf4672e6d9003de37xxxxx -u "<span class="formula">$jenkins_user:$</span>jenkins_password" |grep '"url"' |grep '/job/' |sed -e 's@^.*job/<span class="tag">\<span class="name">(</span></span>.*<span class="tag">\<span class="name">)</span></span>/.*<span class="formula">$@<span class="tag">\</span>1@'</span></span><br><span class="line"><span class="formula">test_job</span></span><br><span class="line"><span class="formula">test_job_with_parameter</span></span><br></pre></td></tr></table></figure>
<h3 id="构建job"><a href="#构建job" class="headerlink" title="构建job"></a>构建job</h3><p>命令：</p>
<figure class="highlight sh"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 无参数构建</span></span><br><span class="line">curl -sX POST <span class="string">"<span class="variable">$jenkins_url</span>/job/<span class="variable">$job_name</span>/build"</span> -u <span class="string">"<span class="variable">$jenkins_user</span>:<span class="variable">$jenkins_password</span>"</span> -H <span class="string">"<span class="variable">$crumb</span>"</span></span><br><span class="line"><span class="comment"># 带参数构建</span></span><br><span class="line">curl -sX POST <span class="string">"<span class="variable">$jenkins_url</span>/job/<span class="variable">$job_name</span>/buildWithParameters"</span> -u <span class="string">"<span class="variable">$jenkins_user</span>:<span class="variable">$jenkins_password</span>"</span> -H <span class="string">"<span class="variable">$crumb</span>"</span> -d <span class="variable">$parameter_name</span>=<span class="variable">$parameter_value</span></span><br></pre></td></tr></table></figure>
<p>示例：</p>
<figure class="highlight tex"><table><tr><td class="code"><pre><span class="line">[root@lzzeng opt]# curl -sX POST http://188.131.xxx.xxx:8088/jenkins/job/test_job/build -u "<span class="formula">$jenkins_user:$</span>jenkins_password" -H Jenkins-Crumb:a1b3b82a61bf4672e6d9003de37xxxxx</span><br><span class="line">[root@lzzeng opt]# curl -sX POST http://188.131.xxx.xxx:8088/jenkins/job/test_job_with_parameter/buildWithParameters -u "<span class="formula">$jenkins_user:$</span>jenkins_password" -H Jenkins-Crumb:a1b3b82a61bf4672e6d9003de37xxxxx -d param1=/var -d param2=/srv</span><br><span class="line">[root@lzzeng opt]#</span><br></pre></td></tr></table></figure>
<p>查看Jenkins，可以看到参数传递正确：</p>
<p><img src="/assets/images2018/1546328035535.png" alt="1546328035535"></p>
<h3 id="禁用job"><a href="#禁用job" class="headerlink" title="禁用job"></a>禁用job</h3><p>命令：</p>
<figure class="highlight sh"><table><tr><td class="code"><pre><span class="line">curl -sX POST <span class="string">"<span class="variable">$jenkins_url</span>/job/<span class="variable">$job_name</span>/disable"</span> -u <span class="string">"<span class="variable">$jenkins_user</span>:<span class="variable">$jenkins_password</span>"</span> -H <span class="string">"<span class="variable">$crumb</span>"</span></span><br></pre></td></tr></table></figure>
<p>示例：</p>
<figure class="highlight tex"><table><tr><td class="code"><pre><span class="line">[root@lzzeng opt]# curl -sX POST http://188.131.xxx.xxx:8088/jenkins/job/test_job_with_parameter/disable -u "<span class="formula">$jenkins_user:$</span>jenkins_password" -H Jenkins-Crumb:a1b3b82a61bf4672e6d9003de37xxxxx</span><br><span class="line">[root@lzzeng opt]#</span><br></pre></td></tr></table></figure>
<p><img src="/assets/images2018/1546326537132.png" alt="1546326537132"></p>
<h3 id="获取构建结果"><a href="#获取构建结果" class="headerlink" title="获取构建结果"></a>获取构建结果</h3><p>命令：</p>
<figure class="highlight sh"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 最近一次构建结果</span></span><br><span class="line">curl -sX POST <span class="string">"<span class="variable">$jenkins_url</span>/job/<span class="variable">$job_name</span>/lastBuild/api/json?pretty=true"</span> -u <span class="string">"<span class="variable">$jenkins_user</span>:<span class="variable">$jenkins_password</span>"</span> -H <span class="string">"<span class="variable">$crumb</span>"</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 最近一次成功的构建结果</span></span><br><span class="line">curl -sX POST <span class="string">"<span class="variable">$jenkins_url</span>/job/<span class="variable">$job_name</span>/lastSuccessfulBuild/api/json?pretty=true"</span> -u <span class="string">"<span class="variable">$jenkins_user</span>:<span class="variable">$jenkins_password</span>"</span> -H <span class="string">"<span class="variable">$crumb</span>"</span></span><br></pre></td></tr></table></figure>
<p>示例：</p>
<figure class="highlight tex"><table><tr><td class="code"><pre><span class="line">[root@lzzeng opt]# curl -sX POST http://188.131.xxx.xxx:8088/jenkins/job/test_job_with_parameter/lastBuild/api/json?pretty=true -u "<span class="formula">$jenkins_user:$</span>jenkins_password" -H Jenkins-Crumb:a1b3b82a61bf4672e6d9003de37xxxxx</span><br></pre></td></tr></table></figure>
<p>如果要获取插件的结果，可以尝试添加请求参数<code>depth=2</code>，即变成<code>api/json?pretty=true&amp;depth=2</code></p>
<hr>
<p>(End)</p>
]]></content>
      <categories>
        <category>CICD</category>
      </categories>
      <tags>
        <tag>CICD</tag>
        <tag>Jenkins</tag>
      </tags>
  </entry>
  <entry>
    <title>Jenkins API 使用示例——shell篇(1/2)</title>
    <url>/pages/cicd/how-to-use-jenkins-api-in-shell/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\pages\assets\css\APlayer.min.css"><script src="\pages\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><hr>
<p>环境：Jenkins V2.150.1</p>
<h3 id="检测Job是否存在"><a href="#检测Job是否存在" class="headerlink" title="检测Job是否存在"></a>检测Job是否存在</h3><p>命令：</p>
<figure class="highlight sh"><table><tr><td class="code"><pre><span class="line">curl -X POST [-H <span class="string">"Content-Type:application/xml"</span>] <span class="string">"<span class="variable">$jenkins_url</span>/checkJobName?value=<span class="variable">$job_name</span>"</span> --user <span class="string">"<span class="variable">$jenkins_user</span>:<span class="variable">$jenkins_password</span>"</span></span><br></pre></td></tr></table></figure>
<p>其中，jenkins_password一般是使用jenkins_user的Jenkins API token，直接用密码也可以。</p>
<a id="more"></a>
<p>示例：</p>
<figure class="highlight tex"><table><tr><td class="code"><pre><span class="line">[root@lzzeng ~]# curl -X POST -H "Content-Type:application/xml" "http://188.131.xxx.xxx:8088/jenkins/checkJobName?value=test_job" --user "<span class="formula">$jenkins_user:$</span>jenkins_password"</span><br><span class="line">&lt;!doctype html&gt;&lt;html lang="en"&gt;&lt;head&gt;&lt;title&gt;HTTP Status 403 – Forbidden&lt;/title&gt;...&lt;/head&gt;&lt;body&gt;&lt;h1&gt;HTTP Status 403 – Forbidden&lt;/h1&gt;&lt;hr class="line" /&gt;&lt;p&gt;&lt;b&gt;Type&lt;/b&gt; Status Report&lt;/p&gt;&lt;p&gt;&lt;b&gt;Message&lt;/b&gt; No valid crumb was included in the request&lt;/p&gt;&lt;p&gt;&lt;b&gt;Description&lt;/b&gt; The server understood the request but refuses to authorize it.&lt;/p&gt;&lt;hr class="line" /&gt;&lt;h3&gt;Apache Tomcat/9.0.14&lt;/h3&gt;&lt;/body&gt;&lt;/html&gt;</span><br></pre></td></tr></table></figure>
<p>显示<code>HTTP Status 403 – Forbidden</code>，原因是Jenkins开启了<code>Prevent Cross Site Request Forgery exploits</code>，即<code>防止跨站请求伪造</code>。</p>
<p><img src="/assets/images2018/1546149521653.png" alt="1546149521653"></p>
<p>取消勾选，重试：</p>
<figure class="highlight tex"><table><tr><td class="code"><pre><span class="line">[root@lzzeng ~]# curl -X POST -H "Content-Type:application/xml" "http://188.131.xxx.xxx:8088/jenkins/checkJobName?value=test_job" --user "<span class="formula">$jenkins_user:$</span>jenkins_password"</span><br><span class="line">&lt;div class=error&gt;&lt;img src='/jenkins/static/141801f8/images/none.gif' height=16 width=1&gt;A job already exists with the name ‘test_job’&lt;/div&gt;</span><br></pre></td></tr></table></figure>
<p>可以看出，Jenkins上已存在名称为<code>test_job</code>的job。</p>
<p>如果检测的job不存在：</p>
<figure class="highlight tex"><table><tr><td class="code"><pre><span class="line">[root@lzzeng ~]# curl -X POST -H "Content-Type:application/xml" "http://188.131.xxx.xxx:8088/jenkins/checkJobName?value=test_job222" --user "<span class="formula">$jenkins_user:$</span>jenkins_password"</span><br><span class="line">&lt;div/&gt;[root@lzzeng ~]#</span><br></pre></td></tr></table></figure>
<p>输出为：<code>&lt;div/&gt;</code>。</p>
<h3 id="检测View是否存在"><a href="#检测View是否存在" class="headerlink" title="检测View是否存在"></a>检测View是否存在</h3><p>命令：</p>
<figure class="highlight sh"><table><tr><td class="code"><pre><span class="line">curl -X POST [-H <span class="string">"Content-Type:application/xml"</span>] <span class="string">"<span class="variable">$jenkins_url</span>/checkViewName?value=<span class="variable">$view_name</span>"</span> --user <span class="string">"<span class="variable">$jenkins_user</span>:<span class="variable">$jenkins_password</span>"</span></span><br></pre></td></tr></table></figure>
<p>示例：</p>
<figure class="highlight tex"><table><tr><td class="code"><pre><span class="line">[root@lzzeng ~]# curl -X POST -H "Content-Type:application/xml" "http://188.131.xxx.xxx:8088/jenkins/checkViewName?value=test_view" --user "<span class="formula">$jenkins_user:$</span>jenkins_password"</span><br><span class="line">&lt;div class=error&gt;&lt;img src='/jenkins/static/141801f8/images/none.gif' height=16 width=1&gt;A view already exists with the name &amp;quot;test_view&amp;quot;&lt;/div&gt;[root@lzzeng ~]#</span><br></pre></td></tr></table></figure>
<p>当view不存在时，和job不存在一样也是输出：<code>&lt;div/&gt;</code>。</p>
<p>据此，编写一段脚本：</p>
<figure class="highlight sh"><table><tr><td class="code"><pre><span class="line"><span class="keyword">function</span> <span class="function"><span class="title">checkJobView</span></span>()&#123;</span><br><span class="line">    <span class="comment"># Usage: </span></span><br><span class="line">    <span class="comment"># 1. checkJobView "job/&lt;job_name&gt;"</span></span><br><span class="line">    <span class="comment"># 2. checkJobView "view/&lt;view_name&gt;"</span></span><br><span class="line"></span><br><span class="line">    para=<span class="variable">$1</span></span><br><span class="line">    prefix=<span class="variable">$&#123;para%%/*&#125;</span></span><br><span class="line">    target=<span class="variable">$&#123;para##*/&#125;</span></span><br><span class="line">    method=$([ <span class="string">"<span class="variable">$prefix</span>"</span> = <span class="string">"job"</span> ] &amp;&amp; <span class="built_in">echo</span> checkJobName || <span class="built_in">echo</span> checkViewName)</span><br><span class="line">    crumb=$(curl -s -u <span class="string">"<span class="variable">$jenkins_user</span>:<span class="variable">$jenkins_password</span>"</span> <span class="variable">$jenkins_url</span>/crumbIssuer/api/xml?xpath=concat\(//crumbRequestField,%22:%22,//crumb\))</span><br><span class="line">    resp=$(curl -sX POST <span class="string">"<span class="variable">$jenkins_url</span>/<span class="variable">$method</span>?value=<span class="variable">$target</span>"</span> -u <span class="string">"<span class="variable">$jenkins_user</span>:<span class="variable">$jenkins_password</span>"</span> -H <span class="string">"<span class="variable">$crumb</span>"</span>)</span><br><span class="line">    <span class="built_in">test</span> <span class="string">"<span class="variable">$resp</span>"</span> != <span class="string">"&lt;div/&gt;"</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>作如下调用：</p>
<figure class="highlight sh"><table><tr><td class="code"><pre><span class="line">jenkins_url=http://188.131.xxx.xxx:8088/jenkins</span><br><span class="line">jenkins_user=<span class="variable">$jenkins_user</span></span><br><span class="line">jenkins_password=<span class="variable">$jenkins_password</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> checkJobView <span class="variable">$@</span>; <span class="keyword">then</span></span><br><span class="line">  <span class="built_in">echo</span> <span class="string">"exists"</span></span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">  <span class="built_in">echo</span> <span class="string">"not exist"</span></span><br><span class="line"><span class="keyword">fi</span></span><br></pre></td></tr></table></figure>
<p>脚本文件名为checkJobView.sh，测试结果如下：</p>
<figure class="highlight tex"><table><tr><td class="code"><pre><span class="line">[root@lzzeng opt]# sh checkJobView.sh view/test_view</span><br><span class="line">exists</span><br><span class="line">[root@lzzeng opt]# sh checkJobView.sh view/test_view222</span><br><span class="line">not exist</span><br><span class="line">[root@lzzeng opt]# sh checkJobView.sh job/test_job</span><br><span class="line">exists</span><br><span class="line">[root@lzzeng opt]# sh checkJobView.sh job/test_job222</span><br><span class="line">not exist</span><br></pre></td></tr></table></figure>
<p>其中，test_view是已存在的视图，test_job是已存在的任务，所以输出表示正确。</p>
<h3 id="备份Job"><a href="#备份Job" class="headerlink" title="备份Job"></a>备份Job</h3><p>命令：</p>
<figure class="highlight sh"><table><tr><td class="code"><pre><span class="line">curl -s -X GET <span class="string">"<span class="variable">$url_of_job_config_xml</span>"</span> -o <span class="string">"<span class="variable">$target_xml</span>"</span> --user <span class="string">"<span class="variable">$jenkins_user</span>:<span class="variable">$jenkins_password</span>"</span></span><br></pre></td></tr></table></figure>
<p>示例：</p>
<figure class="highlight tex"><table><tr><td class="code"><pre><span class="line">[root@lzzeng opt]# curl -sX GET "http://188.131.xxx.xxx:8088/jenkins/job/test_job/config.xml" -o test_job.xml --user "<span class="formula">$jenkins_user:$</span>jenkins_password"</span><br><span class="line">[root@lzzeng opt]# ls -lrt</span><br><span class="line">...</span><br><span class="line">-rw-r--r--  1 root root  837 Dec 30 14:46 checkJobView.sh</span><br><span class="line">-rw-r--r--  1 root root 1442 Dec 30 15:06 test_job.xml</span><br><span class="line">[root@lzzeng opt]# diff /root/.jenkins/jobs/test_job/config.xml test_job.xml </span><br><span class="line">[root@lzzeng opt]#</span><br></pre></td></tr></table></figure>
<p>可以看出，备份下来的test_job.xml与.jenkins配置目录下相应的config.xml一致。</p>
<h3 id="还原Job"><a href="#还原Job" class="headerlink" title="还原Job"></a>还原Job</h3><p>命令：</p>
<figure class="highlight sh"><table><tr><td class="code"><pre><span class="line">curl -sX POST <span class="string">"<span class="variable">$jenkins_url</span>/createItem?name=<span class="variable">$job_name</span>"</span> --data_binary <span class="string">"@<span class="variable">$target_xml</span>"</span> -H <span class="string">"ContentType:text/xml"</span> --user <span class="string">"<span class="variable">$jenkins_user</span>:<span class="variable">$jenkins_password</span>"</span></span><br></pre></td></tr></table></figure>
<p>假设Jenkins端已经删除（或移动）了test_job这个任务，还原如下：</p>
<figure class="highlight sh"><table><tr><td class="code"><pre><span class="line">curl -sX POST <span class="string">"http://188.131.xxx.xxx:8088/createItem?name=test_job"</span> --data_binary <span class="string">"@test_job.xml"</span> -H <span class="string">"ContentType:text/xml"</span> --user <span class="string">"<span class="variable">$jenkins_user</span>:<span class="variable">$jenkins_password</span>"</span></span><br></pre></td></tr></table></figure>
<p>在更低一些的Jenkins版本中，比如V2.72，此命令是生效的。但对于当前所用的Jenkins V2.150.1版本，虽然已经禁用了CSRF安全防护，此命令仍失败，错误信息如下：</p>
<figure class="highlight tex"><table><tr><td class="code"><pre><span class="line">...</span><br><span class="line">Monitor/jenkins.security.csrf.CSRFAdministrativeMonitor/disable"&gt;&lt;input name="Submit" type="submit" value="Dismiss" class="submit-button primary" /&gt;&lt;/form&gt;You have not configured the CSRF issuer. This could be a security issue. For more information, please refer to &lt;a href="https://jenkins.io/redirect/csrf-protection" target="_blank"&gt;this page&lt;/a&gt;.&lt;p&gt;&lt;/p&gt;You can change the current configuration using the Security section &lt;a href="/jenkins/configureSecurity"&gt;CSRF Protection&lt;/a&gt;.&lt;/div&gt;&lt;/div&gt;&lt;p style="text-align: center; margin: 10px 0 0 0;"&gt;&lt;a onclick="document.location.href='/jenkins/manage';" href="/jenkins/manage"&gt;Manage Jenkins&lt;/a&gt;&lt;/p&gt;&lt;/div&gt;&lt;/div&gt;&lt;script type="text/javascript"&gt;</span><br><span class="line">            document.getElementById("header").appendChild(document.getElementById("visible-am-container"));</span><br><span class="line">        &lt;/script&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;/footer&gt;&lt;/body&gt;&lt;/html&gt;[root@lzzeng opt]#</span><br></pre></td></tr></table></figure>
<p>其中提示：<code>You have not configured the CSRF issuer</code>。其实，出于安全考虑，禁用<code>防止跨站请求伪造</code>并不值得提倡，先恢复【图-1】的默认安全设置再试一次：</p>
<figure class="highlight tex"><table><tr><td class="code"><pre><span class="line">[root@lzzeng opt]# curl -sX POST "http://188.131.xxx.xxx:8088/jenkins/createItem?name=test_job" --data-binary "@test_job.xml" -H "ContentType:text/xml" --user "<span class="formula">$jenkins_user:$</span>jenkins_password"</span><br><span class="line">&lt;!doctype html&gt;&lt;html lang="en"&gt;&lt;head&gt;&lt;title&gt;HTTP Status 403 – Forbidden&lt;/title&gt;...&lt;/head&gt;&lt;body&gt;&lt;h1&gt;HTTP Status 403 – Forbidden&lt;/h1&gt;&lt;hr class="line" /&gt;&lt;p&gt;&lt;b&gt;Type&lt;/b&gt; Status Report&lt;/p&gt;&lt;p&gt;&lt;b&gt;Message&lt;/b&gt; No valid crumb was included in the request&lt;/p&gt;&lt;p&gt;&lt;b&gt;Description&lt;/b&gt; The server understood the request but refuses to authorize it.&lt;/p&gt;&lt;hr class="line" /&gt;&lt;h3&gt;Apache Tomcat/9.0.14&lt;/h3&gt;&lt;/body&gt;&lt;/html&gt;[root@lzzeng opt]#</span><br></pre></td></tr></table></figure>
<p>此时，错误信息变了，提示：<code>No valid crumb was included in the request</code>，解决如下：</p>
<p>先<strong>获取crumb </strong>：</p>
<p>命令：</p>
<figure class="highlight sh"><table><tr><td class="code"><pre><span class="line">curl -u <span class="string">"<span class="variable">$jenkins_user</span>:<span class="variable">$jenkins_password</span>"</span> <span class="string">"http://188.131.xxx.xxx:8088/jenkins/crumbIssuer/api/json"</span></span><br></pre></td></tr></table></figure>
<p>或者</p>
<figure class="highlight sh"><table><tr><td class="code"><pre><span class="line">curl -u <span class="string">"<span class="variable">$jenkins_user</span>:<span class="variable">$jenkins_password</span>"</span> <span class="string">"http://188.131.xxx.xxx:8088/jenkins/crumbIssuer/api/xml"</span></span><br></pre></td></tr></table></figure>
<p>会有类似如下的输出：</p>
<ul>
<li>json形式</li>
</ul>
<figure class="highlight tex"><table><tr><td class="code"><pre><span class="line">&#123;"_class":"hudson.security.csrf.DefaultCrumbIssuer","crumb":"a1b3b82a61bf4672e6d9003de37xxxxx","crumbRequestField":"Jenkins-Crumb"&#125;</span><br></pre></td></tr></table></figure>
<ul>
<li>xml形式</li>
</ul>
<figure class="highlight tex"><table><tr><td class="code"><pre><span class="line">&lt;defaultCrumbIssuer _class='hudson.security.csrf.DefaultCrumbIssuer'&gt;&lt;crumb&gt;a1b3b82a61bf4672e6d9003de37xxxxx&lt;/crumb&gt;&lt;crumbRequestField&gt;Jenkins-Crumb&lt;/crumbRequestField&gt;&lt;/defaultCrumbIssuer&gt;</span><br></pre></td></tr></table></figure>
<p>记下crumbRequestField字段和crumb字段的值，正确的请求需要添加一个Header：</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">-H &quot;crumbRequestField字段值:crumb字段值&quot;</span><br></pre></td></tr></table></figure>
<p>最终修改后的命令如下：</p>
<figure class="highlight sh"><table><tr><td class="code"><pre><span class="line">curl -sX POST <span class="string">"http://188.131.xxx.xxx:8088/jenkins/createItem?name=test_job"</span> --data-binary <span class="string">"@test_job.xml"</span> -H <span class="string">"Jenkins-Crumb:a1b3b82a61bf4672e6d9003de37xxxxx"</span> -H <span class="string">"Content-Type:text/xml"</span> -u <span class="string">"<span class="variable">$jenkins_user</span>:<span class="variable">$jenkins_password</span>"</span></span><br></pre></td></tr></table></figure>
<h3 id="备份View"><a href="#备份View" class="headerlink" title="备份View"></a>备份View</h3><p>命令：</p>
<figure class="highlight sh"><table><tr><td class="code"><pre><span class="line">curl -s -X GET <span class="string">"<span class="variable">$url_of_view_config_xml</span>"</span> -o <span class="string">"<span class="variable">$target_xml</span>"</span> [-H <span class="string">"<span class="variable">$crumbRequestField</span>:<span class="variable">$crumb</span>"</span>] -u <span class="string">"<span class="variable">$jenkins_user</span>:<span class="variable">$jenkins_password</span>"</span></span><br></pre></td></tr></table></figure>
<p>示例：</p>
<figure class="highlight sh"><table><tr><td class="code"><pre><span class="line">curl -sX GET <span class="string">"http://188.131.xxx.xxx:8088/jenkins/view/test_view/config.xml"</span> -o test_view.xml -u <span class="string">"<span class="variable">$jenkins_user</span>:<span class="variable">$jenkins_password</span>"</span></span><br></pre></td></tr></table></figure>
<h3 id="还原View"><a href="#还原View" class="headerlink" title="还原View"></a>还原View</h3><figure class="highlight sh"><table><tr><td class="code"><pre><span class="line">curl -sX POST <span class="string">"<span class="variable">$jenkins_url</span>/createView?name=<span class="variable">$view_name</span>"</span> --data-binary <span class="string">"@<span class="variable">$target_xml</span>"</span> -H <span class="string">"ContentType:text/xml"</span> -H <span class="string">"<span class="variable">$crumbRequestField</span>:<span class="variable">$crumb</span>"</span> -u <span class="string">"<span class="variable">$jenkins_user</span>:<span class="variable">$jenkins_password</span>"</span></span><br></pre></td></tr></table></figure>
<p>示例：</p>
<figure class="highlight sh"><table><tr><td class="code"><pre><span class="line">curl -sX POST <span class="string">"http://188.131.xxx.xxx:8088/jenkins/createView?name=test_view2"</span> --data-binary <span class="string">"@test_view.xml"</span> -H <span class="string">"Jenkins-Crumb:a1b3b82a61bf4672e6d9003de37xxxxx"</span> -H <span class="string">"Content-Type:text/xml"</span> --user <span class="string">"<span class="variable">$jenkins_user</span>:<span class="variable">$jenkins_password</span>"</span></span><br></pre></td></tr></table></figure>
<h3 id="将Job添加到View"><a href="#将Job添加到View" class="headerlink" title="将Job添加到View"></a>将Job添加到View</h3><p>命令：</p>
<figure class="highlight sh"><table><tr><td class="code"><pre><span class="line">curl -sX POST <span class="string">"<span class="variable">$jenkins_url</span>/view/<span class="variable">$view_name</span>/addJobToView?name=<span class="variable">$jobName</span>"</span> -H <span class="string">"<span class="variable">$crumbRequestField</span>:<span class="variable">$crumb</span>"</span> -u <span class="string">"<span class="variable">$jenkins_user</span>:<span class="variable">$jenkins_password</span>"</span></span><br></pre></td></tr></table></figure>
<p>示例：</p>
<figure class="highlight sh"><table><tr><td class="code"><pre><span class="line">curl -sX POST <span class="string">"http://188.131.xxx.xxx:8088/jenkins/view/test_view2/addJobToView?name=test_job"</span> -u <span class="string">"<span class="variable">$jenkins_user</span>:<span class="variable">$jenkins_password</span>"</span> -H <span class="string">"Jenkins-Crumb:a1b3b82a61bf4672e6d9003de37xxxxx"</span></span><br></pre></td></tr></table></figure>
<h3 id="删除Job"><a href="#删除Job" class="headerlink" title="删除Job"></a>删除Job</h3><p>命令：</p>
<figure class="highlight sh"><table><tr><td class="code"><pre><span class="line">curl -sX POST <span class="string">"<span class="variable">$jenkins_url</span>/job/<span class="variable">$job_name</span>/doDelete"</span> -H <span class="string">"<span class="variable">$crumbRequestField</span>:<span class="variable">$crumb</span>"</span> -u <span class="string">"<span class="variable">$jenkins_user</span>:<span class="variable">$jenkins_password</span>"</span></span><br></pre></td></tr></table></figure>
<p>示例：</p>
<figure class="highlight sh"><table><tr><td class="code"><pre><span class="line">curl -sX POST <span class="string">"http://188.131.xxx.xxx:8088/jenkins/job/test_job/doDelete"</span> -u <span class="string">"<span class="variable">$jenkins_user</span>:<span class="variable">$jenkins_password</span>"</span> -H <span class="string">"Jenkins-Crumb:a1b3b82a61bf4672e6d9003de37xxxxx"</span></span><br></pre></td></tr></table></figure>
<h3 id="删除View"><a href="#删除View" class="headerlink" title="删除View"></a>删除View</h3><p>命令：</p>
<figure class="highlight sh"><table><tr><td class="code"><pre><span class="line">curl -sX POST <span class="string">"<span class="variable">$jenkins_url</span>/view/<span class="variable">$view_name</span>/doDelete"</span> -H <span class="string">"<span class="variable">$crumbRequestField</span>:<span class="variable">$crumb</span>"</span> -u <span class="string">"<span class="variable">$jenkins_user</span>:<span class="variable">$jenkins_password</span>"</span></span><br></pre></td></tr></table></figure>
<p>示例：</p>
<figure class="highlight sh"><table><tr><td class="code"><pre><span class="line">curl -sX POST <span class="string">"http://188.131.xxx.xxx:8088/jenkins/view/test_view2/doDelete"</span> -u <span class="string">"<span class="variable">$jenkins_user</span>:<span class="variable">$jenkins_password</span>"</span> -H <span class="string">"Jenkins-Crumb:a1b3b82a61bf4672e6d9003de37xxxxx"</span></span><br></pre></td></tr></table></figure>
<p>删除View的时候，不会删除其中的Job。</p>
<hr>
<h3 id="小结"><a href="#小结" class="headerlink" title="小结"></a>小结</h3><p>以上命令，汇总如下：</p>
<figure class="highlight sh"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 获取crumb</span></span><br><span class="line">curl -u <span class="string">"<span class="variable">$jenkins_user</span>:<span class="variable">$jenkins_password</span>"</span> <span class="string">"<span class="variable">$jenkins_url</span>/crumbIssuer/api/&#123;xml|json&#125;"</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 打印$crumbRequestField:$crumb</span></span><br><span class="line">curl -u <span class="string">"<span class="variable">$jenkins_user</span>:<span class="variable">$jenkins_password</span>"</span> <span class="variable">$jenkins_url</span>/crumbIssuer/api/xml?xpath=concat\(//crumbRequestField,%22:%22,//crumb\)  <span class="comment"># 请求路径不能加引号，%22是双引号"的urlencode</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 检测job或view</span></span><br><span class="line">curl -X POST <span class="string">"<span class="variable">$jenkins_url</span>/&#123;checkJobName|checkViewName&#125;?value=<span class="variable">$target_name</span>"</span> -H <span class="string">"<span class="variable">$crumbRequestField</span>:<span class="variable">$crumb</span>"</span> -u <span class="string">"<span class="variable">$jenkins_user</span>:<span class="variable">$jenkins_password</span>"</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 备份job或view</span></span><br><span class="line">curl -s -X GET <span class="string">"<span class="variable">$jenkins_url</span>/&#123;job|view&#125;/<span class="variable">$target_name</span>/config.xml"</span> -o <span class="string">"<span class="variable">$target_xml_path</span>"</span> [-H <span class="string">"<span class="variable">$crumbRequestField</span>:<span class="variable">$crumb</span>"</span>] -u <span class="string">"<span class="variable">$jenkins_user</span>:<span class="variable">$jenkins_password</span>"</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 还原job或view</span></span><br><span class="line">curl -sX POST <span class="string">"<span class="variable">$jenkins_url</span>/&#123;createItem|createView&#125;?name=<span class="variable">$target_name</span>"</span> --data-binary <span class="string">"@<span class="variable">$target_xml_path</span>"</span> -H <span class="string">"ContentType:text/xml"</span> -H <span class="string">"<span class="variable">$crumbRequestField</span>:<span class="variable">$crumb</span>"</span> -u <span class="string">"<span class="variable">$jenkins_user</span>:<span class="variable">$jenkins_password</span>"</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 添加job到view中</span></span><br><span class="line">curl -sX POST <span class="string">"<span class="variable">$jenkins_url</span>/view/<span class="variable">$view_name</span>/addJobToView?name=<span class="variable">$jobName</span>"</span> -H <span class="string">"<span class="variable">$crumbRequestField</span>:<span class="variable">$crumb</span>"</span> -u <span class="string">"<span class="variable">$jenkins_user</span>:<span class="variable">$jenkins_password</span>"</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 删除job或view</span></span><br><span class="line">curl -sX POST <span class="string">"<span class="variable">$jenkins_url</span>/&#123;job|view&#125;/<span class="variable">$target_name</span>/doDelete"</span> -H <span class="string">"<span class="variable">$crumbRequestField</span>:<span class="variable">$crumb</span>"</span> -u <span class="string">"<span class="variable">$jenkins_user</span>:<span class="variable">$jenkins_password</span>"</span></span><br></pre></td></tr></table></figure>
<hr>
<p>(End)</p>
]]></content>
      <categories>
        <category>CICD</category>
      </categories>
      <tags>
        <tag>CICD</tag>
        <tag>Jenkins</tag>
      </tags>
  </entry>
  <entry>
    <title>搭建Apache HTTP服务</title>
    <url>/pages/how-to-use-apache-httpd/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\pages\assets\css\APlayer.min.css"><script src="\pages\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><hr>
<p>系统：CentOS 7.2</p>
<h3 id="更新EPEL源"><a href="#更新EPEL源" class="headerlink" title="更新EPEL源"></a>更新EPEL源</h3><p>   <strong><a href="https://fedoraproject.org/wiki/EPEL?rd=EPEL/en#What_is_Extra_Packages_for_Enterprise_Linux_.28or_EPEL.29.3F" target="_blank" rel="noopener">🔗</a> What is Extra Packages for Enterprise Linux (or EPEL)?</strong></p>
<p>Extra Packages for Enterprise Linux (or EPEL) is a Fedora Special Interest Group that creates, maintains, and manages a high quality set of additional packages for Enterprise Linux, including, but not limited to, <a href="https://fedoraproject.org/wiki/Red_Hat_Enterprise_Linux" target="_blank" rel="noopener">Red Hat Enterprise Linux</a> (RHEL), CentOS and Scientific Linux (SL), Oracle Linux (OL).</p>
<p><strong>EPEL</strong>（Extra Packages for Enterprise Linux）是由 Fedora 社区打造，为 RHEL 及衍生发行版如 CentOS等提供高质量软件包的项目。</p>
<a id="more"></a>
  <figure class="highlight sh"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 如果不能直接yum更新epel</span></span><br><span class="line">yum install epel-release -y</span><br><span class="line"><span class="comment"># 尝试</span></span><br><span class="line">yum install https://dl.fedoraproject.org/pub/epel/epel-release-latest-7.noarch.rpm</span><br><span class="line"><span class="comment"># 或者</span></span><br><span class="line">rpm -Uvh https://dl.fedoraproject.org/pub/epel/epel-release-latest-7.noarch.rpm</span><br><span class="line"><span class="comment"># 或者</span></span><br><span class="line">wget -O /etc/yum.repos.d/epel.repo http://mirrors.aliyun.com/repo/epel-7.repo</span><br></pre></td></tr></table></figure>
<h3 id="安装httpd"><a href="#安装httpd" class="headerlink" title="安装httpd"></a>安装httpd</h3>  <figure class="highlight sh"><table><tr><td class="code"><pre><span class="line">yum install -y httpd</span><br></pre></td></tr></table></figure>
<h3 id="开放80端口"><a href="#开放80端口" class="headerlink" title="开放80端口"></a>开放80端口</h3>  <figure class="highlight sh"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 如果直接关闭防火墙，则无需针对80端口的特殊设置</span></span><br><span class="line"><span class="comment"># systemctl stop firewall.service</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 开启防火墙</span></span><br><span class="line"><span class="comment"># systemctl start firewall.service</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 如果要使用iptables作防火墙</span></span><br><span class="line"><span class="comment"># yum -y install iptables-services</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 如果是firewall作防火墙，则</span></span><br><span class="line">firewall-cmd --zone public --add-port 80/tcp --pernerment</span><br><span class="line"></span><br><span class="line"><span class="comment"># 如果是iptables作防火墙</span></span><br><span class="line">/sbin/iptables -I INPUT -p tcp --dport 80 -j ACCEPT</span><br><span class="line">/sbin/iptables save</span><br><span class="line"><span class="comment"># 也可尝试用 /etc/init.d/iptables 或 /etc/rc.d/init.d/iptables</span></span><br></pre></td></tr></table></figure>
<p>  如果要让Apache使用其它端口，修改<code>/etc/httpd/conf/httpd.conf</code> :</p>
  <figure class="highlight"><table><tr><td class="code"><pre><span class="line">Listen &lt;port&gt;</span><br></pre></td></tr></table></figure>
<p>  修改默认网站根目录也是在此文件，默认目录是<code>/var/www/html</code>。</p>
<h3 id="自定义index-html"><a href="#自定义index-html" class="headerlink" title="自定义index.html"></a>自定义index.html</h3>  <figure class="highlight sh"><table><tr><td class="code"><pre><span class="line">mkdir -p /var/www/html/&#123;hello,mydoc&#125;  	<span class="comment">#测试创建2个目录</span></span><br><span class="line">chmod 755 /var/www/html/&#123;hello,mydoc&#125;</span><br></pre></td></tr></table></figure>
<p>   添加<code>/var/www/html/index.html</code>，内容如下：</p>
  <figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="meta-keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">"UTF-8"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>Title<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">style</span> <span class="attr">type</span>=<span class="string">"text/css"</span>&gt;</span></span><br><span class="line">        a:link, a:visited &#123;</span><br><span class="line">            text-decoration: none;</span><br><span class="line">        &#125;</span><br><span class="line">        a:hover &#123;</span><br><span class="line">            text-decoration: underline;</span><br><span class="line">        &#125;</span><br><span class="line">    <span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">h1</span>&gt;</span>Your page title<span class="tag">&lt;/<span class="name">h1</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">hr</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">ul</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">li</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"hello/"</span> <span class="attr">style</span>=<span class="string">"font-size:32px"</span>&gt;</span>Hello<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">li</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"mydoc/"</span> <span class="attr">style</span>=<span class="string">"font-size:32px"</span>&gt;</span>mydoc<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">ul</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure>
<p>  首页效果：</p>
<p>  <img src="/assets/images2018/1546087466767.png" alt="图片1"></p>
<h3 id="调整显示设置"><a href="#调整显示设置" class="headerlink" title="调整显示设置"></a>调整显示设置</h3><p>  添加到<code>/etc/httpd/conf/httpd.conf</code>：</p>
  <figure class="highlight"><table><tr><td class="code"><pre><span class="line">IndexOptions NameWidth=60	#Name列宽60</span><br><span class="line">IndexOptions IconHeight=16	#图标高16</span><br><span class="line">IndexOptions IconWidth=16	#，宽16</span><br><span class="line">IndexOptions FoldersFirst	#目录在前</span><br><span class="line">IndexOptions VersionSort	#版本排序</span><br></pre></td></tr></table></figure>
  <figure class="highlight sh"><table><tr><td class="code"><pre><span class="line">service httpd restart</span><br></pre></td></tr></table></figure>
<p>  调整后目录显示效果如下：</p>
<p>  <img src="/assets/images2018/1546086571624.png" alt="图片2"></p>
<hr>
<p>(End)</p>
]]></content>
      <categories>
        <category>其它</category>
      </categories>
      <tags>
        <tag>else</tag>
      </tags>
  </entry>
</search>
